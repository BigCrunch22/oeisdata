%I A376485 #18 Sep 25 2024 15:40:48
%S A376485 561,1105,1729,2465,2821,75361,63973,1050985,6601,41041,29341,172081,
%T A376485 552721,852841,10877581,1256855041,8911,340561,15182481601,
%U A376485 72720130561,10585,15841,126217,825265,2433601,496050841,672389641,5394826801,24465723528961,1074363265,24172484701,62745,2806205689,22541365441,46657,2113921,6436473121,6557296321,13402361281,26242929505,65320532641,143873352001,105083995864811041
%N A376485 Carmichael numbers ordered by largest prime factor, then by size.
%e A376485 17: 561, 1105;
%e A376485 19: 1729;
%e A376485 23:
%e A376485 29: 2465;
%e A376485 31: 2821, 75361;
%e A376485 37: 63973, 1050985;
%e A376485 41: 6601, 41041;
%e A376485 43:
%e A376485 47:
%e A376485 53:
%e A376485 59:
%e A376485 61: 29341, 172081, 552721, 852841, 10877581, 1256855041;
%e A376485 67: 8911, 340561, 15182481601;
%e A376485 71: 72720130561;
%e A376485 73: 10585, 15841, 126217, 825265, 2433601, 496050841, 672389641, 5394826801, 24465723528961;
%e A376485 79: 1074363265, 24172484701
%e A376485 83:
%e A376485 89: 62745, 2806205689, 22541365441;
%e A376485 97: 46657, 2113921, 6436473121, 6557296321, 13402361281, 26242929505, 65320532641, 143873352001, 105083995864811041
%e A376485 101: 101101, 252601, 2100901, 9494101, 6820479601, 109038862801, 102967089120001
%o A376485 (PARI) \\ This program is inefficient and functions as proof-of-concept only.
%o A376485 Korselt(n)=my(f=factor(n)); for(i=1, #f[, 1], if(f[i, 2]>1||(n-1)%(f[i, 1]-1), return(0))); 1
%o A376485 car(n)=n%2 && !isprime(n) && Korselt(n) && n>1
%o A376485 row(k)=my(p=prime(k)); fordiv(prod(i=2,k-1,prime(i)),n,if(car(p*n), print1(p*n,", ")))
%o A376485 (Python)
%o A376485 from itertools import islice, combinations
%o A376485 from math import prod
%o A376485 from sympy import nextprime
%o A376485 def A376485_gen(): # generator of terms
%o A376485     plist, p = [3, 5], 7
%o A376485     while True:
%o A376485         clist = []
%o A376485         for l in range(2,len(plist)+1):
%o A376485             for q in combinations(plist,l):
%o A376485                 k = prod(q)*p-1
%o A376485                 if not (k%(p-1) or any(k%(r-1) for r in q)):
%o A376485                     clist.append(k+1)
%o A376485         yield from sorted(clist)
%o A376485         plist.append(p)
%o A376485         p = nextprime(p)
%o A376485 A376485_list = list(islice(A376485_gen(),43)) # _Chai Wah Wu_, Sep 25 2024
%Y A376485 Cf. A002997, A081702, A283715 (row lengths).
%K A376485 nonn,tabf
%O A376485 1,1
%A A376485 _Charles R Greathouse IV_, Sep 24 2024
