%I A376198 #15 Oct 04 2024 00:54:40
%S A376198 1,2,3,4,6,8,9,10,5,7,11,12,14,15,16,18,20,21,22,24,25,26,13,17,19,23,
%T A376198 27,28,30,32,33,34,35,36,38,39,40,42,44,45,46,48,49,50,51,52,54,55,56,
%U A376198 57,58,29,31,37,41,43,47,53,59,60,62,63,64,65,66,68,69,70,72,74,75,76,77,78,80,81,82,84,85,86,87,88,90,91,92,93,94
%N A376198 a(1) = 1, a(2) = 2. Thereafter, let smc and smp denote the smallest missing composite and smallest missing prime. If a(n) is composite, then if a(n) = 2*smp then a(n+1) = smp, otherwise a(n+1) = smc; if a(n) is a prime, then if smp < smc, a(n+1) = smp, otherwise a(n+1) = smc.
%C A376198 The composite terms appear in their natural order, as do the primes.
%C A376198 This is a simplified version of A3765564 (the difference being in the way the composite numbers are handled: here they appear in order, whereas in A375564  successive composite numbers must have a common gcd greater than 1).
%H A376198 Michael S. Branicky, <a href="/A376198/b376198.txt">Table of n, a(n) for n = 1..100000</a>
%o A376198 (Python)
%o A376198 from itertools import islice
%o A376198 from sympy import isprime, nextprime
%o A376198 def agen(): # generator of terms
%o A376198     an, smc, smp = 2, 4, 3
%o A376198     yield from [1, 2]
%o A376198     while True:
%o A376198         if not isprime(an):
%o A376198             an = smp if an == 2*smp else smc
%o A376198         else:
%o A376198             an = smp if smp < smc else smc
%o A376198         if an == smp: smp = nextprime(smp)
%o A376198         else:
%o A376198             smc += 1
%o A376198             while isprime(smc): smc += 1
%o A376198         yield an
%o A376198 print(list(islice(agen(), 87))) # _Michael S. Branicky_, Oct 03 2024
%Y A376198 Cf. A375564, A376199-A376201, A376750-A376754.
%Y A376198 See also A113646 (next composite number).
%K A376198 nonn,new
%O A376198 1,2
%A A376198 _N. J. A. Sloane_, Oct 03 2024
