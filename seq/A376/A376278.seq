%I A376278 #15 Sep 20 2024 23:55:15
%S A376278 1,2,3,4,5,6,7,8,9,10,11,13,17,19,22,23,26,41,46,47,53,55,59,74,83,91,
%T A376278 95,99,104,106,130,133,146,149,152,159,167,173,213,239,249,299,319,
%U A376278 383,454,467,545,613,623,636,641,646,698,916,931,1173,1197,1222,1257,1642,1650,1676,1760,1825,1916
%N A376278 Positions of records in A085908.
%C A376278 Numbers k such that for 1 <= j < k, the least 7-smooth number that starts with j is less than the least 7-smooth number that starts with k.
%C A376278 Record values are in A376280.
%H A376278 Robert Israel, <a href="/A376278/b376278.txt">Table of n, a(n) for n = 1..207</a>
%F A376278 A376280(n) = A085908(a(n)).
%e A376278 a(12) = 13 is a term because the least 7-smooth number starting with 13 is A085908(13) = 135 = 3^2 * 5 * 7, while A085908(j) < 135 for j < 13.
%p A376278 # using A085908 in the form of a list
%p A376278 J:= NULL: m:= 0: count:= 0:
%p A376278 for i from 1 to nops(A085908) do
%p A376278   if A085908[i] > m then
%p A376278     count:= count+1; m:= A085908[i];  J:= J,i
%p A376278   fi
%p A376278 od:
%p A376278 J;
%o A376278 (Python)
%o A376278 from itertools import count, islice
%o A376278 def A376278_gen(): # generator of terms
%o A376278     def f(x):
%o A376278         c = 0
%o A376278         i7 = 1
%o A376278         m = x
%o A376278         for i in count(0):
%o A376278             if i7 > x:
%o A376278                 break
%o A376278             j5 = 1
%o A376278             r = m
%o A376278             for j in count(0):
%o A376278                  if j5 > m:
%o A376278                      break
%o A376278                  k3 = 1
%o A376278                  t = r
%o A376278                  for k in count(0):
%o A376278                      if k3 > r:
%o A376278                          break
%o A376278                      c += t.bit_length()
%o A376278                      k3 *= 3
%o A376278                      t //= 3
%o A376278                  j5 *= 5
%o A376278                  r //= 5
%o A376278             i7 *= 7
%o A376278             m //= 7
%o A376278         return c
%o A376278     c = 1
%o A376278     yield 1
%o A376278     for n in count(2):
%o A376278         for l in count(0):
%o A376278             kmin, kmax = n*10**l-1, (n+1)*10**l-1
%o A376278             mmin, mmax = f(kmin), f(kmax)
%o A376278             if mmax>mmin:
%o A376278                 while kmax-kmin > 1:
%o A376278                     kmid = kmax+kmin>>1
%o A376278                     mmid = f(kmid)
%o A376278                     if mmid > mmin:
%o A376278                         kmax, mmax = kmid, mmid
%o A376278                     else:
%o A376278                         kmin, mmin = kmid, mmid
%o A376278                 break
%o A376278         if kmax > c:
%o A376278             yield n
%o A376278             c = kmax
%o A376278 A376278_list = list(islice(A376278_gen(),30)) # _Chai Wah Wu_, Sep 20 2024
%Y A376278 Cf. A085908, A376280.
%K A376278 nonn,base,changed
%O A376278 1,2
%A A376278 _Robert Israel_, Sep 18 2024
