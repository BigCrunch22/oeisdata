%I A376280 #20 Sep 20 2024 23:55:09
%S A376280 1,2,3,4,5,6,7,8,9,10,112,135,175,192,224,2304,2625,4116,4608,4704,
%T A376280 5376,55125,59049,74088,83349,91125,95256,99225,104976,1062882,
%U A376280 1306368,1333584,1469664,1492992,1524096,1594323,1679616,17360406,21337344,23914845,2490394032,29900390625,319070390625
%N A376280 Record values in A085908.
%C A376280 Numbers m that m is the least 7-smooth number that starts with some k, such that for all j < k there is a 7-smooth number < m that starts with j.
%C A376280 Positions of records are in A376278.
%H A376280 Robert Israel, <a href="/A376280/b376280.txt">Table of n, a(n) for n = 1..207</a>
%F A376280 a(n) = A085908(A376278(n)).
%e A376280 a(12) = 135 because 135 is the least 7-smooth number that starts with 13, and for every j < 13 there is a 7-smooth number less than 135 starting with j.
%p A376280 # using A085908 in the form of a list
%p A376280 R:= NULL: m:= 0: count:= 0:
%p A376280 for i from 1 to nops(A085908) do
%p A376280   if A085908[i] > m then
%p A376280     count:= count+1; m:= A085908[i];  R:= R, m
%p A376280   fi
%p A376280 od:
%p A376280 R;
%o A376280 (Python)
%o A376280 from itertools import count, islice
%o A376280 def A376280_gen(): # generator of terms
%o A376280     def f(x):
%o A376280         c = 0
%o A376280         i7 = 1
%o A376280         m = x
%o A376280         for i in count(0):
%o A376280             if i7 > x:
%o A376280                 break
%o A376280             j5 = 1
%o A376280             r = m
%o A376280             for j in count(0):
%o A376280                  if j5 > m:
%o A376280                      break
%o A376280                  k3 = 1
%o A376280                  t = r
%o A376280                  for k in count(0):
%o A376280                      if k3 > r:
%o A376280                          break
%o A376280                      c += t.bit_length()
%o A376280                      k3 *= 3
%o A376280                      t //= 3
%o A376280                  j5 *= 5
%o A376280                  r //= 5
%o A376280             i7 *= 7
%o A376280             m //= 7
%o A376280         return c
%o A376280     c = 1
%o A376280     yield 1
%o A376280     for n in count(2):
%o A376280         for l in count(0):
%o A376280             kmin, kmax = n*10**l-1, (n+1)*10**l-1
%o A376280             mmin, mmax = f(kmin), f(kmax)
%o A376280             if mmax>mmin:
%o A376280                 while kmax-kmin > 1:
%o A376280                     kmid = kmax+kmin>>1
%o A376280                     mmid = f(kmid)
%o A376280                     if mmid > mmin:
%o A376280                         kmax, mmax = kmid, mmid
%o A376280                     else:
%o A376280                         kmin, mmin = kmid, mmid
%o A376280                 break
%o A376280         if kmax > c:
%o A376280             yield kmax
%o A376280             c = kmax
%o A376280 A376280_list = list(islice(A376280_gen(),30)) # _Chai Wah Wu_, Sep 20 2024
%Y A376280 Cf. A002473, A085908, A376278.
%K A376280 nonn,base
%O A376280 1,2
%A A376280 _Robert Israel_, Sep 18 2024
