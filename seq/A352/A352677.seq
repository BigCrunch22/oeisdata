%I A352677 #52 Jul 07 2022 05:02:47
%S A352677 1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,0,1,0,0,0,1,0,1,0,1,0,0,0,
%T A352677 0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,
%U A352677 0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,0,0,0,0,0,1,0
%N A352677 Binary expansion of largest number whose expansions in base 2 and in base phi = (1+sqrt(5))/2 are identical.
%H A352677 Chittaranjan Pardeshi, <a href="/A352677/a352677.py.txt">Python program</a>
%F A352677 a(2)*phi + a(1) + a(0)/phi + ... + a(n)/phi^(1-n) + ... = a(2)*2 + a(1) + a(0)/2 + ... + a(n)/2^(1-n) + ....
%F A352677 A binary identical number is a number which shares the same digits in two different bases, b1 and b2, where 1 < b1 < b2 <= 2.
%F A352677 Here b2 = 2 and b1 = phi and initial digits "11." are the largest possible.
%F A352677 Algorithm:
%F A352677    1. set s1 = b1+1
%F A352677    2. set s2 = b2+1
%F A352677    3. output 1,1 # two digits above radix point
%F A352677    4. set i = 0
%F A352677    5. while s1 < s2:
%F A352677    6.     i = i - 1
%F A352677    7.     if s1 + b1^i <= s2 + b2^i:
%F A352677    8.         s1 += b1^i
%F A352677    9.         s2 += b2^i
%F A352677   10.         output 1
%F A352677   11.     else:
%F A352677   12.         output 0
%e A352677 11.11100001000100010100100010101000000010..., which in both binary and base phi is decimal 3.87916998...
%o A352677 (PARI)
%o A352677 f(b1,b2,len) = {
%o A352677     my(d=0,c);
%o A352677     vector(len, i,
%o A352677         if((c=d+b1^(2-i)-b2^(2-i)) <= 0,
%o A352677             d = c;
%o A352677             1,
%o A352677             0))
%o A352677 };
%o A352677 print(f(quadgen(5),2,1000));
%Y A352677 Cf. A001622 (phi).
%Y A352677 Cf. A355328 (decimal + 1/2 = binary).
%K A352677 nonn,cons,base
%O A352677 2
%A A352677 _Chittaranjan Pardeshi_, Mar 27 2022
