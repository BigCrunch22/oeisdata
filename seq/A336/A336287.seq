%I A336287 #26 Feb 16 2025 08:34:00
%S A336287 2,0,28,0,20,0,28,0,28,144,28,0,28,0,10556,426,10556,0,10556,426,
%T A336287 10556,104,28,0,10556,426,10556,104,28,0,10556,104,10556,426,28,426,
%U A336287 28,0,28,426,28,1896,10556,1896,10556,0,28,426,28,426,10556,0,28,1896,10556
%N A336287 Period of orbit of Post's tag system ({0,1},{(0,1),(1,00110)},3,100^n).
%C A336287 In general a tag as defined by Emil Leon Post, is given by a 4-tuple (Sigma,AF,n,w0), where Sigma is some (nonempty) set of symbols called the alphabet, AF is the associated function (sometimes also called set of production rules) AF: Sigma -> Sigma*, n is the deletion number and w0 the initial string.
%C A336287 From the starting sequence we obtain a new string in each step by adjoining the string associated to the prefix symbol of the string, where after the prefix n symbols are removed from the string.
%C A336287 The decision problem is: will the tag end up in an empty string, a(n) = 0 or not, a(n) <> 0?
%C A336287 a(n) is an even number. Proof: for each cycle the number of associations (productions) 0 -> 1 must equal the number of associations (productions) 1 -> 00110 applied within a cycle.
%H A336287 Sean A. Irvine, <a href="https://github.com/archmageirvine/joeis/blob/master/src/irvine/oeis/a336/A336287.java">Java program</a> (github)
%H A336287 Emil L. Post, <a href="http://www.lib.ysu.am/articles_art/63062f3ed126193beb426becc0fbbe33.pdf">Formal reductions of the general combinatorial decision problem.</a>, American Journal of Mathematics, Vol. 65, No. 2 (Apr., 1943), pp. 197-215.
%H A336287 Eric Weisstein's World of Mathematics, <a href="https://mathworld.wolfram.com/TagSystem.html">Tag System</a>
%o A336287 (Python)
%o A336287 def step(w):
%o A336287     i = 0
%o A336287     while w[0] != alfabet[i]:
%o A336287         i = i+1
%o A336287     w = w+suffix[i]
%o A336287     return w[n:len(w)]
%o A336287 alfabet, suffix, n, ws, w0, m = "01", ["1","00110"], 3, "100", "", 0
%o A336287 while m >= 0:
%o A336287     w0, m = w0+ws, m+1
%o A336287     w, ww, i, a = w0, w0, 0, 0
%o A336287     while w != "" and a == 0:
%o A336287         w, i = step(w), i+1
%o A336287         if i%100000 == 0:
%o A336287             ww = w
%o A336287         else:
%o A336287             if w == ww or w == "":
%o A336287                 if w != "":
%o A336287                     a = i%100000
%o A336287                 print(m,a)
%Y A336287 Cf. A291793, A292091, A336327.
%K A336287 nonn
%O A336287 1,1
%A A336287 _A.H.M. Smeets_, Jul 16 2020
