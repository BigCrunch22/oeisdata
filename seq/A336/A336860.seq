%I A336860 #52 Jan 29 2025 19:37:19
%S A336860 1,2,3,2,3,4,5,6,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,10,3,4,5,6,7,8,9,10,11,
%T A336860 12,13,4,5,6,7,8,9,10,11,12,13,14,15,16,5,6,7,8,9,10,11,12,13,14,15,
%U A336860 16,17,18,19,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22
%N A336860 a(n) = 1 + the total remainder when repeatedly taking integer square roots until 1 is reached.
%C A336860 a(n+1) - a(n) <= 1 but not bounded from below.
%C A336860 a(n) <= n.
%F A336860 a(1) = 1; a(k^2) = a(k); a(k+1) = a(k)+1 for k not square.
%e A336860 a(9) = a(3) = 3 since 9 = 3^2 and a(6) = a(5) + 1 = 4 as 6 is not a square.
%e A336860 a(1000) = a(31) + 39 = a(5) + 6 + 39 = a(2) + 1 + 6 + 39 = 48.
%t A336860 a[1] = 1; a[n_] := a[n] = n - (s = Floor @ Sqrt[n])^2 + a[s]; Array[a, 100] (* _Amiram Eldar_, Sep 30 2020 *)
%o A336860 (Python)
%o A336860 from gmpy2 import is_square, isqrt
%o A336860 def a(n):
%o A336860   if n == 1:
%o A336860     return 1
%o A336860   return a(isqrt(n)) + n - isqrt(n) ** 2
%o A336860 (Python)
%o A336860 from gmpy2 import is_square, isqrt
%o A336860 a = [0, 1]
%o A336860 n = 20
%o A336860 for i in range(2, n+1):
%o A336860   if is_square(i):
%o A336860     a.append(a[isqrt(i)])
%o A336860   else:
%o A336860     a.append(a[i-1]+1)
%o A336860 a.pop(0)
%o A336860 print(a)
%o A336860 (PARI) a(n)={my(t=0); while(n > 1, my(k=sqrtint(n)); t+=(n-k^2); n=k); t+n} \\ _Andrew Howroyd_, Sep 29 2020
%Y A336860 Cf. A053186.
%K A336860 nonn,easy
%O A336860 1,2
%A A336860 _Valentin Imbach_, Sep 28 2020
