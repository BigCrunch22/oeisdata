%I A267374 #14 Mar 23 2024 19:48:27
%S A267374 2,5,7,10,14,17,19,21,24,26,29,32,34,38,41,43,46,51,54,56,59,63,65,68,
%T A267374 70,73,77,80,83,85,88,92,96,99,101,104,108,111,113,115,118,120,123,
%U A267374 127,130,132,135,138,140,143,147,150,152,154,157,159,162,165,167,170,172,175,179,182,184,186,189,191,194,197
%N A267374 Positions of 1's in A267371.
%H A267374 Michael S. Branicky, <a href="/A267374/b267374.txt">Table of n, a(n) for n = 1..10000</a>
%e A267374 In A267371, the first few terms are 0,1,0,0,1, so the first two terms of this sequence are 2, 5.
%t A267374 (* Function a267371[] is defined in A267371 *)
%t A267374 a267374[n_] := Flatten[Position[a267371[n], 1]]
%t A267374 a267374[15] (* _Hartmut F. W. Hoft_, Mar 23 2024 *)
%o A267374 (Python)
%o A267374 from itertools import count, islice
%o A267374 def bgen(): # generator of A267371
%o A267374     astr, k, mink = "01", 2, 1
%o A267374     while True:
%o A267374         yield from map(int, astr[:k])
%o A267374         for k in range(1, len(astr)+1):
%o A267374             if astr[1:].count(astr[:k]) == 0:
%o A267374                 break
%o A267374         mink = max(mink, k)
%o A267374         astr += astr[:k]
%o A267374 def agen(): # generator of terms
%o A267374     yield from (n for n, an in enumerate(bgen(), 1) if an == 1)
%o A267374 print(list(islice(agen(), 70))) # _Michael S. Branicky_, Mar 23 2024
%K A267374 nonn,changed
%O A267374 1,1
%A A267374 _Jeffrey Shallit_, Jan 13 2016
