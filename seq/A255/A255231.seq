%I A255231 #53 May 24 2017 14:40:50
%S A255231 1,1,1,2,1,1,1,2,2,1,1,2,1,1,1,4,1,2,1,2,1,1,1,3,2,1,2,2,1,1,1,5,1,1,
%T A255231 1,4,1,1,1,3,1,1,1,2,2,1,1,5,2,2,1,2,1,3,1,3,1,1,1,2,1,1,2,7,1,1,1,2,
%U A255231 1,1,1,6,1,1,2,2,1,1,1,5,4,1,1,2,1,1,1,3,1,2,1,2,1,1,1,6,1,2,2,4,1,1,1,3,1,1,1,6,1,1,1,5,1,1,1,2,2,1,1,3
%N A255231 The number of factorizations n = Product_i b_i^e_i, where all bases b_i are distinct, and all exponents e_i are distinct >=1.
%C A255231 Not multiplicative: a(48) = a(2^4*3) = 5 <> a(2^4)*a(3) = 4*1 = 4. - _R. J. Mathar_, Nov 05 2016
%H A255231 R. J. Mathar, <a href="/A255231/b255231.txt">Table of n, a(n) for n = 1..419</a>
%H A255231 R. J. Mathar, <a href="/A255231/a255231.pdf">Factorizations of integers into factors with distinct bases and exponents</a>
%H A255231 <a href="/index/Pri#prime_signature">Index to sequences related to prime signature</a>
%F A255231 a(n)=1 for all n in A005117. a(n)=2 for all n in A001248 and for all n in A054753 and for all n in A085987 and for all n in A030078. a(n)=3 for all n in A065036. a(n)=4 for all n in A085986 and for all n in A030514. a(n)=5 for all n in A178739, all n in A179644 and for all n in A050997. a(n)=6 for all n in A143610, all n in A162142 and all n in A178740. a(n)=7 for all n in A030516. a(n)=9 for all n in A189988 and all n in A189987. a(n)=10 for all n in A092759. a(n) = 11 for all n in A179664. a(n)=12 for all n in A179646. - _R. J. Mathar_, Nov 05 2016, May 20 2017
%e A255231 From _R. J. Mathar_, Nov 05 2016: (Start)
%e A255231 a(4)=2: 4^1 = 2^2.
%e A255231 a(8)=2: 8^1 = 2^3.
%e A255231 a(9)=2: 9^1 = 3^2.
%e A255231 a(12)=2: 12^1 = 2^2*3^1.
%e A255231 a(16)=4: 16^1 = 4^2 = 2^2*4^1 = 2^4.
%e A255231 a(18)=2: 18^1 = 2*3^2.
%e A255231 a(20)=2: 20^1 = 2^2*5^1.
%e A255231 a(24)=3: 24^1 = 2^2*6^1 = 2^3*3^1.
%e A255231 a(32)=5: 32^1 = 2^1*4^2 = 2^2*8^1 = 2^3*4^1 = 2^5.
%e A255231 a(36)=4: 36^1 = 6^2 = 3^2*4^1 = 2^2*9^1.
%e A255231 a(48)=5: 48^1 = 3^1*4^2 = 2^2*12^1 = 2^3*6^1 = 2^4*3^1.
%e A255231 a(60)=2 : 60^1 = 2^2*15^1.
%e A255231 a(64)=7: 64^1 = 8^2 = 4^3 = 2^2*16^1 = 2^3*8^1 = 2^4*4^1 = 2^6.
%e A255231 a(72)=6 : 72^1 = 3^2*8^1 = 2^1*6^2 = 2^2*18^1 = 2^3*9^1 = 2^3*3^2.
%e A255231 (End)
%p A255231 # Count solutions for products if n = dvs_i^exps(i) where i=1..pividx are fixed
%p A255231 Apiv := proc(n,dvs,exps,pividx)
%p A255231     local dvscnt, expscopy,i,a,expsrt,e ;
%p A255231     dvscnt := nops(dvs) ;
%p A255231     a := 0 ;
%p A255231     if pividx > dvscnt then
%p A255231         # have exhausted the exponent list: leave of the recursion
%p A255231         # check that dvs_i^exps(i) is a representation
%p A255231         if n = mul( op(i,dvs)^op(i,exps),i=1..dvscnt) then
%p A255231             # construct list of non-0 exponents
%p A255231             expsrt := [];
%p A255231             for i from 1 to dvscnt do
%p A255231                 if op(i,exps) > 0 then
%p A255231                     expsrt := [op(expsrt),op(i,exps)] ;
%p A255231                 end if;
%p A255231             end do;
%p A255231             # check that list is duplicate-free
%p A255231             if nops(expsrt) = nops( convert(expsrt,set)) then
%p A255231                 return 1;
%p A255231             else
%p A255231                 return 0;
%p A255231             end if;
%p A255231         else
%p A255231             return 0 ;
%p A255231         end if;
%p A255231     end if;
%p A255231     # need a local copy of the list to modify it
%p A255231     expscopy := [] ;
%p A255231     for i from 1 to nops(exps) do
%p A255231         expscopy := [op(expscopy),op(i,exps)] ;
%p A255231     end do:
%p A255231     # loop over all exponents assigned to the next base in the list.
%p A255231     for e from 0 do
%p A255231         candf := op(pividx,dvs)^e ;
%p A255231         if modp(n,candf) <> 0 then
%p A255231             break;
%p A255231         end if;
%p A255231         # assign e to the local copy of exponents
%p A255231         expscopy := subsop(pividx=e,expscopy) ;
%p A255231         a := a+procname(n,dvs,expscopy,pividx+1) ;
%p A255231     end do:
%p A255231     return a;
%p A255231 end proc:
%p A255231 A255231 := proc(n)
%p A255231     local dvs,dvscnt,exps ;
%p A255231     if n = 1 then
%p A255231         return 1;
%p A255231     end if;
%p A255231     # candidates for the bases are all divisors except 1
%p A255231     dvs := convert(numtheory[divisors](n) minus {1},list) ;
%p A255231     dvscnt := nops(dvs) ;
%p A255231     # list of exponents starts at all-0 and is
%p A255231     # increased recursively
%p A255231     exps := [seq(0,e=1..dvscnt)] ;
%p A255231     # take any subset of dvs for the bases, i.e. exponents 0 upwards
%p A255231     Apiv(n,dvs,exps,1) ;
%p A255231 end proc:
%p A255231 seq(A255231(n),n=1..120) ; # _R. J. Mathar_, Nov 05 2016
%Y A255231 Cf. A000688 (b_i not necessarily distinct).
%Y A255231 Cf. A001248, A005117, A030078, A030514, A054753, A065036, A085986, A085987, A143610, A178739.
%K A255231 nonn
%O A255231 1,4
%A A255231 _Saverio Picozzi_, Feb 18 2015
%E A255231 Values corrected. Incorrect comments removed. - _R. J. Mathar_, Nov 05 2016
