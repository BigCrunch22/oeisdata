%I A365515 #22 Mar 01 2024 15:29:18
%S A365515 0,0,1,0,1,2,0,1,3,3,0,1,4,7,4,0,1,5,13,12,5,0,1,6,21,32,20,6,0,1,7,
%T A365515 31,55,71,30,7,0,1,8,43,108,153,124,44,8,0,1,9,57,154,366,368,218,65,
%U A365515 9,0,1,10,73,256,668,926,856,375,80,10,0,1,11,91,333,1153,2214,2286,1424,572,96,11
%N A365515 Table read by antidiagonals upward: the n-th row gives the lexicographically earliest infinite B_n sequence starting from 0.
%C A365515 A B_n sequence is a sequence such that all sums a(x_1) + a(x_2) + ... + a(x_n) are distinct for 1 <= x_1 <= x_2 <= ... <= x_n. Analogous to A347570 except that here the B_n sequences start from a(1) = 0.
%H A365515 Chai Wah Wu, <a href="/A365515/b365515.txt">Table of n, a(n) for n = 1..242</a>
%H A365515 Eric Weisstein's World of Mathematics, <a href="http://mathworld.wolfram.com/B2-Sequence.html">B2 Sequence</a>.
%F A365515 a(n) = A347570(n)-1.
%e A365515 Table begins:
%e A365515 n\k | 1  2   3   4    5     6      7      8       9
%e A365515 ----+---------------------------------------------------
%e A365515   1 | 0, 1,  2,  3,   4,    5,     6,     7,      8, ...
%e A365515   2 | 0, 1,  3,  7,  12,   20,    30,    44,     65, ...
%e A365515   3 | 0, 1,  4, 13,  32,   71,   124,   218,    375, ...
%e A365515   4 | 0, 1,  5, 21,  55,  153,   368,   856,   1424, ...
%e A365515   5 | 0, 1,  6, 31, 108,  366,   926,  2286,   5733, ...
%e A365515   6 | 0, 1,  7, 43, 154,  668,  2214,  6876,  16864, ...
%e A365515   7 | 0, 1,  8, 57, 256, 1153,  4181, 14180,  47381, ...
%e A365515   8 | 0, 1,  9, 73, 333, 1822,  8043, 28296, 102042, ...
%e A365515   9 | 0, 1, 10, 91, 500, 3119, 13818, 59174, 211135, ...
%o A365515 (Python)
%o A365515 from itertools import count, islice, combinations_with_replacement
%o A365515 def A365515_gen(): # generator of terms
%o A365515     asets, alists, klist = [set()], [[]], [0]
%o A365515     while True:
%o A365515         for i in range(len(klist)-1,-1,-1):
%o A365515             kstart, alist, aset = klist[i], alists[i], asets[i]
%o A365515             for k in count(kstart):
%o A365515                 bset = set()
%o A365515                 for d in combinations_with_replacement(alist+[k],i):
%o A365515                     if (m:=sum(d)+k) in aset:
%o A365515                         break
%o A365515                     bset.add(m)
%o A365515                 else:
%o A365515                     yield k
%o A365515                     alists[i].append(k)
%o A365515                     klist[i] = k+1
%o A365515                     asets[i].update(bset)
%o A365515                     break
%o A365515         klist.append(0)
%o A365515         asets.append(set())
%o A365515         alists.append([])
%o A365515 A365515_list = list(islice(A365515_gen(),30))
%Y A365515 Cf. A001477 (n=1), A025582 (n=2), A051912 (n=3), A365300 (n=4), A365301 (n=5), A365302 (n=6), A365303 (n=7), A365304 (n=8), A365305 (n=9), A002061 (k=4), A369817 (k=5), A369818 (k=6), A369819 (k=7), A347570.
%K A365515 nonn,tabl,changed
%O A365515 1,6
%A A365515 _Chai Wah Wu_, Sep 07 2023
