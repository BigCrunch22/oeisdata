%I A287178 #21 Sep 05 2023 18:26:14
%S A287178 1,2,4,8,10,16,20,28,42,30,32,52,50,68,44,96,76,142,80,148,180,56,138,
%T A287178 226,94,188,108,92,286,306,166,256,98,498,150,266,450,250,262,540,290,
%U A287178 460,398,474,412,402,598,272,692,144,544,240,110,906,494,752,854,248
%N A287178 Smallest number such that the circular adjacent sum set has no multiple entries.
%C A287178 Let a1, a2, ..., ak be the first k terms of a sequence. The term "circular adjacent sum set" is the set of sums of 1 to k adjacent terms, where a1 is taken to be adjacent to ak. For example if the first 3 terms of the sequence are 1, 2, and 4 then the circular adjacent sum set is {1,2,4,3,6,5,7}.
%C A287178 Another example. If the first three terms of the sequence are 1,2,3 then the circular adjacent sum set is {1,2,3,3,5,4,7}. One element is repeated because 3 is the sum of adjacent elements in 2 ways, as 3 and as 1+2.
%e A287178 For n=4, and a(1)=1, a(2)=2, and a(3)=4. a(4) cannot be 1, 2, or 3 because then there would be two different sums equal to 3. a(4) cannot be 5 because 5+1=2+4. It cannot be 6 because 6=2+4. It cannot be 7 because 7=4+2+1. For a(4)=8 the circular adjacent sum set is {1,2,4,8,3,6,12,9,7,14,13,11,15}. All 13 of these sums are different, so a(4) is 8.
%t A287178 ok[v_] := Block[{w = v, n = Length@v}, w=Reap[Do[w = RotateLeft[w]; Do[Sow[ Total@ Take[w, j]], {j, n - 1}], {n}]][[2, 1]]; Length[w] == Length@ Union@ w]; a = {1}; While[Length[a] < 30, AppendTo[a, 2]; While[! ok[a], a[[-1]]++]]; a (* _Giovanni Resta_, May 30 2017 *)
%o A287178 (Python)
%o A287178 a, isums, lsums, rsums, xsums = [], set(), set([0]), set([0]), set([0])
%o A287178 for i in range(100):
%o A287178     for new in range(1, sum(a)+2):
%o A287178         nrsums, nxsums = set([0]), set([0])
%o A287178         for x in rsums:
%o A287178             xn = x+new
%o A287178             if xn in isums or xn in lsums:
%o A287178                 break
%o A287178             nrsums.add(xn)
%o A287178         else:
%o A287178             for x in xsums.union(lsums):
%o A287178                 xn = x+new
%o A287178                 if xn in isums or xn in rsums or xn in lsums:
%o A287178                     break
%o A287178                 nxsums.add(xn)
%o A287178             else:
%o A287178                 a.append(new)
%o A287178                 isums.update(rsums)
%o A287178                 xsums, rsums = nxsums, nrsums
%o A287178                 lsums.add(sum(a))
%o A287178                 break
%o A287178 print(a)
%o A287178 # _Andrey Zabolotskiy_, May 30 2017
%o A287178 (Python)
%o A287178 from itertools import count, islice
%o A287178 def A287178_gen(): # generator of terms
%o A287178     aset1, aset2, alist, n = set(), set(), [], 0
%o A287178     for k in count(1,2):
%o A287178         bset2 = {k<<1}
%o A287178         if (k<<1) not in aset2:
%o A287178             for d in aset1:
%o A287178                 if (m:=d+k) in aset2:
%o A287178                     break
%o A287178                 bset2.add(m)
%o A287178             else:
%o A287178                 yield k-n
%o A287178                 n = k
%o A287178                 alist.append(k)
%o A287178                 aset1.add(k)
%o A287178                 aset2.update(bset2)
%o A287178 A287178_list = list(islice(A287178_gen(),41)) # _Chai Wah Wu_, Sep 05 2023
%K A287178 nonn
%O A287178 1,2
%A A287178 _David S. Newman_, May 21 2017
%E A287178 More terms from _Andrey Zabolotskiy_, May 30 2017
