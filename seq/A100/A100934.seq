%I A100934 #19 Jun 28 2021 02:48:43
%S A100934 6,24,120,210,720,5040,40320,175560,362880,3628800,17297280,19958400,
%T A100934 39916800,259459200,479001600,6227020800,87178291200,1307674368000,
%U A100934 20922789888000,355687428096000,6402373705728000,20274183401472000,121645100408832000
%N A100934 Numbers having more than one representation as the product of consecutive integers.
%C A100934 All the factorials occur because we allow products to start with 1. See A064224 for a more restrictive case.
%H A100934 Michael S. Branicky, <a href="/A100934/b100934.txt">Table of n, a(n) for n = 1..26</a>
%H A100934 H. L. Abbott, P. Erdos and D. Hanson, <a href="http://www.jstor.org/stable/2319526">On the numbers of times an integer occurs as a binomial coefficient</a>, Amer. Math. Monthly, (March 1974), 256-261.
%e A100934 120 is a term since 120 = 1*2*3*4*5 = 2*3*4*5 = 4*5*6.
%e A100934 210 is a term since 210 = 14*15 = 5*6*7.
%e A100934 Other non-factorial terms are:
%e A100934   175560    = Product_{i=55..57} i = Product_{i=19..22} i,
%e A100934   17297280  = Product_{i=63..66} i = Product_{i= 8..14} i,
%e A100934   19958400  = Product_{i= 5..12} i = Product_{i= 3..11} i,
%e A100934   259459200 = Product_{i= 8..15} i = Product_{i= 5..13} i,
%e A100934   20274183401472000 = Product_{i=6..20} i = Product_{i=4..19} i.
%t A100934 nn=10^10; t3={}; Do[m=0; p=n; While[m++; p=p(n+m); p<=nn, t3={t3, p}], {n, Sqrt[nn]}]; t3=Sort[Flatten[t3]]; lst={}; Do[If[t3[[i]]==t3[[i+1]], AppendTo[lst, t3[[i]]]], {i, Length[t3]-1}]; Union[lst]
%o A100934 (Python)
%o A100934 import heapq
%o A100934 def aupton(terms, verbose=False):
%o A100934     p = 1*2; h = [(p, 1, 2)]; nextcount = 3; alst = []; oldv = None
%o A100934     while len(alst) < terms:
%o A100934         (v, s, l) = heapq.heappop(h)
%o A100934         if v == oldv and v not in alst:
%o A100934             alst.append(v)
%o A100934             if verbose: print(f"{v}, [= Prod_{{i = {s}..{l}}} i = Prod_{{i = {olds}..{oldl}}} i]")
%o A100934         if v >= p:
%o A100934             p *= nextcount
%o A100934             heapq.heappush(h, (p, 1, nextcount))
%o A100934             nextcount += 1
%o A100934         oldv, olds, oldl = v, s, l
%o A100934         v //= s; s += 1; l += 1; v *= l
%o A100934         heapq.heappush(h, (v, s, l))
%o A100934     return alst
%o A100934 print(aupton(20, verbose=True)) # _Michael S. Branicky_, Jun 24 2021
%Y A100934 Cf. A064224, A003015 (numbers occurring 5 or more times in Pascal's triangle).
%K A100934 nonn
%O A100934 1,1
%A A100934 _T. D. Noe_, Nov 22 2004
%E A100934 a(18) and beyond from _Michael S. Branicky_, Jun 24 2021
