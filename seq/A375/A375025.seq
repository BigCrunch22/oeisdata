%I A375025 #12 Aug 18 2024 01:44:11
%S A375025 1,-2,1,3,-2,1,-4,2,-2,1,6,-2,1,-2,1,-10,5,0,0,-2,1,15,-10,5,2,-1,-2,
%T A375025 1,-20,10,-12,6,4,-2,-2,1,30,-8,4,-16,8,6,-3,-2,1,-52,26,8,-4,-22,11,
%U A375025 8,-4,-2,1,78,-60,30,30,-15,-30,15,10,-5,-2,1
%N A375025 Triangle read by rows: Matrix inverse of row-reversed A374439.
%e A375025 Triangle starts:
%e A375025   [0] [  1]
%e A375025   [1] [ -2,   1]
%e A375025   [2] [  3,  -2,   1]
%e A375025   [3] [ -4,   2,  -2,   1]
%e A375025   [4] [  6,  -2,   1,  -2,   1]
%e A375025   [5] [-10,   5,   0,   0,  -2,  1]
%e A375025   [6] [ 15, -10,   5,   2,  -1, -2,  1]
%e A375025   [7] [-20,  10, -12,   6,   4, -2, -2,  1]
%e A375025   [8] [ 30,  -8,   4, -16,   8,  6, -3, -2,  1]
%e A375025   [9] [-52,  26,   8,  -4, -22, 11,  8, -4, -2, 1]
%p A375025 A := (n,k) -> ifelse(k::odd,2,1)*binomial(n-irem(k,2)-iquo(k,2),iquo(k,2)):
%p A375025 ARevRow := n -> local k; [seq(A(n, n-k), k = 0..n)]:
%p A375025 M := m -> Matrix(m, (n, k) -> ifelse(k > n, 0, ARevRow(n-1)[k])):
%p A375025 T := n -> LinearAlgebra:-MatrixInverse(M(n)): T(11);
%o A375025 (Python)
%o A375025 from functools import cache
%o A375025 @cache
%o A375025 def Trow(n):
%o A375025     if n == 0: return [1]
%o A375025     if n == 1: return [-2, 1]
%o A375025     fli = Trow(n - 1)
%o A375025     row = [1] * (n + 1)
%o A375025     row[n - 1] = -2
%o A375025     for k in range(n - 2, 0, -1):
%o A375025         row[k] = fli[k - 1] - fli[k + 1]
%o A375025     row[0] = -2 * fli[0] - fli[1]
%o A375025     return row
%o A375025 # _Peter Luschny_, Aug 18 2024
%Y A375025 Column 0 and row sums: A086990, A090412; alternating row sums: A375026.
%Y A375025 Cf. A374439.
%K A375025 sign,tabl,new
%O A375025 0,2
%A A375025 _Peter Luschny_, Aug 07 2024
