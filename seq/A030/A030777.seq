%I A030777 #22 Aug 06 2024 20:48:36
%S A030777 3,1,2,1,3,1,3,6,2,5,1,1,7,4,6,1,3,2,1,8,5,9,1,1,2,4,4,2,10,7,12,1,1,
%T A030777 2,2,4,5,5,5,11,10,15,1,2,1,3,3,3,5,6,9,7,12,13,18,1,2,1,4,2,4,5,4,7,
%U A030777 8,11,8,16,15,21,1,2,1,4,2,5,4,5,6,7,9,9,13,12
%N A030777 The first list after the following procedure: starting with a list [3] and an empty list, repeatedly add the distinct values in both lists in descending order to the second list and add the corresponding frequencies of those values to the first list.
%C A030777 The length of the first row after stage k is 1, 2, 4, 7, 10, 15, 22, 31, 42, 55, 70, 87, 106, ... - _Peter Kagey_, Apr 09 2020
%H A030777 Peter Kagey, <a href="/A030777/b030777.txt">Table of n, a(n) for n = 1..9939</a> (First 80 stages)
%e A030777 Stage 1: [
%e A030777   [3],
%e A030777   []
%e A030777 ]
%e A030777 Stage 2: [
%e A030777   [3, 1],
%e A030777      [3]
%e A030777 ]
%e A030777 Stage 3: [
%e A030777   [3, 1, 2, 1],
%e A030777      [3, 3, 1]
%e A030777 ]
%e A030777 Stage 4: [
%e A030777   [3, 1, 2, 1, 3, 1, 3],
%e A030777      [3, 3, 1, 3, 2, 1]
%e A030777 ]
%e A030777 Stage 5: [
%e A030777   [3, 1, 2, 1, 3, 1, 3, 6, 2, 5],
%e A030777      [3, 3, 1, 3, 2, 1, 3, 2, 1]
%e A030777 ]
%e A030777 Stage 6: [
%e A030777   [3, 1, 2, 1, 3, 1, 3, 6, 2, 5, 1, 1, 7, 4, 6],
%e A030777      [3, 3, 1, 3, 2, 1, 3, 2, 1, 6, 5, 3, 2, 1]
%e A030777 ]
%o A030777 (Ruby)
%o A030777 def a030777_list(generations)
%o A030777     rows = [[3], []]
%o A030777     (2..generations).each do
%o A030777         new_additions = rows.flatten.uniq.sort.reverse.map do |j|
%o A030777             [rows.flatten.count(j), j]
%o A030777         end
%o A030777         rows = rows.zip(new_additions.transpose).map { |r, n| r + n }
%o A030777     end
%o A030777     rows[0]
%o A030777 end # _Peter Kagey_, Apr 09 2020
%Y A030777 The second row is A030778.
%Y A030777 Cf. A030717.
%K A030777 nonn
%O A030777 1,1
%A A030777 _Clark Kimberling_
