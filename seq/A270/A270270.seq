%I A270270 #25 May 10 2021 03:48:36
%S A270270 4,6,17,45,131,381,1123,3334,9973,29991,90601,274746,835844,2549874,
%T A270270 7797469,23894630,73358721,225589420,694745922,2142444490,6614766985,
%U A270270 20445300258,63256499281,195890524486,607136782567,1883199766658,5845450449249,18156369461770,56429925440218
%N A270270 The number of n-digit numbers in A270048.
%C A270270 Conjecture: lim_{n -> infinity} a(n)/a(n-1) = sqrt(10).
%C A270270 (Similar to A265108, where we count the n-digit numbers of A264847, pluritriangular numbers.)
%C A270270 It is not possible to count some hundred-digit numbers without a "climbing algorithm" (see also Program and Links).
%H A270270 Francesco Di Matteo, <a href="/A270270/b270270.txt">Table of n, a(n) for n = 1..300</a>
%H A270270 Francesco Di Matteo, <a href="/A270270/a270270.pdf">Calculating the A270270 terms</a>
%e A270270 a(1) = 4 because in A270048 there are 4 numbers with 1 digit (0, 1, 3, 6).
%e A270270 a(2) = 6 because in A270048 there are 8 numbers with 2 digits (10, 20, 32, 46, 62, 80).
%o A270270 (Python)
%o A270270 # init values
%o A270270 seq = [4]   # the output list
%o A270270 somme = [4] # the n-value list after the adding of the last seq term
%o A270270 last = [10] # last a(n) term, or the first k-digit number (10 with k=2)
%o A270270 # CLIMBING loop, put a bigger value if you want
%o A270270 for n in range (1,30):
%o A270270   k = (len(somme)+1)     # the digits number
%o A270270   limit = 10**k          # the newest value to achieve
%o A270270   base = (somme[-1]+1)*k # this is the (n+1)*k value
%o A270270   hypo = seq[-1]*3       # to obtain rapidly the limite value
%o A270270   rid = 10**(len(str(hypo))-1) # the reduction factor
%o A270270   # Adjustment LOOP #
%o A270270   s, p, m = 0, 0, 0
%o A270270   while s < 1:
%o A270270     diff_1 = (base + (base + (k*(hypo-1))))*float(hypo)/2
%o A270270     tot = last[-1] + diff_1
%o A270270     if tot < limit:
%o A270270       p = 1
%o A270270       if m == 1 and rid > 1:
%o A270270         m = 0; rid = rid/10
%o A270270       hypo = hypo + rid
%o A270270     else:
%o A270270       diff_2 = (base + (base + (k*(hypo-2))))*float(hypo-1)/2
%o A270270       tot = last[-1] + diff_2
%o A270270       if tot > limit:
%o A270270         m = 1
%o A270270         if p == 1 and rid > 1:
%o A270270           p = 0; rid = rid/10
%o A270270         hypo = hypo - rid
%o A270270       else:
%o A270270         s = 1    # escape value
%o A270270   # lists updating
%o A270270   seq.append(hypo)
%o A270270   somme.append(somme[-1]+ hypo)
%o A270270   last.append(last[-1]+ diff_1)
%o A270270 # if you want to prove the conjecture values, uncomment next line
%o A270270 #print(seq[-1], float(seq[-1])/seq[-2])
%o A270270 print(seq)
%Y A270270 Cf. A264847, A265108, A270048.
%K A270270 nonn,base
%O A270270 1,1
%A A270270 _Francesco Di Matteo_, Mar 14 2016
