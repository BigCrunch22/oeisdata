%I A230763 #23 Dec 23 2024 14:53:43
%S A230763 6,1,8,5,2,7,4,10,1,2,2,3,7,10,2,1,2,6,19,8,10,2,2,2,2,2,20,2,10,2,4,
%T A230763 7,11,8,2,2,2,2,5,10,2,4,7,1,2,5,2,2,2,10,2,5,10,11,2,8,2,1,10,1,6,3,
%U A230763 10,2,11
%N A230763 Length of segments delimited by the letter "e" when the sequence is spelled out in English.
%C A230763 Translate the sequence S to English, to get English(S) = (SIX, ONE, EIGHT, FIVE, TWO, SEVEN, FOUR, TEN, ONE, TWO, TWO, THREE, SEVEN, TEN, TWO, ONE, TWO, SIX, NINETEEN, EIGHT, TEN, TWO, TWO, TWO, TWO, TWO, TWENTY, TWO, TEN, TWO, FOUR, SEVEN, ELEVEN, ...).
%C A230763 Then insert a stroke immediately after each letter "E" of S: "SIX, ONE|, E|IGHT, FIVE|, TWO, SE|VE|N, FOUR, TE|N, ONE|, TWO, TWO, THRE|E|, SE|VE|N, TE|N, TWO, ONE|, TWO, SIX, NINE|TE|E|N, E|IGHT, TE|N, TWO, TWO, TWO, TWO, TWO, TWE|NTY, TWO, TE|N, TWO, FOUR, SE|VE|N, E|LE|VE|N," ...
%C A230763 Now the length of each chunk is given by the sequence S itself. In case of several possible choices compatible with this property, we require the smallest one to be chosen.
%H A230763 E. Angelini, <a href="http://www.cetteadressecomportecinquantesignes.com/EchunkEnglish.htm">Self-count of Letter-Chunks ending with E</a>.
%H A230763 E. Angelini, <a href="/A230763/a230763.pdf">Self-count of Letter-Chunks ending with E</a> [Cached copy, with permission]
%H A230763 E. Angelini, <a href="https://web.archive.org/web/*/http://list.seqfan.eu/oldermail/seqfan/2013-October/011793.html">Backtracking the letter E chunk</a>, SeqFan List, Oct 22 2013
%e A230763 We see thus that the sequence cannot start with ONE, or TWO, or THREE, or FOUR or FIVE (because the presence or the absence of the letter "E" in those numbers leads to a contradiction). We could start with THIRTY, FORTY, FIFTY and SIXTY also -- but SIX is the smallest available integer. After SIX, we could also have chosen TWENTY, but again, we want the smallest integer fitting the pattern, which is ONE; therefore, the sequence starts: S = (SIX, ONE|, ...)
%e A230763 See the link to Angelini's page for further developments.
%o A230763 (PARI) /* see A052360 for the function English(). We implement a function which "caches" the English words (as Vecsmall() of ASCII codes) in an array for faster treatment. */
%o A230763 VET=[];VE(n)={#VET<n && VET=concat(VET,vector(n-#VET));VET[n] && return(VET[n]); VET[n]=Vecsmall(English(n))}
%o A230763 /* This checks whether the sequence 'a' is compatible with the sequence of letters (ASCII codes) 's' */ {check(a,s)=my(L=0,j=1);!for(i=1,#s,( i>L+a[j] || (( i==L+a[j] ) != (s[i] ==101))) && return; s[i] != 101 && next; L=i; j++)}
%o A230763 /* This extends the sequence 'a' by 'n' terms. Note, the last terms added may turn out to be not "valid", when the sequence is extended further. Could be programmed much more efficiently. */
%o A230763 extend(n,a=[],s=Vecsmall([]))={check(a,s)||return; n-- || return(a); my(t); for(k=1,99,(t=extend(n,concat(a,k),concat(s,VE(k))))&& return(t))}
%o A230763 /* To produce the sequence, use, e.g. */ extend(50)
%Y A230763 Cf. A052360.
%K A230763 nonn,word,changed
%O A230763 1,1
%A A230763 _Eric Angelini_ and _M. F. Hasler_, Oct 29 2013
