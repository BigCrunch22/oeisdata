%I A175241 #21 Apr 20 2023 11:29:10
%S A175241 81,25,35,81,75,289,105,81,155,1089,135,357,315,4225,657,425,279,1485,
%T A175241 321,357,635,16641,459,825,567,5265,657,1155,1275,66049,4641,1485,939,
%U A175241 1625,1705,1095,1143,10449,1209,1281,1329,2275,1413,1485,2555,263169
%N A175241 Call any positive integer that is a palindrome when written in binary a "binary palindrome". a(n) = the smallest product (the n-th binary palindrome)*(any binary palindrome) that is not a binary palindrome.
%C A175241 a(1) and a(2) are undefined, because the two first terms of A006995 are 0 and 1; and 0 times and 1 times any binary palindrome are binary palindromes, obviously.
%H A175241 Michael S. Branicky, <a href="/A175241/b175241.txt">Table of n, a(n) for n = 3..10000</a>
%F A175241 a(n) = A006995(n)*A175240(n).
%o A175241 (Python)
%o A175241 from itertools import count, islice, product
%o A175241 def is_bin_pal(n): return (b:=bin(n)[2:]) == b[::-1]
%o A175241 def bin_pals(): # generator of positive binary palindromes in base 10
%o A175241     yield 1
%o A175241     digits, midrange = 2, [[""], ["0", "1"]]
%o A175241     for digits in count(2):
%o A175241         for p in product("01", repeat=digits//2-1):
%o A175241             left = "1"+"".join(p)
%o A175241             for middle in midrange[digits%2]:
%o A175241                 yield int(left + middle + left[::-1], 2)
%o A175241 def agen(): # generator of terms
%o A175241     g = bin_pals(); next(g)
%o A175241     for n in count(3):
%o A175241         bn = next(g)
%o A175241         yield next(k*bn for k in bin_pals() if not is_bin_pal(k*bn))
%o A175241 print(list(islice(agen(), 46))) # _Michael S. Branicky_, Jan 09 2023
%Y A175241 Cf. A006995, A175240.
%K A175241 base,look,nonn
%O A175241 3,1
%A A175241 _Leroy Quet_, Mar 11 2010
%E A175241 Extended by _Ray Chandler_, Mar 13 2010
%E A175241 Offset 3 from _Michel Marcus_, Jan 09 2023
