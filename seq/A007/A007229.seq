%I A007229 M5267 #47 Feb 17 2023 07:38:38
%S A007229 38,264,2016,15504,122661,986700,8064576,66756144,558689224,
%T A007229 4719593312,40193414112,344721646640,2974925353455,25814778578820,
%U A007229 225105551191680,1971557711151600,17336058626562984,152984380665537760
%N A007229 Number of distinct perforation patterns for deriving (v,b) = (n+2,n) punctured convolutional codes from (4,1).
%C A007229 From _Petros Hadjicostas_, Jul 27 2020: (Start)
%C A007229 "A punctured convolutional code is a high-rate code obtained by the periodic elimination (i.e., puncturing) of specific code symbols from the output of a low-rate encoder. The resulting high-rate code depends on both the low-rate code, called the original code, and the number and specific positions of the punctured symbols." (The quote is from Haccoun and Bégin (1989).)
%C A007229 A high-rate code (v,b) (written as R = b/v) can be constructed from a low-rate code (v0,1) (written as R = 1/v0) by deleting from every v0*b code symbols a number of v0*b - v symbols (so that the resulting rate is R = b/v). (End)
%D A007229 Guy Bégin, On the enumeration of perforation patterns for punctured convolutional codes, Séries Formelles et Combinatoire Algébrique, 4th colloquium, 15-19 Juin 1992, Montréal, Université du Québec à Montréal, pp. 1-10.
%D A007229 N. J. A. Sloane and Simon Plouffe, The Encyclopedia of Integer Sequences, Academic Press, 1995 (includes this sequence).
%H A007229 Guy Bégin and David Haccoun, <a href="https://doi.org/10.1109/26.44210">High rate punctured convolutions codes: Structure properties and construction techniques</a>, IEEE Transactions on Communications 37(12) (1989), 1381-1385.
%H A007229 David Haccoun and Guy Bégin, <a href="https://doi.org/10.1109/26.46505">High rate punctured convolutional codes for Viterbi and sequential coding</a>, IEEE Transactions on Communications, 37(11) (1989), 1113-1125; see Section II.
%F A007229 From _Petros Hadjicostas_, Jul 27 2020: (Start)
%F A007229 The number of perforation patterns to derive high-rate convolutional code (v,b) (written as R = b/v) from a given low-rate convolutional code (v0, 1) (written as R = 1/v0) is (1/b)*Sum_{k|gcd(v,b)} phi(k)*binomial(v0*b/k, v/k).
%F A007229 According to Pab Ter's Maple code, this is the coefficient of z^v in the polynomial (1/b)*Sum_{k|b} phi(k)*(1 + z^k)^(v0*b/k).
%F A007229 Here (v,b) = (n+2,n) and (v0,1) = (4,1), so
%F A007229 a(n) = (1/n)*Sum_{k|gcd(n+2,n)} phi(k)*binomial(4*n/k, (n+2)/k).
%F A007229 This simplifies to
%F A007229 a(n) = (1/n)*(binomial(4*n, n+2) + [(n mod 2) == 0]*binomial(2*n, (n/2) + 1)).
%F A007229 (Even though these formulas do not appear in the two published papers in the IEEE Transactions on Communications, from the theory in those two papers, it makes sense to replace "k|b" with "k|v0*b" (and "k|gcd(v,b)" with "k|gcd(v,v0*b)"). Pab Ter, however, uses "k|b" in the Maple program below.) (End)
%p A007229 with(NumberTheory): P := proc(b, v0) local k: add(phi(k)*(1+z^k)^(v0*(b/k)), k=divisors(b))/b end: seq(coeff(P(b, 4), z, b+2), b=2..19); # Pab Ter
%t A007229 P[b_, v0_] := Sum[EulerPhi[k]*(1+z^k)^(v0*(b/k)), {k, Divisors[b]}]/b;
%t A007229 Table[Coefficient[P[b, 4], z, b+2], {b, 2, 19}] (* _Jean-François Alcover_, Feb 17 2023, after Pab Ter's Maple code *)
%K A007229 nonn
%O A007229 2,1
%A A007229 _Simon Plouffe_
%E A007229 More terms from Pab Ter (pabrlos2(AT)yahoo.com), Nov 13 2005
