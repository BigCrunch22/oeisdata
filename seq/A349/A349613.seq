%I A349613 #9 Nov 25 2021 17:36:40
%S A349613 1,0,-1,3,-7,7,-2,-6,9,10,-5,-15,-14,-2,55,10,-17,-41,-15,-36,42,18,
%T A349613 -13,44,81,29,-35,-45,-18,-180,-29,-23,41,53,135,99,-48,51,114,131,
%U A349613 -30,-140,-58,-53,-303,34,-37,-120,34,-196,147,-87,-45,226,207,166,103,67,-41,466,-84,91,-288,13,350,-258,-91,-108
%N A349613 Dirichlet convolution of A064413 (EKG-permutation) with the Dirichlet inverse of its inverse permutation.
%C A349613 Obviously, convolving this with A064664 gives A064413 back.
%H A349613 Antti Karttunen, <a href="/A349613/b349613.txt">Table of n, a(n) for n = 1..20000</a>
%H A349613 <a href="/index/Ed#EKG">Index entries for sequences related to EKG sequence</a>
%F A349613 a(n) = Sum_{d|n} A064413(d) * A323411(n/d).
%o A349613 (PARI)
%o A349613 up_to = 32768;
%o A349613 v064413 = readvec("b064413_upto65539_terms_only.txt"); \\ Data prepared with _Chai Wah Wu_'s Dec 08 2014 Python-program given in A064413.
%o A349613 A064413(n) = v064413[n];
%o A349613 \\ Then its inverse A064664 is prepared:
%o A349613 m064664 = Map();
%o A349613 for(n=1,65539,mapput(m064664,A064413(n),n));
%o A349613 A064664(n) = mapget(m064664,n);
%o A349613 DirInverseCorrect(v) = { my(u=vector(#v)); u[1] = (1/v[1]); for(n=2, #v, u[n] = (-u[1]*sumdiv(n, d, if(d<n, v[n/d]*u[d], 0)))); (u) }; \\ Compute the Dirichlet inverse of the sequence given in input vector v.
%o A349613 v323411 = DirInverseCorrect(vector(up_to,n,A064664(n)));
%o A349613 A323411(n) = v323411[n];
%o A349613 A349613(n) = sumdiv(n,d,A064413(d)*A323411(n/d));
%Y A349613 Cf. A064413, A064664, A323411, A349614 (Dirichlet inverse), A349615 (sum with it), A349616.
%Y A349613 Cf. also pairs A349376, A349377 and A349397, A349398 for similar constructions.
%K A349613 sign
%O A349613 1,4
%A A349613 _Antti Karttunen_, Nov 23 2021
