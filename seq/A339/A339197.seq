%I A339197 #14 Feb 16 2025 08:34:01
%S A339197 30,348,3459,33145,316164,3013590,28722567,273751765,2609096478,
%T A339197 24866992602,237004387635,2258860992595,21528938911842,
%U A339197 205189789087374,1955639788756293,18638973217791295,177645865363829526,1693121885638023396,16136945905019298321,153799336805212613275
%N A339197 Number of (undirected) cycles on the n X 3 king graph.
%H A339197 Seiichi Manyama, <a href="/A339197/b339197.txt">Table of n, a(n) for n = 2..1000</a>
%H A339197 Eric Weisstein's World of Mathematics, <a href="https://mathworld.wolfram.com/GraphCycle.html">Graph Cycle</a>
%H A339197 Eric Weisstein's World of Mathematics, <a href="https://mathworld.wolfram.com/KingGraph.html">King Graph</a>
%F A339197 Empirical g.f.: -x^2 * (11*x^4 + 49*x^3 + 69*x^2 + 48*x + 30) / ((x-1)^2 * (6*x^4 + 5*x^3 + 14*x^2 + 8*x - 1)). - _Vaclav Kotesovec_, Dec 09 2020
%o A339197 (Python)
%o A339197 # Using graphillion
%o A339197 from graphillion import GraphSet
%o A339197 def make_nXk_king_graph(n, k):
%o A339197     grids = []
%o A339197     for i in range(1, k + 1):
%o A339197         for j in range(1, n):
%o A339197             grids.append((i + (j - 1) * k, i + j * k))
%o A339197             if i < k:
%o A339197                 grids.append((i + (j - 1) * k, i + j * k + 1))
%o A339197             if i > 1:
%o A339197                 grids.append((i + (j - 1) * k, i + j * k - 1))
%o A339197     for i in range(1, k * n, k):
%o A339197         for j in range(1, k):
%o A339197             grids.append((i + j - 1, i + j))
%o A339197     return grids
%o A339197 def A339098(n, k):
%o A339197     universe = make_nXk_king_graph(n, k)
%o A339197     GraphSet.set_universe(universe)
%o A339197     cycles = GraphSet.cycles()
%o A339197     return cycles.len()
%o A339197 def A339197(n):
%o A339197     return A339098(n, 3)
%o A339197 print([A339197(n) for n in range(2, 30)])
%Y A339197 Column 3 of A339098.
%Y A339197 Cf. A339200.
%K A339197 nonn
%O A339197 2,1
%A A339197 _Seiichi Manyama_, Nov 27 2020
