%I A339852 #34 Jan 16 2021 17:20:24
%S A339852 1,44,549,7104,104100,1475286,20842802,295671198,4190083085,
%T A339852 59374628434,841470846944,11925007688342,168996943899738,
%U A339852 2394974040514288,33940795571394262,480998063196253650,6816550836218124869,96601974078400509612,1369012239935377295854,19401203058253673198258
%N A339852 Number of Hamiltonian circuits within parallelograms of size 5 X n on the triangular lattice.
%H A339852 Seiichi Manyama, <a href="/A339852/b339852.txt">Table of n, a(n) for n = 2..500</a>
%H A339852 M. Peto, <a href="https://doi.org/10.31274/rtd-180813-17105">Studies of protein designability using reduced models</a>, Thesis, 2007.
%H A339852 <a href="/index/Rec#order_27">Index entries for linear recurrences with constant coefficients</a>, signature (8,62,384,160,-1628,-11310,9700,-16019,102564, -98380,263340, -429661,174728,-361330,147404,284641,24764,182412,-156248, -138559,14756,14496,-3660,-2640,328,80,-8)
%F A339852 a(2)..a(31) = [1, 44, 549, 7104, 104100, 1475286, 20842802, 295671198, 4190083085, 59374628434, 841470846944, 11925007688342, 168996943899738, 2394974040514288, 33940795571394262, 480998063196253650, 6816550836218124869, 96601974078400509612, 1369012239935377295854, 19401203058253673198258, 274947636268050621400764, 3896469848341602644039976, 55219522831075639350876744, 782553393257523404353337072, 11090096073215866151573834374, 157165289898796544200350430624, 2227296155585971455156172389428, 31564527815820044279227403214372, 447322379530320420841684880901414, 6339309505792160540792742125116082] and
%F A339852 a(n) = 8*a(n-1) + 62*a(n-2) + 384*a(n-3) - 160*a(n-4) - 1628*a(n-5) - 11310*a(n-6) + 9700*a(n-7) - 16019*a(n-8) + 102564*a(n-9) - 98380*a(n-10) + 263340*a(n-11) - 429661*a(n-12) + 174728*a(n-13) - 361330*a(n-14) + 147404*a(n-15) + 284641*a(n-16) + 24764*a(n-17) + 182412*a(n-18) - 156248*a(n-19) - 138559*a(n-20) + 14756*a(n-21) + 14496*a(n-22) - 3660*a(n-23) - 2640*a(n-24) + 328*a(n-25) + 80*a(n-26) - 8*a(n-27) for n > 31.
%o A339852 (Python)
%o A339852 # Using graphillion
%o A339852 from graphillion import GraphSet
%o A339852 def make_T_nk(n, k):
%o A339852     grids = []
%o A339852     for i in range(1, k + 1):
%o A339852         for j in range(1, n):
%o A339852             grids.append((i + (j - 1) * k, i + j * k))
%o A339852             if i < k:
%o A339852                 grids.append((i + (j - 1) * k, i + j * k + 1))
%o A339852     for i in range(1, k * n, k):
%o A339852         for j in range(1, k):
%o A339852             grids.append((i + j - 1, i + j))
%o A339852     return grids
%o A339852 def A339849(n, k):
%o A339852     universe = make_T_nk(n, k)
%o A339852     GraphSet.set_universe(universe)
%o A339852     cycles = GraphSet.cycles(is_hamilton=True)
%o A339852     return cycles.len()
%o A339852 def A339852(n):
%o A339852     return A339849(5, n)
%o A339852 print([A339852(n) for n in range(2, 21)])
%Y A339852 Row 5 of A339849.
%Y A339852 Cf. A339202.
%K A339852 nonn
%O A339852 2,2
%A A339852 _Seiichi Manyama_, Dec 19 2020
