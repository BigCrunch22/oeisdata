%I A339190 #22 Feb 16 2025 08:34:01
%S A339190 3,4,4,8,16,8,16,120,120,16,32,744,2830,744,32,64,4922,50354,50354,
%T A339190 4922,64,128,31904,1003218,2462064,1003218,31904,128,256,208118,
%U A339190 19380610,139472532,139472532,19380610,208118,256,512,1354872,378005474,7621612496,22853860116,7621612496,378005474,1354872,512
%N A339190 Square array T(n,k), n >= 2, k >= 2, read by antidiagonals, where T(n,k) is the number of (undirected) Hamiltonian cycles on the n X k king graph.
%H A339190 Seiichi Manyama, <a href="/A339190/b339190.txt">Antidiagonals n = 2..12, flattened</a>
%H A339190 Eric Weisstein's World of Mathematics, <a href="https://mathworld.wolfram.com/HamiltonianCycle.html">Hamiltonian Cycle</a>
%H A339190 Eric Weisstein's World of Mathematics, <a href="https://mathworld.wolfram.com/KingGraph.html">King Graph</a>
%H A339190 <a href="/index/Gra#graphs">Index entries for sequences related to graphs, Hamiltonian</a>
%F A339190 T(n,k) = T(k,n).
%e A339190 Square array T(n,k) begins:
%e A339190    3,     4,        8,         16,            32,               64, ...
%e A339190    4,    16,      120,        744,          4922,            31904, ...
%e A339190    8,   120,     2830,      50354,       1003218,         19380610, ...
%e A339190   16,   744,    50354,    2462064,     139472532,       7621612496, ...
%e A339190   32,  4922,  1003218,  139472532,   22853860116,    3601249330324, ...
%e A339190   64, 31904, 19380610, 7621612496, 3601249330324, 1622043117414624, ...
%o A339190 (Python)
%o A339190 # Using graphillion
%o A339190 from graphillion import GraphSet
%o A339190 def make_nXk_king_graph(n, k):
%o A339190     grids = []
%o A339190     for i in range(1, k + 1):
%o A339190         for j in range(1, n):
%o A339190             grids.append((i + (j - 1) * k, i + j * k))
%o A339190             if i < k:
%o A339190                 grids.append((i + (j - 1) * k, i + j * k + 1))
%o A339190             if i > 1:
%o A339190                 grids.append((i + (j - 1) * k, i + j * k - 1))
%o A339190     for i in range(1, k * n, k):
%o A339190         for j in range(1, k):
%o A339190             grids.append((i + j - 1, i + j))
%o A339190     return grids
%o A339190 def A339190(n, k):
%o A339190     universe = make_nXk_king_graph(n, k)
%o A339190     GraphSet.set_universe(universe)
%o A339190     cycles = GraphSet.cycles(is_hamilton=True)
%o A339190     return cycles.len()
%o A339190 print([A339190(j + 2, i - j + 2) for i in range(10 - 1) for j in range(i + 1)])
%Y A339190 Rows and columns 3..5 give A339200, A339201, A339202.
%Y A339190 Main diagonal gives A140519.
%Y A339190 Cf. A321172, A339098, A339849.
%K A339190 nonn,tabl
%O A339190 2,1
%A A339190 _Seiichi Manyama_, Nov 27 2020
