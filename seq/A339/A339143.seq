%I A339143 #14 Dec 09 2020 04:42:54
%S A339143 1,94,2301,53644,1248517,29059380,676374187,15743068612,366430841199,
%T A339143 8528932801462,198516848612143,4620617865735414,107548097901476485,
%U A339143 2503256858519071030,58265046263626611537,1356159518571223920304,31565557014929042873017
%N A339143 Number of (undirected) cycles in the graph C_6 X P_n.
%H A339143 Seiichi Manyama, <a href="/A339143/b339143.txt">Table of n, a(n) for n = 1..500</a>
%H A339143 Eric Weisstein's World of Mathematics, <a href="http://mathworld.wolfram.com/GraphCycle.html">Graph Cycle</a>
%F A339143 Empirical g.f.: -x*(1 + 63*x - 418*x^2 + 287*x^3 + 840*x^4 + 1721*x^5 - 2540*x^6 + 3001*x^7 - 1149*x^8 - 544*x^9 + 90*x^10) / ((-1 + x)^2 * (-1 + 29*x - 136*x^2 + 55*x^3 + 190*x^4 + 645*x^5 - 626*x^6 + 953*x^7 - 409*x^8 - 178*x^9 + 30*x^10)). - _Vaclav Kotesovec_, Dec 09 2020
%o A339143 (Python)
%o A339143 # Using graphillion
%o A339143 from graphillion import GraphSet
%o A339143 def make_CnXPk(n, k):
%o A339143     grids = []
%o A339143     for i in range(1, k + 1):
%o A339143         for j in range(1, n):
%o A339143             grids.append((i + (j - 1) * k, i + j * k))
%o A339143         grids.append((i + (n - 1) * k, i))
%o A339143     for i in range(1, k * n, k):
%o A339143         for j in range(1, k):
%o A339143             grids.append((i + j - 1, i + j))
%o A339143     return grids
%o A339143 def A339143(n):
%o A339143     universe = make_CnXPk(6, n)
%o A339143     GraphSet.set_universe(universe)
%o A339143     cycles = GraphSet.cycles()
%o A339143     return cycles.len()
%o A339143 print([A339143(n) for n in range(1, 20)])
%Y A339143 Cf. A180582 (Hamiltonian cycles), A339118, A339136, A339137, A339140, A339142.
%K A339143 nonn
%O A339143 1,2
%A A339143 _Seiichi Manyama_, Nov 25 2020
