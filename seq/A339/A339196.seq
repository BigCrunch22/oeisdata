%I A339196 #15 Feb 16 2025 08:34:01
%S A339196 7,30,85,204,451,954,1969,4008,8095,16278,32653,65412,130939,262002,
%T A339196 524137,1048416,2096983,4194126,8388421,16777020,33554227,67108650,
%U A339196 134217505,268435224,536870671,1073741574,2147483389,4294967028,8589934315,17179868898,34359738073,68719476432
%N A339196 Number of (undirected) cycles on the n X 2 king graph.
%H A339196 Seiichi Manyama, <a href="/A339196/b339196.txt">Table of n, a(n) for n = 2..1000</a>
%H A339196 Eric Weisstein's World of Mathematics, <a href="https://mathworld.wolfram.com/GraphCycle.html">Graph Cycle</a>
%H A339196 Eric Weisstein's World of Mathematics, <a href="https://mathworld.wolfram.com/KingGraph.html">King Graph</a>
%F A339196 Empirical g.f.: -x^2 * (7 + 2*x) / ((-1 + x)^2 * (-1 + 2*x)). - _Vaclav Kotesovec_, Dec 09 2020
%o A339196 (Python)
%o A339196 # Using graphillion
%o A339196 from graphillion import GraphSet
%o A339196 def make_nXk_king_graph(n, k):
%o A339196     grids = []
%o A339196     for i in range(1, k + 1):
%o A339196         for j in range(1, n):
%o A339196             grids.append((i + (j - 1) * k, i + j * k))
%o A339196             if i < k:
%o A339196                 grids.append((i + (j - 1) * k, i + j * k + 1))
%o A339196             if i > 1:
%o A339196                 grids.append((i + (j - 1) * k, i + j * k - 1))
%o A339196     for i in range(1, k * n, k):
%o A339196         for j in range(1, k):
%o A339196             grids.append((i + j - 1, i + j))
%o A339196     return grids
%o A339196 def A339098(n, k):
%o A339196     universe = make_nXk_king_graph(n, k)
%o A339196     GraphSet.set_universe(universe)
%o A339196     cycles = GraphSet.cycles()
%o A339196     return cycles.len()
%o A339196 def A339196(n):
%o A339196     return A339098(n, 2)
%o A339196 print([A339196(n) for n in range(2, 30)])
%Y A339196 Column 2 of A339098.
%K A339196 nonn,changed
%O A339196 2,1
%A A339196 _Seiichi Manyama_, Nov 27 2020
