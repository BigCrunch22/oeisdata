%I A339391 #33 Jan 09 2021 00:42:18
%S A339391 1,2,2,2,2,3,3,3,3,3,3,4,4,4,4,5,5,5,5
%N A339391 Maximum, over all binary strings w of length n, of the size of the smallest string attractor for w.
%C A339391 A set S of positions of a string w[1..n] is called a "string attractor" if every nonempty contiguous block occurring in w has an occurrence in w that touches at least one of the positions of S.  For example, "alfalfa" has a string attractor of size 3:  {3,4,5}.
%C A339391 0 has smallest string attractor size 1;
%C A339391 01 has smallest string attractor size 2;
%C A339391 001011 has smallest string attractor size 3;
%C A339391 000100101011 has smallest string attractor size 4;
%C A339391 0001001010110111 has smallest string attractor size 5.
%C A339391 These are the shortest binary strings achieving this minimum attractor size.
%H A339391 D. Kempa and N. Prezza. <a href="https://dl.acm.org/doi/abs/10.1145/3188745.3188814">At the roots of dictionary compression: string attractors</a>. In STOC'18 Proceedings, ACM Press, 2018, pp. 827-840.
%o A339391 (Python)
%o A339391 from itertools import product, combinations
%o A339391 def blocks_ranges(w):
%o A339391   blocks = dict()
%o A339391   for i in range(len(w)):
%o A339391     for j in range(i+1, len(w)+1):
%o A339391       wij = w[i:j]
%o A339391       if wij in blocks: blocks[wij].append(set(range(i, j)))
%o A339391       else: blocks[wij] = [set(range(i, j))]
%o A339391   return blocks
%o A339391 def is_attractor(S, w):
%o A339391   br = blocks_ranges(w)
%o A339391   for b in br:
%o A339391     for i in range(len(br[b])):
%o A339391       if S & br[b][i]: break
%o A339391     else: return False
%o A339391   return True
%o A339391 def lsa(w): # length of smallest attractor of w
%o A339391   for r in range(1, len(w)+1):
%o A339391     for s in combinations(range(len(w)), r):
%o A339391       if is_attractor(set(s), w): return r
%o A339391 def a(n):   # only search strings starting with 0 by symmetry
%o A339391   return max(lsa("0"+"".join(u)) for u in product("01", repeat=n-1))
%o A339391 print([a(n) for n in range(1, 12)]) # _Michael S. Branicky_, Dec 20 2020
%K A339391 nonn,more
%O A339391 1,2
%A A339391 _Jeffrey Shallit_, Dec 12 2020
%E A339391 (17)-a(19) from _Michael S. Branicky_, Dec 20 2020
