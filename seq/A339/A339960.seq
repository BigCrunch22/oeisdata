%I A339960 #17 Dec 26 2020 02:42:07
%S A339960 1,1676,183521,20842802,3061629439,418172485806,56203566442908,
%T A339960 7621726574570613,1033232532941136255,139934009951521872490,
%U A339960 18955155770535463735959,2567688102114635009977537,347811042296785583958285788,47113523803568895604053871759,6381875340326645360658645942215
%N A339960 Number of Hamiltonian circuits within parallelograms of size 8 X n on the triangular lattice.
%H A339960 Seiichi Manyama, <a href="/A339960/b339960.txt">Table of n, a(n) for n = 2..100</a>
%H A339960 Olga Bodroža-Pantić, Harris Kwong and Milan Pantić, <a href="https://doi.org/10.1016/j.dam.2015.07.028">Some new characterizations of Hamiltonian cycles in triangular grid graphs</a>, Discrete Appl. Math. 201 (2016) 1-13. (a(n) is equal to h7(n-1) defined by this paper)
%H A339960 M. Peto, <a href="https://doi.org/10.31274/rtd-180813-17105">Studies of protein designability using reduced models</a>, Thesis, 2007.
%o A339960 (Python)
%o A339960 # Using graphillion
%o A339960 from graphillion import GraphSet
%o A339960 def make_T_nk(n, k):
%o A339960     grids = []
%o A339960     for i in range(1, k + 1):
%o A339960         for j in range(1, n):
%o A339960             grids.append((i + (j - 1) * k, i + j * k))
%o A339960             if i < k:
%o A339960                 grids.append((i + (j - 1) * k, i + j * k + 1))
%o A339960     for i in range(1, k * n, k):
%o A339960         for j in range(1, k):
%o A339960             grids.append((i + j - 1, i + j))
%o A339960     return grids
%o A339960 def A339849(n, k):
%o A339960     universe = make_T_nk(n, k)
%o A339960     GraphSet.set_universe(universe)
%o A339960     cycles = GraphSet.cycles(is_hamilton=True)
%o A339960     return cycles.len()
%o A339960 def A339960(n):
%o A339960     return A339849(8, n)
%o A339960 print([A339960(n) for n in range(2, 8)])
%Y A339960 Row 8 of A339849.
%Y A339960 Cf. A145418.
%K A339960 nonn
%O A339960 2,2
%A A339960 _Seiichi Manyama_, Dec 25 2020
