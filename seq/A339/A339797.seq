%I A339797 #15 Feb 16 2025 08:34:01
%S A339797 756,4128,18240,73368,277536,1001760,3512160,12009480,40390944,
%T A339797 133893936,439304736,1428450072,4613176800,14809528896,47315578848,
%U A339797 150534443304,477237381024,1508232832080,4753573999776,14945425070136,46886868887136,146802927436128,458818252975200
%N A339797 Number of (undirected) Hamiltonian paths in the graph C_3 X C_n.
%H A339797 Seiichi Manyama, <a href="/A339797/b339797.txt">Table of n, a(n) for n = 3..50</a>
%H A339797 Eric Weisstein's World of Mathematics, <a href="https://mathworld.wolfram.com/HamiltonianPath.html">Hamiltonian Path</a>
%H A339797 Eric Weisstein's World of Mathematics, <a href="https://mathworld.wolfram.com/TorusGridGraph.html">Torus Grid Graph</a>
%o A339797 (Python)
%o A339797 # Using graphillion
%o A339797 from graphillion import GraphSet
%o A339797 def make_CnXCk(n, k):
%o A339797     grids = []
%o A339797     for i in range(1, k + 1):
%o A339797         for j in range(1, n):
%o A339797             grids.append((i + (j - 1) * k, i + j * k))
%o A339797         grids.append((i + (n - 1) * k, i))
%o A339797     for i in range(1, k * n, k):
%o A339797         for j in range(1, k):
%o A339797             grids.append((i + j - 1, i + j))
%o A339797         grids.append((i + k - 1, i))
%o A339797     return grids
%o A339797 def A(start, goal, n, k):
%o A339797     universe = make_CnXCk(n, k)
%o A339797     GraphSet.set_universe(universe)
%o A339797     paths = GraphSet.paths(start, goal, is_hamilton=True)
%o A339797     return paths.len()
%o A339797 def B(n, k):
%o A339797     m = k * n
%o A339797     s = 0
%o A339797     for i in range(1, m):
%o A339797         for j in range(i + 1, m + 1):
%o A339797             s += A(i, j, n, k)
%o A339797     return s
%o A339797 def A339797(n):
%o A339797     return B(n, 3)
%o A339797 print([A339797(n) for n in range(3, 10)])
%Y A339797 Cf. A003685, A268838, A339795, A339798.
%K A339797 nonn
%O A339797 3,1
%A A339797 _Seiichi Manyama_, Dec 17 2020
