%I A350889 #21 Jan 24 2022 04:41:11
%S A350889 1,0,1,0,1,1,1,1,1,1,1,1,2,1,1,1,1,2,2,1,1,1,1,3,3,2,1,1,1,2,3,4,3,2,
%T A350889 1,1,2,2,4,5,5,3,2,1,1,2,3,4,7,6,5,3,2,1,1,3,4,5,8,9,7,5,3,2,1,1,3,5,
%U A350889 6,10,11,10,7,5,3,2,1,1,4,6,7,12,15,13,11,7,5,3,2,1,1,4,8,8,14,18,18,14,11,7,5,3,2,1,1
%N A350889 Triangle T(n,k), n >= 1, 1 <= k <= n, read by rows, where T(n,k) is the number of partitions of n such that k*(smallest part) = (number of parts).
%F A350889 G.f. of column k: Sum_{i>=1} x^(k*i^2)/Product_{j=1..k*i-1} (1-x^j).
%e A350889 Triangle begins:
%e A350889   1;
%e A350889   0, 1;
%e A350889   0, 1, 1;
%e A350889   1, 1, 1, 1;
%e A350889   1, 1, 2, 1, 1;
%e A350889   1, 1, 2, 2, 1, 1;
%e A350889   1, 1, 3, 3, 2, 1, 1;
%e A350889   1, 2, 3, 4, 3, 2, 1, 1;
%e A350889   2, 2, 4, 5, 5, 3, 2, 1, 1;
%e A350889   2, 3, 4, 7, 6, 5, 3, 2, 1, 1;
%e A350889   3, 4, 5, 8, 9, 7, 5, 3, 2, 1, 1;
%o A350889 (PARI) T(n, k) = polcoef(sum(i=1, n, x^(k*i^2)/prod(j=1, k*i-1, 1-x^j+x*O(x^n))), n);
%o A350889 (Ruby)
%o A350889 def partition(n, min, max)
%o A350889   return [[]] if n == 0
%o A350889   [max, n].min.downto(min).flat_map{|i| partition(n - i, min, i).map{|rest| [i, *rest]}}
%o A350889 end
%o A350889 def A(n)
%o A350889   a = Array.new(n, 0)
%o A350889   partition(n, 1, n).each{|ary|
%o A350889     (1..n).each{|i|
%o A350889       a[i - 1] += 1 if i * ary[-1] == ary.size
%o A350889     }
%o A350889   }
%o A350889   a
%o A350889 end
%o A350889 def A350889(n)
%o A350889   (1..n).map{|i| A(i)}.flatten
%o A350889 end
%o A350889 p A350889(14)
%Y A350889 Row sums give A168657.
%Y A350889 Column k=1..5 give A006141, A237757, A350892, A350896, A350897.
%Y A350889 Cf. A350879, A350890.
%K A350889 nonn,tabl
%O A350889 1,13
%A A350889 _Seiichi Manyama_, Jan 21 2022
