%I A350312 #28 Feb 18 2022 21:03:03
%S A350312 0,1,10,11,101,110,111,1011,1101,1110,1111,10110,10111,11011,11101,
%T A350312 11110,11111,101101,101110,101111,110110,110111,111011,111101,111110,
%U A350312 111111,1011011,1011101,1011110,1011111,1101101,1101110,1101111,1110110,1110111,1111011
%N A350312 Narayana weighted representation of n (the bottom version). Also binary representation of numbers not containing 00 or 010 as a substring.
%C A350312 a(n) equals binary representation of m, if and only if A350311(m) = n and for all k < m, A350311(k) < n.
%H A350312 A.H.M. Smeets, <a href="/A350215/a350215.pdf">The design of greedy number representations</a>
%F A350312 Regular expression: 0|11*(0111*)*(0|01|011*)?.
%t A350312 q[n_] := SequenceCount[IntegerDigits[n, 2], #] & /@ {{0, 0}, {0, 1, 0}} == {0, 0}; bin[n_] := FromDigits[IntegerDigits[n, 2]]; bin /@ Select[Range[0, 120], q] (* _Amiram Eldar_, Jan 27 2022 *)
%o A350312 (Python) # first method (as from definition)
%o A350312 def A101(n):
%o A350312     f0, f1, f2, r = 1, 1, 1, 0
%o A350312     while n > 0:
%o A350312         if n%2 == 1:
%o A350312             r = r+f0
%o A350312         n, f0, f1, f2 = n//2, f0+f2, f0, f1
%o A350312     return r
%o A350312 n, a = 0, 0
%o A350312 while n < 36:
%o A350312     if A101(a) == n:
%o A350312         print(bin(a)[2:], end = ", ")
%o A350312         n += 1
%o A350312     a += 1
%o A350312 (Python) # second method (as from regular expression)
%o A350312 def test(n):
%o A350312     s, i, n1 = bin(n)[2:], 0, 2
%o A350312     while i < len(s):
%o A350312         if s[i] == "0":
%o A350312             if n1 < 2:
%o A350312                 return 0
%o A350312             n1 = 0
%o A350312         else:
%o A350312             n1 += 1
%o A350312         i += 1
%o A350312     return 1
%o A350312 n, a = 0, 0
%o A350312 while n < 36:
%o A350312     if test(a):
%o A350312         print(bin(a)[2:], end = ", ")
%o A350312         n += 1
%o A350312     a += 1
%Y A350312 Cf. A000930, A048715, A350215 (top version), A350311.
%Y A350312 Fibonacci representations: A014417 (Zeckendorf), A104326 (dual Zeckendorf).
%K A350312 nonn,base
%O A350312 0,3
%A A350312 _A.H.M. Smeets_, Dec 24 2021
