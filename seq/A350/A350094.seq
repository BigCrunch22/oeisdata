%I A350094 #10 Dec 15 2021 08:00:24
%S A350094 0,0,1,0,6,4,3,0,28,24,21,16,18,12,7,0,120,112,105,96,94,84,75,64,84,
%T A350094 72,61,48,42,28,15,0,496,480,465,448,438,420,403,384,396,376,357,336,
%U A350094 322,300,279,256,360,336,313,288,270,244,219,192,196,168,141,112
%N A350094 a(n) = Sum_{k=0..n} n CNIMPL k where CNIMPL = NOT(n) AND k is the bitwise logical converse non-implication operator (A102037).
%C A350094 The effect of NOT(n) AND k is to retain from k only those bits where n has a 0-bit.  Conversely n AND k retains from k those bits where n has a 1-bit.  Together they are all bits of k so that a(n) + A222423(n) = Sum_{k=0..n} k = n*(n+1)/2.
%F A350094 a(n) = (A001196(n) - n*(n+2))/4.
%F A350094 a(2*n) = 4*a(n) + n.
%F A350094 a(2*n+1) = 4*a(n).
%p A350094 with(Bits): cnimp := (n, k) -> And(Not(n), k):
%p A350094 seq(add(cnimp(n, k), k = 0..n), n = 0..59); # _Peter Luschny_, Dec 14 2021
%o A350094 (PARI) a(n) = (3*fromdigits(binary(n),4) - n^2 - 2*n)/4;
%Y A350094 Row sums of A102037.
%Y A350094 Cf. A001196 (bit doubling).
%Y A350094 Other sums: A222423 (AND), A350093 (OR), A224915 (XOR), A265736 (IMPL).
%K A350094 base,easy,nonn
%O A350094 0,5
%A A350094 _Kevin Ryde_, Dec 14 2021
