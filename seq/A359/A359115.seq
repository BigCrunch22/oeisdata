%I A359115 #21 Jan 14 2023 14:33:28
%S A359115 3,5,11,7,29,37,89,211,71,241,347,331,23,457,233,31,53,67,17,181,107,
%T A359115 1051,173,421,113,103,491,601,1607,223,1187,1093,257,643,839,1021,557,
%U A359115 2731,1301,1213,761,1861,239,673,2069,2083,317,73,599,571,191,631,1451
%N A359115 a(n) is the smallest odd prime not already in the sequence such that when the terms a(1)..a(n) are concatenated, the result is the reverse of a prime.
%C A359115 From any term back to and including the first, digit by digit, right to left, we can read the resulting primes backwards.
%e A359115 a(3) = 11 because 11 is the smallest unused odd prime such that the concatenated reverse terms R(a(3))||R(a(2))||R(a(1)) = 1153 is prime. Trying the smallest unused odd prime 7 fails because 753 = 3*251, a composite number.
%e A359115 a(5) = 29 as its reverse 92 concatenated with the reversed chain of the previous reversed terms 7, 11, 5, 3, gives 9271153, a prime, and no smaller unused odd prime satisfies that condition.
%p A359115 rev:= proc(n) local L,i; L:= convert(n,base,10); add(L[-i]*10^(i-1),i=1..nops(L)) end proc:
%p A359115 tcat:= proc(a,b) 10^(1+ilog10(b))*a+b end proc:
%p A359115 Q:= 3: S:= {3}: p:= 3: count:= 1: R:= 3:
%p A359115 while count < 100 do
%p A359115   q:= p;
%p A359115   do
%p A359115     if not member(q,S) then
%p A359115       rq:= rev(q);
%p A359115       if isprime(tcat(rq,Q)) then
%p A359115         count:= count+1;
%p A359115         R:= R,q;
%p A359115         Q:= tcat(rq,Q);
%p A359115         S:= S union {q};
%p A359115         if q = p then p:= nextprime(p) fi;
%p A359115         break
%p A359115       fi;
%p A359115    fi;
%p A359115    q:= nextprime(q);
%p A359115    od;
%p A359115 od:
%p A359115 R; # _Robert Israel_, Dec 21 2022
%t A359115 a[1] = 3; a[n_] := a[n] = Module[{s = Array[a, n - 1], p = 5}, While[MemberQ[s, p] || ! PrimeQ[FromDigits @ Reverse @ Flatten @ IntegerDigits[Join[s, {p}]]], p = NextPrime[p]]; p]; Array[a, 50] (* _Amiram Eldar_, Dec 17 2022 *)
%o A359115 (Python)
%o A359115 from itertools import islice
%o A359115 from sympy import isprime, nextprime
%o A359115 def agen(): # generator of terms
%o A359115     alst, aset, arev, minp = [], set(), "", 3
%o A359115     while True:
%o A359115         p = minp
%o A359115         while p in aset or not isprime(int(str(p)[::-1] + arev)):
%o A359115             p = nextprime(p)
%o A359115         yield p; alst.append(p); aset.add(p); arev = str(p)[::-1] + arev
%o A359115         while minp in aset: minp = nextprime(minp)
%o A359115 print(list(islice(agen(), 53))) # _Michael S. Branicky_, Dec 16 2022
%Y A359115 Cf. A000040, A004086.
%K A359115 nonn,base
%O A359115 1,1
%A A359115 _Tamas Sandor Nagy_, Dec 16 2022
