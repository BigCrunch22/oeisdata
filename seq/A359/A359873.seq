%I A359873 #51 Jul 27 2023 08:29:17
%S A359873 6,12,18,24,30,36,38,42,48,52,56,60,66,72,78
%N A359873 Minimum number of consecutive positive integers to guarantee n abundant or perfect numbers.
%C A359873 It is rather easy to show that a(n) <= 6n. Marc Deléglise (1998)'s bounds on the density of abundant numbers gives that a(n)/n approaches a value between 4.032 and 4.043.
%H A359873 Marc Deléglise, <a href="https://doi.org/10.1080/10586458.1998.10504363">Bounds for the density of abundant integers</a>, Experimental Mathematics, Vol. 7, No. 2 (1998), pp. 137-143; <a href="http://mcdanielabundancy.wdfiles.com/local--files/bounds-for-abundancy-density/DelegliseDensBounds.pdf">alternative link</a>.
%e A359873 For n=8, there must be 7 multiples of 6 within the 42 numbers, which are all abundant/perfect. There must also be 2 multiples of 20 that are abundant/perfect. Note that between the multiples of 6 and the multiples of 20, there can be at most one repetition, thus giving 8 abundant numbers. 41 fails with 115, 116, ..., 155.
%o A359873 (Python)
%o A359873 def f(n):
%o A359873     ans = 0
%o A359873     for i in range(1, n):
%o A359873         if n % i ==0:
%o A359873             ans += i
%o A359873     return ans
%o A359873 l=[]
%o A359873 for i in range(1, 100000):
%o A359873     if f(i) - i > -1:
%o A359873         l.append(i)
%o A359873 def listing(k, f):
%o A359873     for i in range(len(l)-k):
%o A359873         if l[i+k]-l[i] > f:
%o A359873             return (l[i], l[i+k])
%o A359873 def a(n):
%o A359873     a = 0
%o A359873     while not listing(n, a) == None:
%o A359873         a += 1
%o A359873     return a
%Y A359873 Cf. A023196 (abundant or perfect numbers).
%K A359873 nonn,more
%O A359873 1,1
%A A359873 _Lincoln Liu_, May 20 2023
