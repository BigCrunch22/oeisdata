%I A359959 #16 Jan 29 2023 02:32:50
%S A359959 1,10,36,54,144,108,486,216,324,432,648,540,1296,3510,2430,1080,2700,
%T A359959 1620,8424,2160,4860,4320,3240,27216,7560,8100,6480,35100,10800,19440,
%U A359959 24300,21060,15120,16200,37800,56700,54000,30240,42120,60480,32400,45360,84240,81000,64800,75600,90720,213840
%N A359959 a(n) is the least number that has exactly n divisors with the same digit sum.
%C A359959 a(n) is the least number k such that for some s, there are exactly n divisors of k with sum of digits s.
%H A359959 Michael S. Branicky, <a href="/A359959/b359959.txt">Table of n, a(n) for n = 1..289</a>
%H A359959 Michael S. Branicky, <a href="/A359959/a359959.txt">Table of n, a(n) for all terms <= 446000000</a>
%F A359959 a(n) <= 10^(n-1). - _RÃ©my Sigrist_, Jan 27 2023
%e A359959 a(1) = 1 because 1 has 1 divisor with digit sum 1, namely 1.
%e A359959 a(2) = 10 because 10 has 2 divisors with digit sum 1, namely 1 and 10.
%e A359959 a(3) = 36 because 36 has 3 divisors with digit sum 9, namely 9, 18 and 36.
%e A359959 a(4) = 54 because 54 has 4 divisors with digit sum 9, namely 9, 18, 27 and 54.
%p A359959 f:= proc(n) local L,S;
%p A359959       L:= convert(numtheory:-divisors(n),list);
%p A359959       S:= map(t -> convert(convert(t,base,10),`+`), L);
%p A359959       map(t -> numboccur(t,S), convert(S,set))
%p A359959 end proc:
%p A359959 V:= Vector(50): count:= 0:
%p A359959 for n from 1 while count < 50 do
%p A359959    for v in f(n) do
%p A359959      if v <= 50 and V[v] = 0 then V[v]:= n; count:= count+1; fi
%p A359959 od od:
%p A359959 convert(V,list);
%o A359959 (PARI) is(z,n)={my(e=1,w=[],s=[],t=0);s=vecsort(apply(vecsum,apply(digits,apply(divisors,z))));for(i=2,#s,if(s[i]==s[i-1],e++,w=concat(w,e);e=1));w=concat(w,e);s=Set(w);forvec(G=vector(2,j,[1,#s]),if((s[G[1]]==n)&&(s[G[2]]==n),t=1;if(G[1]!=G[2],return(0))));return(t)}
%o A359959 a(n)=for(z=1,+oo,is(z,n)&&return(z)); \\ _R. J. Cano_, Jan 23 2023
%o A359959 (Python)
%o A359959 from sympy import divisors
%o A359959 from collections import Counter
%o A359959 from itertools import count, islice
%o A359959 def sd(n): return sum(map(int, str(n)))
%o A359959 def agen(): # generator of terms
%o A359959     adict, n = dict(), 1
%o A359959     for k in count(1):
%o A359959         c = Counter(sd(d) for d in divisors(k, generator=True))
%o A359959         for v in c.values():
%o A359959             if v >= n and v not in adict:
%o A359959                 adict[v] = k
%o A359959         while n in adict: yield adict[n]; n += 1
%o A359959 print(list(islice(agen(), 50))) # _Michael S. Branicky_, Jan 27 2023
%Y A359959 Cf. A007953, A359074.
%K A359959 nonn,base
%O A359959 1,2
%A A359959 _Robert Israel_, Jan 19 2023
