%I A161989 #20 Oct 30 2024 13:31:14
%S A161989 0,1,2,4,7,8,11,13,14,15,16,19,21,22,23,25,26,27,28,29,30,31,32,35,37,
%T A161989 38,39,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,
%U A161989 63,64,67,69,70,71,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90
%N A161989 Numbers having more than 2 or fewer than 2 ones in their binary representation.
%C A161989 A000120(a(n)) <> 2.
%C A161989 Complement of A018900; A151774(a(n)) = 0.
%H A161989 Reinhard Zumkeller, <a href="/A161989/b161989.txt">Table of n, a(n) for n = 1..10000</a>
%t A161989 Select[Range[0,100],DigitCount[#,2,1]!=2&] (* _Harvey P. Dale_, Mar 11 2013 *)
%o A161989 (PARI) isok(n) = hammingweight(n) != 2; \\ _Michel Marcus_, Nov 01 2019
%o A161989 (Python)
%o A161989 from itertools import count, islice
%o A161989 from math import comb
%o A161989 def A161989(n):
%o A161989     def f(x):
%o A161989         s = bin(x)[2:]
%o A161989         c = n-1+comb((l:=len(s))-1,2)
%o A161989         try:
%o A161989             c += l-1-s[1:].index('1')
%o A161989         except:
%o A161989             pass
%o A161989         return c
%o A161989     m, k = n-1, f(n-1)
%o A161989     while m != k: m, k = k, f(k)
%o A161989     return m
%o A161989 def A161989_gen(): # generator of terms
%o A161989     return filter(lambda n:n.bit_count()!=2,count(0))
%o A161989 A161989_list = list(islice(A161989_gen(),50)) # _Chai Wah Wu_, Oct 30 2024
%Y A161989 Cf. A000120, A018900, A151774.
%K A161989 nonn,changed
%O A161989 1,3
%A A161989 _Reinhard Zumkeller_, Jun 24 2009
