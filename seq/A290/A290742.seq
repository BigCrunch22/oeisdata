%I A290742 #17 Mar 15 2022 12:32:01
%S A290742 1,12,112,2112,21221222,212221221222,2212212221221222,
%T A290742 22122212212221221222,222122122212212221221222,
%U A290742 1221222122122212212221221222,12221221222122122212212222112,212212221221222122122221122112,2122212212221221222211221121221222
%N A290742 Orbit of word "1" under the 3-shift tag system over the alphabet {1,2} defined in the Comments.
%C A290742 This tag system maps a word w over {1,2} to w', where if w begins with 1, w' is obtained by appending 2112 to w and deleting the first three letters, or if w begins with 2, w' is obtained by appending 1221222 to w and deleting the first three letters.
%C A290742 This is a 3-shift version of a 5-shift tag system studied in [De Mol, p. 307].
%H A290742 Michael S. Branicky, <a href="/A290742/b290742.txt">Table of n, a(n) for n = 1..322</a>
%H A290742 Liesbeth De Mol, <a href="http://www.clps.ugent.be/sites/default/files/publications/dissertation.pdf">Tracing unsolvability. A historical, mathematical and philosophical analysis with a special focus on tag systems</a>, Ph.D. Thesis, Universiteit Gent. See page 307.
%p A290742 with(StringTools);
%p A290742 f1:=proc(w) local L, t2, t1, ws, w2;
%p A290742 t1:="2112"; t2:="1221222"; ws:=convert(w, string);
%p A290742 if ws[1]="1" then w2:=Join([ws, t1], ""); else w2:=Join([ws, t2], ""); fi;
%p A290742 L:=length(w2); if L <= 3 then return(-1); fi;
%p A290742 w2[4..L]; end;
%p A290742 # and apply f1 repeatedly to "1"
%o A290742 (Python)
%o A290742 from itertools import islice
%o A290742 def agen(w="1"):
%o A290742     while True:
%o A290742         yield int(w)
%o A290742         w += ("2112" if w[0] == "1" else "1221222")
%o A290742         w = w[3:]
%o A290742 print(list(islice(agen(), 13))) # _Michael S. Branicky_, Mar 15 2022
%Y A290742 Cf. A284116, A290741.
%K A290742 nonn
%O A290742 1,2
%A A290742 _N. J. A. Sloane_, Aug 11 2017
