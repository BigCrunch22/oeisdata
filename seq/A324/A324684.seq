%I A324684 #5 Mar 11 2019 20:46:01
%S A324684 0,0,0,0,0,0,0,31,0,0,0,1,1,1,0,0,3,25871,0,0,6154,0,0,0,0,30429,0,0,
%T A324684 0,9,422464,25055,25055,25056,25057,0,0,0,9685,9685,5,0,0,1,20,0,3,1,
%U A324684 1,0,0,5,0,0,0,0,17,17,17,15244,15244,15245,15246,15247,1,0
%N A324684 Starting at n, a(n) is the number of times we move from a positive spot to a spot we have already visited according to the following rules. On the k-th step (k=1,2,3,...) move a distance of k in the direction of zero. If the number landed on has been landed on before, move a distance of k away.
%e A324684 For n=43, the points visited are 43, 42, 40, 37, 33, 28, 22, 15, 7, -2, 8, -3, 9, -4, 10, -5, 11, -6, 12, -7, 13, -8, 14, -9, -33, -58, -32, -59, -31, -60, -30, 1, 33, 0.  The only time we revisit a spot is when we move from 1 to 33.  As this only occurs for one positive number, a(43)=1.
%o A324684 (Python)
%o A324684 #Sequences A324660-A324692 generated by manipulating this trip function
%o A324684 #spots - positions in order with possible repetition
%o A324684 #flee - positions from which we move away from zero with possible repetition
%o A324684 #stuck - positions from which we move to a spot already visited with possible repetition
%o A324684 def trip(n):
%o A324684     stucklist = list()
%o A324684     spotsvisited = [n]
%o A324684     leavingspots = list()
%o A324684     turn = 0
%o A324684     forbidden = {n}
%o A324684     while n != 0:
%o A324684         turn += 1
%o A324684         sign = n // abs(n)
%o A324684         st = sign * turn
%o A324684         if n - st not in forbidden:
%o A324684             n = n - st
%o A324684         else:
%o A324684             leavingspots.append(n)
%o A324684             if n + st in forbidden:
%o A324684                 stucklist.append(n)
%o A324684             n = n + st
%o A324684         spotsvisited.append(n)
%o A324684         forbidden.add(n)
%o A324684     return {'stuck':stucklist, 'spots':spotsvisited,
%o A324684                 'turns':turn, 'flee':leavingspots}
%o A324684 #Actual sequence
%o A324684 def a(n):
%o A324684     d = trip(n)
%o A324684     return sum(1 for i in d['stuck'] if i > 0)
%Y A324684 Cf. A228474, A324660-A324692.
%K A324684 nonn
%O A324684 0,8
%A A324684 _David Nacin_, Mar 10 2019
