%I A324672 #24 Sep 26 2019 04:19:14
%S A324672 0,1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,1,-1,-1,1,-1,
%T A324672 -1,1,1,1,1,1,1,1,-1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,1,1,-1,-1,1,-1,-1,
%U A324672 -1,1,1,1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,1,1,1,1
%N A324672 Starting at n, a(n) is the sign of the farthest point from zero visited according to the following rules. On the k-th step (k=1,2,3,...) move a distance of k in the direction of zero. If the number landed on has been landed on before, move a distance of k away. In case of a tie, a(n)=0.
%C A324672 The only known value for which there is a tie (up to n=1000) happens at n=89.
%e A324672 For n=2, the points visited are 2,1,-1,-4,0. The farthest point from zero is -4, and sgn(-4) = -1, thus a(2) = -1.
%o A324672 (Python)
%o A324672 #Sequences A324660-A324692 generated by manipulating this trip function
%o A324672 #spots - positions in order with possible repetition
%o A324672 #flee - positions from which we move away from zero with possible repetition
%o A324672 #stuck - positions from which we move to a spot already visited with possible repetition
%o A324672 def trip(n):
%o A324672     stucklist = list()
%o A324672     spotsvisited = [n]
%o A324672     leavingspots = list()
%o A324672     turn = 0
%o A324672     forbidden = {n}
%o A324672     while n != 0:
%o A324672         turn += 1
%o A324672         sign = n // abs(n)
%o A324672         st = sign * turn
%o A324672         if n - st not in forbidden:
%o A324672             n = n - st
%o A324672         else:
%o A324672             leavingspots.append(n)
%o A324672             if n + st in forbidden:
%o A324672                 stucklist.append(n)
%o A324672             n = n + st
%o A324672         spotsvisited.append(n)
%o A324672         forbidden.add(n)
%o A324672     return {'stuck':stucklist, 'spots':spotsvisited,
%o A324672                 'turns':turn, 'flee':leavingspots}
%o A324672 def sgn(x):
%o A324672     if x:
%o A324672         return x//abs(x)
%o A324672     return 0
%o A324672 #Actual sequence
%o A324672 def a(n):
%o A324672     d = trip(n)
%o A324672     mx=max(d['spots'])
%o A324672     mn=min(d['spots'])
%o A324672     return sgn(mx+mn)
%Y A324672 Cf. A228474, A324660-A324692.
%K A324672 sign
%O A324672 0
%A A324672 _David Nacin_, Mar 10 2019
