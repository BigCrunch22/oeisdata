%I A324685 #8 Mar 11 2019 20:46:08
%S A324685 0,0,0,0,0,0,0,-21,0,0,0,1,-5,-5,0,0,3,-7429,0,0,1852,0,0,0,0,-28253,
%T A324685 0,0,0,3,267870,6225,6226,6227,6228,0,0,-2,-598,-597,2,-1,0,1,-9,0,-2,
%U A324685 -2,-2,-3,-3,0,-2,0,0,0,8,8,8,-6462,-6461,-6460,-6459,-6458
%N A324685 Starting at n, a(n) is the difference of the number of times we revisit spots coming from positive spots and the number of times we revisit spots coming from negative spots according to the following rules. On the k-th step (k=1,2,3,...) move a distance of k in the direction of zero. If the number landed on has been landed on before, move a distance of k away.
%H A324685 David Nacin, <a href="/A324685/a324685.png">A324685</a>
%H A324685 David Nacin, <a href="/A324685/a324685_1.png">A324685(n)/A228474(n)</a>
%o A324685 (Python)
%o A324685 #Sequences A324660-A324692 generated by manipulating this trip function
%o A324685 #spots - positions in order with possible repetition
%o A324685 #flee - positions from which we move away from zero with possible repetition
%o A324685 #stuck - positions from which we move to a spot already visited with possible repetition
%o A324685 def trip(n):
%o A324685     stucklist = list()
%o A324685     spotsvisited = [n]
%o A324685     leavingspots = list()
%o A324685     turn = 0
%o A324685     forbidden = {n}
%o A324685     while n != 0:
%o A324685         turn += 1
%o A324685         sign = n // abs(n)
%o A324685         st = sign * turn
%o A324685         if n - st not in forbidden:
%o A324685             n = n - st
%o A324685         else:
%o A324685             leavingspots.append(n)
%o A324685             if n + st in forbidden:
%o A324685                 stucklist.append(n)
%o A324685             n = n + st
%o A324685         spotsvisited.append(n)
%o A324685         forbidden.add(n)
%o A324685     return {'stuck':stucklist, 'spots':spotsvisited,
%o A324685                 'turns':turn, 'flee':leavingspots}
%o A324685 def sgn(x):
%o A324685     if x:
%o A324685         return x//abs(x)
%o A324685     return 0
%o A324685 #Actual sequence
%o A324685 def a(n):
%o A324685     d = trip(n)
%o A324685     return sum(sgn(i) for i in d['stuck'])
%Y A324685 Cf. A228474, A324660-A324692. Equals A324684-A324683.
%K A324685 sign
%O A324685 0,8
%A A324685 _David Nacin_, Mar 10 2019
