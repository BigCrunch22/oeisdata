%I A324688 #7 Mar 11 2019 20:46:28
%S A324688 0,0,-1,0,-7,-6,0,-78,-2,-1,0,3,-14,-13,-2,0,9,-54646,-3,-2,8497,0,-8,
%T A324688 -5,-4,-172288,-3,-2,0,27,1784552,33920,33921,33922,33923,-3,0,8,
%U A324688 -3137,-3136,-3,-5,-4,-3,-82,0,-15,-12,-11,-9,-8,-4,-7,-4,-3,0,36,37
%N A324688 Starting at n, a(n) is the difference of the number of times we move away from zero from positive spots and the number of times we move away from zero from negative spots according to the following rules. On the k-th step (k=1,2,3,...) move a distance of k in the direction of zero. If the number landed on has been landed on before, move a distance of k away.
%H A324688 David Nacin, <a href="/A324688/a324688.png">A324688(n)</a>
%H A324688 David Nacin, <a href="/A324688/a324688_1.png">A324688(n)/A228474(n)</a>
%o A324688 (Python)
%o A324688 #Sequences A324660-A324692 generated by manipulating this trip function
%o A324688 #spots - positions in order with possible repetition
%o A324688 #flee - positions from which we move away from zero with possible repetition
%o A324688 #stuck - positions from which we move to a spot already visited with possible repetition
%o A324688 def trip(n):
%o A324688     stucklist = list()
%o A324688     spotsvisited = [n]
%o A324688     leavingspots = list()
%o A324688     turn = 0
%o A324688     forbidden = {n}
%o A324688     while n != 0:
%o A324688         turn += 1
%o A324688         sign = n // abs(n)
%o A324688         st = sign * turn
%o A324688         if n - st not in forbidden:
%o A324688             n = n - st
%o A324688         else:
%o A324688             leavingspots.append(n)
%o A324688             if n + st in forbidden:
%o A324688                 stucklist.append(n)
%o A324688             n = n + st
%o A324688         spotsvisited.append(n)
%o A324688         forbidden.add(n)
%o A324688     return {'stuck':stucklist, 'spots':spotsvisited,
%o A324688                 'turns':turn, 'flee':leavingspots}
%o A324688 def sgn(x):
%o A324688     if x:
%o A324688         return x//abs(x)
%o A324688     return 0
%o A324688 #Actual sequence
%o A324688 def a(n):
%o A324688     d = trip(n)
%o A324688     return sum(sgn(i) for i in d['flee'])
%Y A324688 Cf. A228474, A324660-A324692. Equals A324687-A324686.
%K A324688 sign
%O A324688 0,5
%A A324688 _David Nacin_, Mar 10 2019
