%I A324674 #14 Mar 11 2019 20:44:54
%S A324674 0,0,0,0,0,0,0,83,0,0,0,1,7,7,0,0,3,59171,0,0,10456,0,0,0,0,89111,0,0,
%T A324674 0,15,577058,43885,43884,43885,43886,0,0,2,19968,19967,8,1,0,1,49,0,8,
%U A324674 4,4,3,3,10,2,0,0,0,26,26,26,36950,36949,36950,36951,36952
%N A324674 Starting at n, a(n) is the number of times we travel to a position already visited according to the following rules. On the k-th step (k=1,2,3,...) move a distance of k in the direction of zero. If the number landed on has been landed on before, move a distance of k away.
%H A324674 David Nacin, <a href="/A324674/a324674.png">A324674</a>
%H A324674 David Nacin, <a href="/A324674/a324674_1.png">A324674(n)/A228474(n)</a>
%e A324674 For n=11, the points visited are 11, 10, 8, 5, 1, -4, 2, -5, 3, -6, 4, -7, -19, -32, -18, -3, 13, 30, 12, 31, 51, 72, 50, 27, 51, 26, 0.  When at 27 is reached, the next step must be length 24.  As 3 has already been visited, we must move away from zero regardless of whether the point we land on has been visited before, and we revisit 51 an extra time.  Since this is the only time this happens, a(11)=1.
%o A324674 (Python)
%o A324674 #Sequences A324660-A324692 generated by manipulating this trip function
%o A324674 #spots - positions in order with possible repetition
%o A324674 #flee - positions from which we move away from zero with possible repetition
%o A324674 #stuck - positions from which we move to a spot already visited with possible repetition
%o A324674 def trip(n):
%o A324674     stucklist = list()
%o A324674     spotsvisited = [n]
%o A324674     leavingspots = list()
%o A324674     turn = 0
%o A324674     forbidden = {n}
%o A324674     while n != 0:
%o A324674         turn += 1
%o A324674         sign = n // abs(n)
%o A324674         st = sign * turn
%o A324674         if n - st not in forbidden:
%o A324674             n = n - st
%o A324674         else:
%o A324674             leavingspots.append(n)
%o A324674             if n + st in forbidden:
%o A324674                 stucklist.append(n)
%o A324674             n = n + st
%o A324674         spotsvisited.append(n)
%o A324674         forbidden.add(n)
%o A324674     return {'stuck':stucklist, 'spots':spotsvisited,
%o A324674                 'turns':turn, 'flee':leavingspots}
%o A324674 #Actual sequence
%o A324674 def a(n):
%o A324674     d=trip(n)
%o A324674     return len(d['stuck'])
%Y A324674 Cf. A228474, A324660-A324692.
%K A324674 nonn
%O A324674 0,8
%A A324674 _David Nacin_, Mar 10 2019
