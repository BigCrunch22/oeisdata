%I A337538 #19 Oct 06 2020 00:58:32
%S A337538 6,6,15,15,15,15,15,15,3,6,6,6,9,2,15,15,15,3,15,2,15,3,15,15,6,3,2,3,
%T A337538 3,3,9,3,9,3,3,3,2,15,6,15,6,3,2,15,15,15,3,15,15,15,3,15,15,3,15,15,
%U A337538 2,15,15,15,15,2,3,15,2,15,15,15,2,15,15,15,15,2,15,15,15,15,15,15,2,2,15,15,15,15,2
%N A337538 a(n) is the least k such that A003961(k*A071395(n)) is abundant.
%C A337538 A071395(n) is the n-th primitive abundant number. A003961(k) replaces each prime factor of k with the next larger prime.
%C A337538 See also the table in the example section of A337469.
%H A337538 Antti Karttunen, <a href="/A337538/b337538.txt">Table of n, a(n) for n = 1..13037</a>
%F A337538 a(n) = A337469(n) / A071395(n).
%t A337538 Map[Block[{k = 1}, While[DivisorSigma[1, #] <= 2 # &[Times @@ Map[#1^#2 & @@ # &, FactorInteger[k #] /. {p_, e_} /; e > 0 :> {Prime[PrimePi@ p + 1], e}]], k++]; k] &, Select[Range[10^4], DivisorSigma[1, #] > 2 # && Times @@ Boole@ Map[DivisorSigma[1, #] < 2 # &, Most@ Divisors@ #] == 1 &]] (* _Michael De Vlieger_, Oct 05 2020 *)
%o A337538 (PARI)
%o A337538 isA071395(n) = if(sigma(n) <= 2*n, 0, fordiv(n, d, if((d != n)&&(sigma(d) >= 2*d), return(0))); (1)); \\ After code in A071395
%o A337538 A003961(n) = { my(f = factor(n)); for (i=1, #f~, f[i, 1] = nextprime(f[i, 1]+1)); factorback(f); };
%o A337538 isA337386(n) = { my(x=A003961(n)); (sigma(x)>=2*x); };
%o A337538 for(n=1,2^13,if(isA071395(n), i=0; for(k=1,oo,if(isA337386(k*n),i++; print1(k,", "); break))));
%Y A337538 Cf. A000203, A003961, A003973, A071395, A337386, A337469, A337479.
%K A337538 nonn
%O A337538 1,1
%A A337538 _Antti Karttunen_ and _Peter Munn_, Sep 07 2020
