%I A371763 #16 Apr 19 2024 16:52:15
%S A371763 0,1,1,5,6,4,13,18,15,9,29,42,39,28,16,61,90,87,68,45,25,125,186,183,
%T A371763 148,105,66,36,253,378,375,308,225,150,91,49,509,762,759,628,465,318,
%U A371763 203,120,64,1021,1530,1527,1268,945,654,427,264,153,81
%N A371763 Triangle read by rows: Trace of the Akiyama-Tanigawa algorithm for powers x^2.
%C A371763 The Akiyama-Tanigawa is a sequence-to-sequence transformation AT := A -> B. If A(n) = 1/(n + 1) then B(n) are the Bernoulli numbers. Tracing the algorithm generates a triangle where the right edge is sequence A and the left edge is its transform B.
%C A371763 Here we consider the sequence A(n) = n^2 that is transformed into sequence B(n) = |A344920(n)|. The case A(n) = n^3 is A371764. Sequence [1, 1, 1, ...] generates A023531 and sequence [0, 1, 2, 3, ...] generates A193738.
%C A371763 In their general form, the AT-transforms of the powers are closely related to the poly-Bernoulli numbers A099594 and generate the rows of the array A371761.
%F A371763 T(n, k) = n^2 if n=k, otherwise (k + 1)*(2^(n - k)*(k + 2) - 3). - _Detlef Meya_, Apr 19 2024
%e A371763 Triangle starts:
%e A371763 0:                  0
%e A371763 1:               1,   1
%e A371763 2:             5,   6,   4
%e A371763 3:          13,  18,  15,   9
%e A371763 4:        29,  42,  39,  28,  16
%e A371763 5:      61,  90,  87,  68,  45,  25
%e A371763 6:    125, 186, 183, 148, 105,  66, 36
%e A371763 7:  253, 378, 375, 308, 225, 150, 91, 49
%p A371763 ATProw := proc(k, n) local m, j, A;
%p A371763    for m from 0 by 1 to n do
%p A371763       A[m] := m^k;
%p A371763       for j from m by -1 to 1 do
%p A371763          A[j - 1] := j * (A[j] - A[j - 1])
%p A371763    od od; convert(A, list) end:
%p A371763 ATPtriangle := (p, len) -> local k;
%p A371763      ListTools:-Flatten([seq(ATProw(p, k), k = 0..len)]):
%p A371763 ATPtriangle(2, 9);
%t A371763 T[n,k] := If[n==k, n^2, (k+1)*(2^(n-k)*(k+2)-3)]; Flatten[Table[T[n,k],{n,0,9},{k,0,n}]] (* _Detlef Meya_, Apr 19 2024 *)
%o A371763 (Python)
%o A371763 # See function ATPowList in A371761.
%o A371763 (Julia)
%o A371763 function ATPtriangle(k::Int, len::Int)
%o A371763     A = Vector{BigInt}(undef, len)
%o A371763     B = Vector{Vector{BigInt}}(undef, len)
%o A371763     for n in 0:len-1
%o A371763         A[n+1] = n^k
%o A371763         for j = n:-1:1
%o A371763             A[j] = j * (A[j+1] - A[j])
%o A371763         end
%o A371763         B[n+1] = A[1:n+1]
%o A371763     end
%o A371763     return B
%o A371763 end
%o A371763 for (n, row) in enumerate(ATPtriangle(2, 9))
%o A371763     println("$(n-1): ", row)
%o A371763 end
%Y A371763 Family of triangles: A023531 (n=0), A193738 (n=1), this triangle (n=2), A371764 (n=3).
%Y A371763 Cf. A371761, A344920, A099594.
%K A371763 nonn,tabl
%O A371763 0,4
%A A371763 _Peter Luschny_, Apr 15 2024
