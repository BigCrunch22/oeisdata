%I A371821 #30 Apr 13 2024 01:57:59
%S A371821 85329,177904587,333577497
%N A371821 Composite numbers which divide the concatenation of their ascending ordered prime factors, with repetition, when written in binary.
%C A371821 The base 2 version of A259047. Assuming a(4) exists it is greater than 10^10.
%C A371821 a(4) <= 55133857902732922904331439521901. - _Chai Wah Wu_, Apr 12 2024
%C A371821 a(1), a(3), the bound on a(4) above, and larger terms can be generated using an adaptation of the method of J. K. Andersen referenced in A259047; see linked Python program for an implementation and two more terms. - _Michael S. Branicky_, Apr 12 2024
%H A371821 Michael S. Branicky, <a href="/A371821/a371821.txt">Python program generating terms in A371821</a>
%e A371821 177904587 is a term as 177904587 = 3_10 * 7_10 * 103_10 * 233_10 * 353_10 = 11_2 * 111_2 * 1100111_2 * 11101001_2 * 101100001_2 = "11111110011111101001101100001"_2 = 533713761_10, which is divisible by 177904587.
%o A371821 (Python)
%o A371821 from itertools import count, islice
%o A371821 from sympy import factorint
%o A371821 def A371821_gen(startvalue=1): # generator of terms >= startvalue
%o A371821     for n in count(max(startvalue,1)):
%o A371821         f = sorted(factorint(n,multiple=True))
%o A371821         if len(f) > 1:
%o A371821             c = 0
%o A371821             for p in f:
%o A371821                 c = ((c<<p.bit_length())+p)%n
%o A371821             if not c:
%o A371821                 yield n
%o A371821 A371821_list = list(islice(A371821_gen(),3)) # _Chai Wah Wu_, Apr 11 2024
%o A371821 (Python)
%o A371821 from sympy import factorint, isprime
%o A371821 def ok(n): return not isprime(n) and int("".join(bin(p)[2:]*e for p, e in factorint(n).items()), 2)%n == 0 # _Michael S. Branicky_, Apr 12 2024
%Y A371821 Cf. A027746, A004676, A259047, A371641.
%K A371821 nonn,base,more,bref
%O A371821 1,1
%A A371821 _Scott R. Shannon_, Apr 07 2024
