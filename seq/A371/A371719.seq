%I A371719 #26 Apr 06 2024 10:03:00
%S A371719 1,2,4,6,10,14,22,26,38,42,58,62,78,82,110,106,130,134,166,162,190,
%T A371719 190,238,226,254,250,318,294,330,330,378,366,418,406,490,430,486,486,
%U A371719 586,538,570,574,650,618,690,646,786,714,766,742,870,818,890,858,966,874,970
%N A371719 Number of length-n strongly factor-symmetric binary words.
%C A371719 Suppose w is a word with p 0's and q 1's. Let d(i,j) denote the number of distinct blocks in w having exactly i 0's and j 1's, for 0<=i<=p and 0<=j<=q. Then w is said to be strongly factor symmetric if d(p-i,q-j) = d(i,j) for all i and j.
%C A371719 a(n) is even for n > 0 by symmetry. - _Michael S. Branicky_, Apr 04 2024
%H A371719 Bert Dobbelaere, <a href="/A371719/b371719.txt">Table of n, a(n) for n = 0..120</a>
%e A371719 For example, for n = 5, the word 00101 is strongly-factor symmetric.
%o A371719 (Python)
%o A371719 from itertools import product
%o A371719 from collections import defaultdict
%o A371719 def sfs(w): # is strongly factor symmetric
%o A371719     p, q, d = w.count('0'), w.count('1'), defaultdict(lambda: set())
%o A371719     d[0, 0] = set([""])
%o A371719     for b in range(len(w)):
%o A371719         for e in range(b+1, len(w)+1):
%o A371719             i, j = w[b:e].count('0'), w[b:e].count('1')
%o A371719             d[i, j].add(w[b:e])
%o A371719     return all(len(d[p-i, q-j])==len(d[i, j]) for i in range(p+1) for j in range(q+1))
%o A371719 def a(n):
%o A371719     if n == 0: return 1
%o A371719     return 2*sum(1 for w in product("01", repeat=n-1) if sfs("0"+"".join(w)))
%o A371719 print([a(n) for n in range(17)]) # _Michael S. Branicky_, Apr 04 2024
%K A371719 nonn,changed
%O A371719 0,2
%A A371719 _Jeffrey Shallit_, Apr 04 2024
%E A371719 a(21)-a(27) from _Michael S. Branicky_, Apr 04 2024
%E A371719 a(28)-a(56) from _Bert Dobbelaere_, Apr 06 2024
