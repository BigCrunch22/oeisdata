%I A331261 #45 Sep 08 2022 08:46:25
%S A331261 0,1,4,5,24,25,144,145,840,841,4900,4901,28560,28561,166464,166465,
%T A331261 970224,970225,5654884,5654885,32959080,32959081,192099600,192099601,
%U A331261 1119638520,1119638521,6525731524,6525731525,38034750624,38034750625,221682772224,221682772225
%N A331261 List of pairs of numbers having certain properties (see Comments).
%C A331261 List of pairs of numbers with following properties:
%C A331261 (1) The numbers in each pair are consecutive.
%C A331261 (2) At least one integer is a square.
%C A331261 (3) The sum of each pair is another square.
%C A331261 (4) The position of the square term oscillates between left and right.
%C A331261 (5) The triple formed by the pair and the square root of their sum is a Pythagorean triple.
%o A331261 (Python)
%o A331261 # a Python 3.7 program to arrive at Pell-Fermat type Pythagorean triples below a given/entered number.
%o A331261 import math
%o A331261 number = None
%o A331261 # Taking the input from user
%o A331261 number = 10000000
%o A331261 squareList = []
%o A331261 subPythagoreanTriple= []
%o A331261 needed = 1.0
%o A331261 while(needed <= number):
%o A331261     root = math.sqrt(needed)
%o A331261     if int(root + 0.5) ** 2 == needed:
%o A331261         squareList.append(needed)
%o A331261         flag = True
%o A331261     else:
%o A331261         #print(number, "is not a perfect square")
%o A331261         pass
%o A331261         flag = None
%o A331261     needed = needed + 1
%o A331261 def checkSubPythagoreanTriple():
%o A331261     for i in squareList:
%o A331261         SPTless = i-1
%o A331261         SPTmore = i+1
%o A331261         firstSide = 2*i - 1
%o A331261         secondSide = 2*i + 1
%o A331261         firstSideRoot = math.sqrt(firstSide)
%o A331261         secondSideRoot = math.sqrt(secondSide)
%o A331261         if int(firstSideRoot + 0.5) ** 2 == firstSide or int(secondSideRoot + 0.5) ** 2 == secondSide :
%o A331261             if(i%2 == 1):
%o A331261                 subPythagoreanTriple.append(int(i-1))
%o A331261                 subPythagoreanTriple.append(int(i))
%o A331261             else:
%o A331261                 subPythagoreanTriple.append(int(i))
%o A331261                 subPythagoreanTriple.append(int(i+1))
%o A331261         else:
%o A331261             pass
%o A331261 def main():
%o A331261     checkSubPythagoreanTriple()
%o A331261 main()
%o A331261 print(str(subPythagoreanTriple))
%o A331261 (Magma) a:=[0,1]; for k in [2..1000000] do if IsSquare(2*k*k+1) then a:=a cat [k^2,k^2+1]; else if IsSquare(2*k*k-1) then a:=a cat [k^2-1,k^2]; end if; end if; end for; a; // _Marius A. Burtea_, Jan 21 2020
%K A331261 nonn
%O A331261 1,3
%A A331261 _Chandrasekhar Karri_, Jan 13 2020
%E A331261 More terms from _Marius A. Burtea_, Jan 13 2020
