%I A355404 #21 Aug 10 2022 07:40:32
%S A355404 1,2,21,22,12,122,121,221,22121,22122,12122,12122122,12122121,
%T A355404 22122121,2212212122121,2212212122122,1212212122122,
%U A355404 121221212212212122122,121221212212212122121,221221212212212122121,2212212122122121221212212212122121
%N A355404 Lexicographically earliest sequence of distinct terms such that the concatenation of three successive terms form a palindrome using the alphabet {1, 2}.
%C A355404 Also, lexicographically earliest sequence of distinct terms > 0 such that the concatenation of three successive terms form a palindrome in bases >= 3.
%C A355404 a(45) with 1597 digits is the first term > 10^1000.
%H A355404 Michael S. Branicky, <a href="/A355404/b355404.txt">Table of n, a(n) for n = 1..44</a>
%o A355404 (Python)
%o A355404 from itertools import count, islice, product
%o A355404 def pals(digs):
%o A355404     yield from digs
%o A355404     for d in count(2):
%o A355404         for p in product(digs, repeat=d//2):
%o A355404             left = "".join(p)
%o A355404             for mid in [[""], digs][d%2]:
%o A355404                 yield left + mid + left[::-1]
%o A355404 def folds(s): # generator of suffixes of palindromes starting with s
%o A355404     for i in range((len(s)+1)//2, len(s)+1):
%o A355404         for mid in [True, False]:
%o A355404             t = s[:i] + (s[:i-1][::-1] if mid else s[:i][::-1])
%o A355404             if t.startswith(s):
%o A355404                 yield t[len(s):]
%o A355404     yield from ("".join(p)+s[::-1] for p in pals("12"))
%o A355404 def agen():
%o A355404     s, t, seen = "1", "2", {"1", "2"}
%o A355404     yield from [1, 2]
%o A355404     while True:
%o A355404         for u in folds(s+t):
%o A355404             if len(u) > 0 and u not in seen: break
%o A355404         s, t = t, u
%o A355404         seen.add(u)
%o A355404         yield int(t)
%o A355404 print(list(islice(agen(), 21))) # updated _Michael S. Branicky_, Aug 09 2022
%Y A355404 Cf. A002113, A091789.
%K A355404 nonn,base
%O A355404 1,2
%A A355404 _Michael S. Branicky_, Jul 01 2022
