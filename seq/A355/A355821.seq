%I A355821 #9 Jul 18 2022 14:16:33
%S A355821 1,3,5,7,11,13,17,19,23,25,29,31,33,37,41,43,47,49,53,59,61,63,67,71,
%T A355821 73,77,79,83,89,91,93,97,101,103,107,109,113,119,121,123,127,131,133,
%U A355821 137,139,143,149,151,153,157,161,163,167,169,173,179,181,183,187,191,193,197,199,203,209,211,213,215,221,223,227
%N A355821 Numbers k for which A003961(k) and A276086(k) are relatively prime, where A003961 is fully multiplicative with a(p) = nextprime(p), and A276086 is primorial base exp-function.
%H A355821 <a href="/index/Pri#prime_indices">Index entries for sequences computed from indices in prime factorization</a>
%H A355821 <a href="/index/Pri#primorialbase">Index entries for sequences related to primorial base</a>
%o A355821 (PARI)
%o A355821 A003961(n) = { my(f = factor(n)); for(i=1, #f~, f[i, 1] = nextprime(f[i, 1]+1)); factorback(f); };
%o A355821 A276086(n) = { my(m=1, p=2); while(n, m *= (p^(n%p)); n = n\p; p = nextprime(1+p)); (m); };
%o A355821 A355820(n) = (1==gcd(A003961(n), A276086(n)));
%o A355821 isA355821(n) = A355820(n);
%o A355821 (Python)
%o A355821 from math import prod, gcd
%o A355821 from itertools import count, islice
%o A355821 from sympy import factorint, nextprime
%o A355821 def A355821_gen(startvalue=1): # generator of terms >= startvalue
%o A355821     for n in count(max(startvalue,1)):
%o A355821         k = prod(nextprime(p)**e for p, e in factorint(n).items())
%o A355821         m, p, c = 1, 2, n
%o A355821         while c:
%o A355821             c, a = divmod(c,p)
%o A355821             m *= p**a
%o A355821             p = nextprime(p)
%o A355821         if gcd(k,m) == 1:
%o A355821             yield n
%o A355821 A355821_list = list(islice(A355821_gen(),30)) # _Chai Wah Wu_, Jul 18 2022
%Y A355821 Positions of 1's in A355442 and in A355001.
%Y A355821 Cf. A003961, A276086, A355820 (characteristic function), A355822 (complement).
%Y A355821 Cf. also A324583.
%K A355821 nonn
%O A355821 1,2
%A A355821 _Antti Karttunen_, Jul 18 2022
