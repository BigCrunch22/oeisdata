%I A355647 #17 Jul 26 2022 13:38:29
%S A355647 1,2,3,5,6,7,11,12,13,4,17,8,9,19,18,23,29,20,25,28,31,37,32,10,24,14,
%T A355647 15,41,30,43,47,60,53,59,48,61,67,40,71,21,44,22,42,64,26,72,45,50,27,
%U A355647 33,84,52,54,34,56,90,35,38,73,39,80,46,96,51,63,66,55,49,70,57,79,78,83,58,62,120
%N A355647 a(1) = 1, a(2) = 2; for n > 2, a(n) is the smallest positive number that has not yet appeared that has the same number of divisors as the sum a(n-2) + a(n-1).
%C A355647 In the first 500000 terms the smallest numbers that have not appeared are 15625, 25600, 28561, 36864. It is unknown if these and all other numbers eventually appear. In the same range on eighty-two occasions a(n) equals the sum of the previous two terms, these values begin 3, 5, 17, 64, 90, 73, 120, 144, 192.
%C A355647 See A355648 for the fixed points.
%H A355647 Scott R. Shannon, <a href="/A355647/a355647.png">Image of the first 500000 terms</a>. The green line is y = n.
%e A355647 a(5) = 6 as a(3) + a(4) = 3 + 5 = 8 which has four divisors, and 6 is the smallest unused number that has four divisors.
%o A355647 (Python)
%o A355647 from sympy import divisor_count
%o A355647 from itertools import count, islice
%o A355647 def agen():
%o A355647     anm1, an, mink, seen = 1, 2, 3, {1, 2}
%o A355647     yield 1
%o A355647     for n in count(2):
%o A355647         yield an
%o A355647         k, target = mink, divisor_count(anm1+an)
%o A355647         while k in seen or divisor_count(k) != target: k += 1
%o A355647         while mink in seen: mink += 1
%o A355647         anm1, an = an, k
%o A355647         seen.add(an)
%o A355647 print(list(islice(agen(), 76))) # _Michael S. Branicky_, Jul 26 2022
%Y A355647 Cf. A355648, A355636, A000005, A351001, A352768, A352867, A352774.
%K A355647 nonn
%O A355647 1,2
%A A355647 _Scott R. Shannon_, Jul 12 2022
