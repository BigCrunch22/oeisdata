%I A338709 #26 Dec 19 2020 11:45:13
%S A338709 6,129,1209,8856,57522,348945,2031525,11531712,64438638,356590161,
%T A338709 1961459841,10749416568,58777575354,320956083777,1751147966157,
%U A338709 9549634751424,52062358139670,283782668909793,1546691543230473,8429380058864280,45938035123043586,250345837703068209
%N A338709 Number of (undirected) paths in C_3 X P_n.
%H A338709 Seiichi Manyama, <a href="/A338709/b338709.txt">Table of n, a(n) for n = 1..50</a>
%F A338709 Empirical g.f.: 3*x*(2 + 15*x - 53*x^2 + 89*x^3 - 37*x^4) / ((1 - x)^2 * (1 - 3*x)^2 * (1 - 6*x + 3*x^2)). - _Vaclav Kotesovec_, Dec 19 2020
%o A338709 (Python)
%o A338709 # Using graphillion
%o A338709 from graphillion import GraphSet
%o A338709 def make_CnXPk(n, k):
%o A338709     grids = []
%o A338709     for i in range(1, k + 1):
%o A338709         for j in range(1, n):
%o A338709             grids.append((i + (j - 1) * k, i + j * k))
%o A338709         grids.append((i + (n - 1) * k, i))
%o A338709     for i in range(1, k * n, k):
%o A338709         for j in range(1, k):
%o A338709             grids.append((i + j - 1, i + j))
%o A338709     return grids
%o A338709 def A(start, goal, n, k):
%o A338709     universe = make_CnXPk(n, k)
%o A338709     GraphSet.set_universe(universe)
%o A338709     paths = GraphSet.paths(start, goal)
%o A338709     return paths.len()
%o A338709 def B(n, k):
%o A338709     m = k * n
%o A338709     s = 0
%o A338709     for i in range(1, m):
%o A338709         for j in range(i + 1, m + 1):
%o A338709             s += A(i, j, n, k)
%o A338709     return s
%o A338709 def A338709(n):
%o A338709     return B(3, n)
%o A338709 print([A338709(n) for n in range(1, 11)])
%Y A338709 Cf. A003689, A338960, A338961, A338962, A338963.
%K A338709 nonn
%O A338709 1,1
%A A338709 _Seiichi Manyama_, Dec 18 2020
