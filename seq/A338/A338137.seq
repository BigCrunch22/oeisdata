%I A338137 #12 Oct 15 2020 17:01:25
%S A338137 1,7,6,25,5,62,4,123,3,214,2,341,20,24,61,23,122,22,213,21,340,57,60,
%T A338137 121,59,212,58,339,118,120,211,119,338,209,210,337,336,505,19,509,56,
%U A338137 508,117,507,208,506,335,722,18,726,55,725,116,724,207,723,334,993,17,997,54,996
%N A338137 Lexicographically earliest sequence of distinct positive integers such that the nested cube root (a(n) + (a(n-1) + ... + (a(1))^(1/3)...)^(1/3))^(1/3) is an integer.
%C A338137 A permutation of positive integers: letting s_n = (a(n) + (a(n-1) + ... + (a(1))^(1/3)...)^(1/3))^(1/3), we have a_n = s_n^3-s_{n-1}. We claim that if s_1,...s_{n-1} <= k, then s_n <=k+1. Indeed, the given condition implies a_1,...,a_{n-1} <= k^3. Since (k+1)^3-s_{n-1} >= k^3+3k^2+2k+1 > a_j for j < n and a_n is the smallest positive integer not already in the sequence for which a_n+s_{n-1} is a cube, then s_n <= k+1. Then we note that a_n = s_n^3-s_{n-1} cannot repeat, so that s_n cannot be a single constant infinitely often, so {s_n} contains every positive integer. Finally, for an integer k, k appears in the sequence {a_n} no later than the first time s_{n-1} = k^3-k.
%o A338137 (Python)
%o A338137 myList = [1]
%o A338137 s = 1
%o A338137 t = 0
%o A338137 for n in range(9999):
%o A338137     b = 2
%o A338137     while t == 0:
%o A338137         if(b**3-s > 0 and not b**3-s in myList):
%o A338137             myList.append(b**3-s)
%o A338137             s = b
%o A338137             t = 1
%o A338137         else:
%o A338137             b += 1
%o A338137     t=0
%o A338137 print("myList: ",myList)
%o A338137 (PARI) lista(nn) = {my(va = vector(nn), lastcb); va[1] = 1; lastcb = 1; for (n=2, nn, my(k = ceil(sqrtn(sqrtnint(lastcb, 3), 3))); while (#select(x->(x==(k^3-sqrtnint(lastcb, 3))), va), k++); va[n] = k^3-sqrtnint(lastcb, 3); lastcb = k^3;); va; } \\ _Michel Marcus_, Oct 13 2020
%Y A338137 Cf. A323635 (similar definition with square roots).
%K A338137 nonn
%O A338137 1,2
%A A338137 _Vincent Chan_, Oct 12 2020
