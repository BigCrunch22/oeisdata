%I A338297 #44 Jan 12 2021 02:50:43
%S A338297 6,228,4800,76116,1094316,14557092,183735204,2230289220,26275912776,
%T A338297 302338568832,3412921463352,37923555328200,415863933818988,
%U A338297 4509400849281240,48428461587426108,515767225814395500,5452991323044249720,57282647077608267072,598324561437126968664,6217929367753246782612
%N A338297 Number of Hamiltonian paths in C_6 X P_n.
%H A338297 Seiichi Manyama, <a href="/A338297/b338297.txt">Table of n, a(n) for n = 1..25</a>
%o A338297 (Python)
%o A338297 # Using graphillion
%o A338297 from graphillion import GraphSet
%o A338297 def make_CnXPk(n, k):
%o A338297     grids = []
%o A338297     for i in range(1, k + 1):
%o A338297         for j in range(1, n):
%o A338297             grids.append((i + (j - 1) * k, i + j * k))
%o A338297         grids.append((i + (n - 1) * k, i))
%o A338297     for i in range(1, k * n, k):
%o A338297         for j in range(1, k):
%o A338297             grids.append((i + j - 1, i + j))
%o A338297     return grids
%o A338297 def A(start, goal, n, k):
%o A338297     universe = make_CnXPk(n, k)
%o A338297     GraphSet.set_universe(universe)
%o A338297     paths = GraphSet.paths(start, goal, is_hamilton=True)
%o A338297     return paths.len()
%o A338297 def B(n, k):
%o A338297     m = k * n
%o A338297     s = 0
%o A338297     for i in range(1, m):
%o A338297         for j in range(i + 1, m + 1):
%o A338297             s += A(i, j, n, k)
%o A338297     return s
%o A338297 def A338297(n):
%o A338297     return B(6, n)
%o A338297 print([A338297(n) for n in range(1, 11)])
%Y A338297 Cf. A003689 (C_3 X P_n), A003752 (C_4 X P_n), A003732 (C_5 X P_n), A268894 (C_n X P_n).
%Y A338297 Cf. A180582, A339143, A338962.
%K A338297 nonn
%O A338297 1,1
%A A338297 _Seiichi Manyama_, Dec 18 2020
