%I A338960 #22 Dec 19 2020 14:27:57
%S A338960 12,444,7584,103184,1246892,14010212,150042016,1554630384,15735477148,
%T A338960 156604841764,1539509238384,14997746124304,145132198165132,
%U A338960 1397493793301476,13407313676392384,128278229316758192,1224872135665718780,11678406201771406628,111224649402691424912,1058446545979095492816
%N A338960 Number of (undirected) paths in C_4 X P_n.
%H A338960 <a href="/A338960/b338960.txt">Table of n, a(n) for n = 1..20</a>
%o A338960 (Python)
%o A338960 # Using graphillion
%o A338960 from graphillion import GraphSet
%o A338960 def make_CnXPk(n, k):
%o A338960     grids = []
%o A338960     for i in range(1, k + 1):
%o A338960         for j in range(1, n):
%o A338960             grids.append((i + (j - 1) * k, i + j * k))
%o A338960         grids.append((i + (n - 1) * k, i))
%o A338960     for i in range(1, k * n, k):
%o A338960         for j in range(1, k):
%o A338960             grids.append((i + j - 1, i + j))
%o A338960     return grids
%o A338960 def A(start, goal, n, k):
%o A338960     universe = make_CnXPk(n, k)
%o A338960     GraphSet.set_universe(universe)
%o A338960     paths = GraphSet.paths(start, goal)
%o A338960     return paths.len()
%o A338960 def B(n, k):
%o A338960     m = k * n
%o A338960     s = 0
%o A338960     for i in range(1, m):
%o A338960         for j in range(i + 1, m + 1):
%o A338960             s += A(i, j, n, k)
%o A338960     return s
%o A338960 def A338960(n):
%o A338960     return B(4, n)
%o A338960 print([A338960(n) for n in range(1, 11)])
%Y A338960 Cf. A003752, A338709, A338961, A338962, A338963.
%K A338960 nonn
%O A338960 1,1
%A A338960 _Seiichi Manyama_, Dec 18 2020
