%I A328059 #27 Dec 20 2019 23:38:45
%S A328059 0,1,1,2,2,4,2,3,2,3,2,3,2,3,4,4,2,3,3,4,4,4,6,5,5,5,4,6,4,5,3,5,4,3,
%T A328059 5,5,4,3,4,5,2,4,3,6,4,5,5,7,4,5,5,6,7,5,3,5,4,3,6,5,2,7,6,7,5,5,4,6,
%U A328059 6,7,5,6,6,6,8,5,7,7,6,5,5,7,5,7,3,4,5,6,5,6,6,7,7,7,4,8,6,7,7,6,5
%N A328059 a(n) is the number of additions, subtractions and/or multiplications needed to calculate n using numbers a(n-a(n)) to a(n) in order and in single step calculations.
%H A328059 S. Brunner, <a href="/A328059/b328059.txt">Table of n, a(n) for n = 0..10000</a>
%H A328059 S. Brunner, <a href="https://pastebin.com/BDzgnvhP">Link for python program which shows calculation steps for each number</a>
%H A328059 S. Brunner, <a href="https://pastebin.com/T3umyseT">List for n = 0..5600 with calculation steps for each n</a>
%e A328059 a(10)=2 because you need 2 calculation steps to get to 10.
%e A328059 The numbers for the first calculation are: a(n-2)=a(8)=2, a(n-1)=a(9)=3.
%e A328059 We need to add these 2 numbers: 2+3=5 (1st step).
%e A328059 To get 10 as result we need to multiply 5 from step 1 with a(n) itself, so we get 5*2=10 (2nd step).
%e A328059 For n=34 we need 5 calculation steps, because there is no solution with 4 or fewer steps, but we pretend we tested these cases before.
%e A328059 The numbers we need to use {a(n-5) to a(n)} are: 5,3,5,4,3,5.
%e A328059 1. 5+3=8 | 2. 8*5=40 | 3. 40-4=36 | 4. 36+3=39 | 5. 39-5=34.
%o A328059 (Python)
%o A328059 def A(z):
%o A328059     a=[0,1,1]
%o A328059     n=3
%o A328059     an=2
%o A328059     while n<=z:
%o A328059         list1=[a[n-an]]
%o A328059         nn=an-2
%o A328059         while nn>0:
%o A328059             l=len(list1)
%o A328059             i=0
%o A328059             while i<l:
%o A328059                 v=list1[0]
%o A328059                 list1.remove(v)
%o A328059                 list1.append(v+a[n-nn-1])
%o A328059                 if v-n<300:
%o A328059                     list1.append(v*a[n-nn-1])
%o A328059                 list1.append(v-a[n-nn-1])
%o A328059                 i=i+1
%o A328059             nn=nn-1
%o A328059         c=list1.count(n-an-a[n-1])+list1.count(n/an-a[n-1])+list1.count(n+an-a[n-1])
%o A328059         c=c+list1.count((n-an)/a[n-1])+list1.count((n/an)/a[n-1])+list1.count((n+an)/a[n-1])
%o A328059         c=c+list1.count(n-an+a[n-1])+list1.count(n/an+a[n-1])+list1.count(n+an+a[n-1])
%o A328059         if c==0:
%o A328059             an=an+1
%o A328059         else:
%o A328059             a.append(an)
%o A328059             print(n,an)
%o A328059             n=n+1
%o A328059             an=2
%o A328059     return a
%K A328059 nonn
%O A328059 0,4
%A A328059 _S. Brunner_, Oct 03 2019
