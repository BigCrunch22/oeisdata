%I A321171 #66 Jun 19 2022 09:13:48
%S A321171 0,0,2,0,3,4,9,0,5,6,13,8,16,18,28,0,9,10,21,12,24,26,40,16,30,32,48,
%T A321171 36,53,56,75,0,17,18,37,20,40,42,64,24,46,48,72,52,77,80,107,32,58,60,
%U A321171 88,64,93,96,127,72,103,106,139,112,146,150,186,0,33,34,69,36,72,74,112
%N A321171 a(n) is the total number of 1's in binary that n shares with the positive integers less than n.
%C A321171 The graph follows a fractal pattern repeating and enlarging after every power of 2. The number of "lines" produced by the scatter plot in each fractal section approaching a power of two is equivalent to log(base 2) of that number.
%H A321171 Rémy Sigrist, <a href="/A321171/b321171.txt">Table of n, a(n) for n = 1..8192</a>
%F A321171 a(n) = Sum_{e >=0, n mod 2^(e+1) >= 2^e} (n - (n mod 2^(e+1)))/2 + (n mod 2^(e+1) - 2^e).
%e A321171 For n = 5: 5 in binary is 101. This shares one 1 with 1 (01), one 1 with 3 (11), and one 1 with 4 (100). Therefore a(5) = 3.
%e A321171 For n = 11: 11 in binary is 1011. This shares one 1 with 1 (01), one 1 with 2 (10), two 1's with 3 (11), one 1 with 5 (101), one 1 with 6 (110), two 1's with 7 (111), one 1 with 8 (1000), two 1's with 9 (1001), and two 1's with 10 (1010). Therefore a(11) = 13.
%p A321171 a:= n-> add(add(i,i=Bits[Split](Bits[And](n, j))), j=1..n-1):
%p A321171 seq(a(n), n=1..80);  # _Alois P. Heinz_, Jun 19 2022
%t A321171 a[n_] := Sum[DigitCount[BitAnd[n, k], 2, 1], {k, 1, n-1}];
%t A321171 a /@ Range[1, 100] (* _Jean-François Alcover_, Sep 28 2019 *)
%o A321171 (Java)
%o A321171 import java.lang.Math;
%o A321171 public class Binaryish {
%o A321171   public static void main(String args[]){
%o A321171     int max = 270;//Generate numbers up to a(max)
%o A321171     for(int x = 1; x <= max; x++) {
%o A321171       System.out.print(counter(x) + "\n");
%o A321171     }
%o A321171   }
%o A321171   public static int counter(int amount){
%o A321171     int a = amount, count = 0, power = 0;
%o A321171     while(Math.pow(2,power) < a){
%o A321171       power++;
%o A321171     }
%o A321171     for(int z = 1; z <= power; z++){
%o A321171       if(a % Math.pow(2,z) > Math.pow(2,z-1)-1){
%o A321171         count += (a/((int) Math.pow(2,z))*Math.pow(2,z-1)) + (a%Math.pow(2,z)-Math.pow(2,z-1));
%o A321171       }
%o A321171     }
%o A321171     return count;
%o A321171   }
%o A321171 }
%o A321171 (PARI) a(n)={sum(k=1, n-1, hammingweight(bitand(n, k)))} \\ _Andrew Howroyd_, Aug 27 2019
%o A321171 (PARI) a(n)={sum(e=0, logint(n,2), if(bittest(n,e), (n>>(e+1)<<e) + bitand(n, (1<<e)-1)))} \\ _Andrew Howroyd_, Aug 27 2019
%o A321171 (Python)
%o A321171 def a(n): return sum((i&n).bit_count() for i in range(1, n))
%o A321171 print([a(n) for n in range(1, 72)]) # _Michael S. Branicky_, Jun 19 2022
%Y A321171 Cf. A007088 (binary numbers), A048881.
%K A321171 base,nonn
%O A321171 1,3
%A A321171 _Brandon Weiss_, Aug 27 2019
