%I A374849 #28 Oct 01 2024 08:50:44
%S A374849 0,1,0,1,1,0,0,1,2,3,1,0,0,1,0,1,1,2,2,3,3,1,1,0,0,0,0,1,1,0,0,1,2,3,
%T A374849 1,2,4,5,2,3,6,7,3,1,2,3,1,0,0,1,0,0,0,1,0,1,2,3,1,0,0,1,0,1,1,2,2,3,
%U A374849 3,1,1,2,2,4,4,5,5,2,2,3,3,6,6,7,7,3,3
%N A374849 In the binary expansion of n: collapse bits from most to least significant 10 -> 1, 01 -> 0, 00 -> nothing, 11 -> nothing.
%C A374849 This is essentialy the Von Neumann biased to fair coin extractor.
%C A374849 a(n) = 0 if the collapse results in no bits.
%C A374849 If the bit size of n is odd then the least significant bit is ignored.
%H A374849 Paolo Xausa, <a href="/A374849/b374849.txt">Table of n, a(n) for n = 1..10000</a>
%H A374849 Wikipedia, <a href="https://en.wikipedia.org/wiki/Fair_coin">Fair coin</a>.
%H A374849 Wikipedia, <a href="https://en.wikipedia.org/wiki/Randomness_extractor">Randomness extractor</a>.
%e A374849 For n = 27983, the bits of n collapse as
%e A374849   n    = binary 11 01 10 10 10 01 11 1
%e A374849   a(n) = binary    0  1  1  1  0  = 14
%t A374849 A374849[n_] := FromDigits[StringReplace[IntegerString[n, 2], {"01"->"0", "10"->"1", Repeated[_, 2]->""}], 2];
%t A374849 Array[A374849, 100] (* _Paolo Xausa_, Oct 01 2024 *)
%o A374849 (Python)
%o A374849 def a(n):
%o A374849   e, B = "", bin(n)[2:]
%o A374849   for i in range(0,len(B),2):
%o A374849       if B[i:i+2] == "10": e += "1"
%o A374849       if B[i:i+2] == "01": e += "0"
%o A374849   if e == '': return 0
%o A374849   return int(e,2)
%o A374849 print([a(n) for n in range(1,70)])
%K A374849 nonn,base,easy,changed
%O A374849 1,9
%A A374849 _Dar√≠o Clavijo_, Sep 16 2024
