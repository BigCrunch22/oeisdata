%I A292510 #14 Sep 17 2017 23:17:31
%S A292510 4,7,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
%T A292510 7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
%U A292510 7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7
%N A292510 a(n) = smallest k >= 1 such that {1, p(n,2), p(n,3), ..., p(n,k)} can be partitioned into two sets with equal sums, where p(n,m) is m-th n-gonal number.
%C A292510 Conjecture: a(n) = 7 for n > 5.
%H A292510 Wikipedia, <a href="https://en.wikipedia.org/wiki/Polygonal_number">Polygonal number</a>
%F A292510 p(n,1) + p(n,2) + p(n,4) + p(n,7) = p(n,3) + p(n,5) + p(n,6) (= 28*n-42). So a(n) <= 7.
%e A292510 n = 3
%e A292510 1+3+6 = 10
%e A292510 n = 4
%e A292510 1+4+16+49 = 9+25+36 (= 70 = 28*4-42)
%e A292510 n = 5
%e A292510 1+5+22+35 = 12+51 (=63)
%e A292510 n = 6
%e A292510 1+6+28+91 = 15+45+66 (= 126 = 28*6-42)
%o A292510 (Ruby)
%o A292510 def f(k, n)
%o A292510   n * ((k - 2) * n - k + 4) / 2
%o A292510 end
%o A292510 def A(k, n)
%o A292510   ary = [1]
%o A292510   s_ary = [0]
%o A292510   (1..n).each{|i| s_ary << s_ary[-1] + f(k, i)}
%o A292510   m = s_ary[-1]
%o A292510   a = Array.new(m + 1){0}
%o A292510   a[0] = 1
%o A292510   (1..n).each{|i|
%o A292510     b = a.clone
%o A292510     (0..[s_ary[i - 1], m - f(k, i)].min).each{|j| b[j + f(k, i)] += a[j]}
%o A292510     a = b
%o A292510     s_ary[i] % 2 == 0 ? ary << a[s_ary[i] / 2] : ary << 0
%o A292510   }
%o A292510   ary
%o A292510 end
%o A292510 def B(n)
%o A292510   i = 1
%o A292510   while A(n, i)[-1] == 0
%o A292510     i += 1
%o A292510   end
%o A292510   i
%o A292510 end
%o A292510 def A292510(n)
%o A292510   (3..n).map{|i| B(i)}
%o A292510 end
%o A292510 p A292510(100)
%Y A292510 Cf. A019568, A158092, A158380, A292474.
%K A292510 nonn
%O A292510 3,1
%A A292510 _Seiichi Manyama_, Sep 17 2017
