%I A292973 #27 Jul 10 2022 09:40:59
%S A292973 1,1,-1,1,1,2,1,0,-1,-5,1,0,2,-2,15,1,0,0,-6,9,-52,1,0,0,6,24,-4,203,
%T A292973 1,0,0,0,-24,-140,-95,-877,1,0,0,0,24,60,870,414,4140,1,0,0,0,0,-120,
%U A292973 240,-5922,49,-21147,1,0,0,0,0,120,360,-4830,45416,-10088,115975
%N A292973 Square array T(n,k), n>=0, k>=0, read by antidiagonals, where T(0,k) = 1 and T(n,k) = (-1)^(k+1) * k! * Sum_{i=0..n-1} (-1)^i * binomial(n-1,i) * binomial(i+1,k) * T(n-1-i,k) for n > 0.
%H A292973 Seiichi Manyama, <a href="/A292973/b292973.txt">Antidiagonals n = 0..139, flattened</a>
%F A292973 T(n,k) = n! * Sum_{j=0..floor(n/k)} (-j)^(n-k*j)/(j! * (n-k*j)!) for k > 0. - _Seiichi Manyama_, Jul 10 2022
%e A292973 Square array begins:
%e A292973    1,  1,  1,   1,  1, ...
%e A292973   -1,  1,  0,   0,  0, ...
%e A292973    2, -1,  2,   0,  0, ...
%e A292973   -5, -2, -6,   6,  0, ...
%e A292973   15,  9, 24, -24, 24, ...
%o A292973 (Ruby)
%o A292973 def f(n)
%o A292973   return 1 if n < 2
%o A292973   (1..n).inject(:*)
%o A292973 end
%o A292973 def ncr(n, r)
%o A292973   return 1 if r == 0
%o A292973   (n - r + 1..n).inject(:*) / (1..r).inject(:*)
%o A292973 end
%o A292973 def A(k, n)
%o A292973   ary = [1]
%o A292973   (1..n).each{|i| ary << (-1) ** (k % 2 + 1) * f(k) * (0..i - 1).inject(0){|s, j| s + (-1) ** (j % 2) * ncr(i - 1, j) * ncr(j + 1, k) * ary[i - 1 - j]}}
%o A292973   ary
%o A292973 end
%o A292973 def A292973(n)
%o A292973   a = []
%o A292973   (0..n).each{|i| a << A(i, n - i)}
%o A292973   ary = []
%o A292973   (0..n).each{|i|
%o A292973     (0..i).each{|j|
%o A292973       ary << a[i - j][j]
%o A292973     }
%o A292973   }
%o A292973   ary
%o A292973 end
%o A292973 p A292973(20)
%Y A292973 Columns k=0-5 give: A292935, A003725, A292907, A292908, A292969, A292970.
%Y A292973 Rows n=0 gives A000012.
%Y A292973 Main diagonal gives A000142.
%Y A292973 Cf. A292948, A292978.
%K A292973 sign,tabl
%O A292973 0,6
%A A292973 _Seiichi Manyama_, Sep 27 2017
