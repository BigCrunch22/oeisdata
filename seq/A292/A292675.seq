%I A292675 #11 Feb 16 2025 08:33:51
%S A292675 1,4,9,16,25,27,29,32,33,33,33,34,35,35,35,36,37,38,40,40,40,40,40,40,
%T A292675 40,40,41,43,42,42,46,47,48,52,53,53,54,57,58,58,59,62,63,64,66,68,70,
%U A292675 72,73,74,75,75,78,78,79,80,82,83,85,86,88,91,92,97,96,98
%N A292675 Least number of symbols required to fill a grid of size n X n row by row in the greedy way such that in any row or column or rectangular 5 X 5 block no symbol occurs twice.
%C A292675 Consider the symbols as positive integers. By the greedy way we mean to fill the grid row by row from left to right always with the least possible positive integer such that the three constraints (on rows, columns and rectangular blocks) are satisfied.
%C A292675 In contrast to the sudoku case, the 5 X 5 rectangles have "floating" borders, so the constraint is actually equivalent to say that an element must be different from all neighbors in a Moore neighborhood of range 4 (having up to 9*9 = 81 grid points).
%H A292675 Andrew Howroyd, <a href="/A292675/b292675.txt">Table of n, a(n) for n = 1..100</a>
%H A292675 Eric Weisstein's World of Mathematics, <a href="https://mathworld.wolfram.com/MooreNeighborhood.html">Moore Neighborhood</a>
%o A292675 (PARI) a(n,m=5,g=matrix(n,n))={my(ok(g,k,i,j,m)=if(m,ok(g[i,],k)&&ok(g[,j],k)&&ok(concat(Vec(g[max(1,i-m+1)..i,max(1,j-m+1)..min(#g,j+m-1)])),k),!setsearch(Set(g),k))); for(i=1,n,for(j=1,n,for(k=1,n^2,ok(g,k,i,j,m)&&(g[i,j]=k)&&break)));vecmax(g)} \\ without "vecmax" the program returns the full n X n board.
%o A292675 (Python) # uses function in A292673
%o A292675 print([A292673(n, b=5) for n in range(1, 101)]) # _Michael S. Branicky_, Apr 13 2023
%Y A292675 Cf. A292670, A292671, A292672, ..., A292679.
%K A292675 nonn
%O A292675 1,2
%A A292675 _M. F. Hasler_, Sep 20 2017
%E A292675 Terms a(55) and beyond from _Andrew Howroyd_, Feb 22 2020
