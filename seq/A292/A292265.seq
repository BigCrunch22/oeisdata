%I A292265 #11 Oct 04 2017 14:04:48
%S A292265 2,3,12,6,20,180,720,5,80,25920,20,360,43200,25920,6220800,10,240,540,
%T A292265 671846400,540,57600,2160,540,194400,155520,45,5804752896000,77760,
%U A292265 14400,87071293440000,348285173760000,15,960,12538266255360000,311040,139968000,120,77760,18662400,1679616000,23219011584000,108330620446310400000,60,4665600,360,540,180
%N A292265 A multiplicative encoding (compressed) for the exponents of 2 obtained when using Shevelev's algorithm for computing A002326.
%C A292265 a(n) = A019565(v(1)) * A019565(v(2)) * ... * A019565(v(k)), where v(1) .. v(k) are 2-adic valuations (not all necessarily distinct) of the iterated values obtained when running Shevelev's algorithm for computing A002623. (See A179680 and A292239.)
%H A292265 Antti Karttunen, <a href="/A292265/b292265.txt">Table of n, a(n) for n = 0..1023</a>
%F A292265 For all n >= 0, A048675(a(n)) = A002326(n).
%o A292265 (PARI)
%o A292265 A000265(n) = (n >> valuation(n, 2));
%o A292265 A019565(n) = {my(j,v); factorback(Mat(vector(if(n, #n=vecextract(binary(n), "-1..1")), j, [prime(j), n[j]])~))}; \\ This function from _M. F. Hasler_
%o A292265 A292265(n) = { my(x = n+n+1, z = A019565(valuation(1+x,2)), m = A000265(1+x)); while(m!=1, z *= A019565(valuation(x+m,2)); m = A000265(x+m)); z; };
%o A292265 (Scheme) (define (A292265 n) (let ((x (+ n n 1))) (let loop ((z (A019565 (A007814 (+ 1 x)))) (k 1)) (let ((m (A000265 (+ x k)))) (if (= 1 m) z (loop (* z (A019565 (A007814 (+ x m)))) m))))))
%Y A292265 Cf. A000265, A002326, A007814, A019565, A179680, A292239 (a variant), A292266 (rgs-version of this filter).
%K A292265 nonn
%O A292265 0,1
%A A292265 _Antti Karttunen_, Oct 02 2017
