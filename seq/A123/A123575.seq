%I A123575 #16 Jul 17 2022 23:27:05
%S A123575 0,0,0,0,1,1,1,2,2,3,5,5,5,6,6,7,9,9,10,12,15,15,15,16,16,17,19,19,20,
%T A123575 22,25,25,26,28,31,35,35,35,36,36,37,39,39,40,42,45,45,46,48,51,55,55,
%U A123575 56,58,61,65,70,70,70,71,71,72,74,74,75,77,80,80,81,83,86,90,90,91,93
%N A123575 The Kruskal-Macaulay function L_3(n).
%C A123575 Write n (uniquely) as n = C(n_t,t) + C(n_{t-1},t-1) + ... + C(n_v,v) where n_t > n_{t-1} > ... > n_v >= v >= 1. Then L_t(n) = C(n_t,t+1) + C(n_{t-1},t) + ... + C(n_v,v+1).
%D A123575 D. E. Knuth, The Art of Computer Programming, Vol. 4, Fascicle 3, Section 7.2.1.3, Table 3.
%p A123575 lowpol := proc(n,t) local x::integer ; x := floor( (n*factorial(t))^(1/t)) ; while binomial(x,t) <= n do x := x+1 ; od ; RETURN(x-1) ; end: C := proc(n,t) local nresid,tresid,m,a ; nresid := n ; tresid := t ; a := [] ; while nresid > 0 do m := lowpol(nresid,tresid) ; a := [op(a),m] ; nresid := nresid - binomial(m,tresid) ; tresid := tresid-1 ; od ; RETURN(a) ; end: L := proc(n,t) local a ; a := C(n,t) ; #add( binomial(op(i,a),t+i),i=1..nops(a)) ; add( binomial(op(i,a),t+2-i),i=1..nops(a)) ; end: A123575 := proc(n) L(n,3) ; end: for n from 0 to 80 do printf("%d, ",A123575(n)) ; od ; # _R. J. Mathar_, May 18 2007
%t A123575 lowpol[n_, t_] := Module[{x = Floor[(n t!)^(1/t)]}, While[Binomial[x, t] <= n, x++] ; x - 1];
%t A123575 c[n_, t_] := Module[{n0 = n, t0 = t, m, a = {}}, While[n0 > 0, m = lowpol[n0, t0]; AppendTo[a, m]; n0 -= Binomial[m, t0]; t0--]; a];
%t A123575 L[n_, t_] := Module[{a = c[n, t]}, Sum[Binomial[a[[i]], t + 2 - i], {i, 1, Length[a]}]];
%t A123575 a[n_] := L[n, 3];
%t A123575 a /@ Range[0, 80] (* _Jean-Fran√ßois Alcover_, Mar 29 2020, after _R. J. Mathar_ *)
%Y A123575 For L_i(n), i=1, 2, 3, 4, 5 see A000217, A111138, A123575, A123576, A123577.
%Y A123575 Essentially partial sums of A056558.
%K A123575 nonn,easy
%O A123575 0,8
%A A123575 _N. J. A. Sloane_, Nov 12 2006
%E A123575 More terms from _R. J. Mathar_, May 18 2007
