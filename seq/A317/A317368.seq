%I A317368 #22 Dec 21 2020 01:52:18
%S A317368 1,2,2,6,4,20,12,66,46,20,12,4,72,48,36,24,8,4,44,16,374,202,146,76,
%T A317368 36,20,8,4,242,132,72,28,688,440,292
%N A317368 Number of binary strings of length n that have the maximum number (A248958(n)) of distinct nonempty squares.
%C A317368 The values a(3) = 4 and a(12) = 36 reported in the linked paper are incorrect. Indeed, the strings of length 3 containing one square are 6: 000, 001, 011, 100, 110, and 111. - _Giovanni Resta_, Jul 29 2018
%C A317368 All terms after a(0) are even by symmetry. - _Michael S. Branicky_, Dec 20 2020
%H A317368 Aviezri S. Fraenkel and Jamie Simpson, <a href="http://dx.doi.org/10.1006/jcta.1997.2843">How Many Squares Can a String Contain?</a>, Journal of Combinatorial Theory, Series A 82, 112-120 (1998). See Table 1.
%t A317368 a[n_] := Sort[ Tally[ Length@ Union@ StringCases[ StringJoin @@ #, x__ ~~ x__, Overlaps -> All] & /@ Tuples[{"0", "1"}, n]]][[-1, 2]]; a /@ Range[0, 16] (* _Giovanni Resta_, Jul 29 2018 *)
%o A317368 (Python)
%o A317368 from itertools import product
%o A317368 from collections import Counter
%o A317368 def a(n): # except for 0, twice count of beginning with 0 by symmetry
%o A317368   if n == 0: return 1
%o A317368   squares = set("".join(u) + "".join(u)
%o A317368     for r in range(1, n//2 + 1) for u in product("01", repeat = r))
%o A317368   words = ("0"+"".join(w) for w in product("01", repeat=n-1))
%o A317368   c = Counter(len(squares &
%o A317368     set(w[i:j] for i in range(n) for j in range(i+1, n+1))) for w in words)
%o A317368   return 2*c[max(c)]
%o A317368 print([a(n) for n in range(18)]) # _Michael S. Branicky_, Dec 20 2020 after _Giovanni Resta_
%Y A317368 Cf. A248958.
%K A317368 nonn,more
%O A317368 0,2
%A A317368 _Michel Marcus_, Jul 26 2018
%E A317368 a(3) and a(12) corrected by and a(14)-a(34) from _Giovanni Resta_, Jul 29 2018
