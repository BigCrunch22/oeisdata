%I A036342 #35 Feb 16 2025 08:32:37
%S A036342 2,3,5,7,11,23,67,89,4567,23456789,23456789101112123,
%T A036342 891011121234567891011,23456789101112123456789101112123,
%U A036342 567891011121234567891011121234567891011,121234567891011121234567891011121234567891011121,91011121234567891011121234567891011121234567891011121234567
%N A036342 Prime concatenated analog clock numbers read clockwise.
%C A036342 The hours 10, 11 and 12 are taken 'complete and unreversed'.
%C A036342 a(28) has 1325 digits. - _Michael S. Branicky_, May 20 2024
%H A036342 Michael S. Branicky, <a href="/A036342/b036342.txt">Table of n, a(n) for n = 1..27</a> (terms 1..25 from Sean A. Irvine)
%H A036342 Carlos Rivera, <a href="http://www.primepuzzles.net/puzzles/puzz_019.htm">Puzzle 19. Primes on a clock</a>, The Prime Puzzles & Problems Connection.
%H A036342 Eric Weisstein's World of Mathematics, <a href="https://mathworld.wolfram.com/ClockPrime.html">Clock Prime</a>.
%o A036342 (Python)
%o A036342 import heapq
%o A036342 from sympy import isprime
%o A036342 from itertools import islice
%o A036342 def A036342_gen(): # generator of terms
%o A036342     h = [(i, i) for i in range(1, 13)]
%o A036342     while True:
%o A036342         v, last = heapq.heappop(h)
%o A036342         if isprime(v):
%o A036342             yield v
%o A036342         nxt = 1 if last == 12 else last+1
%o A036342         shift = 10 if nxt < 10 else 100
%o A036342         heapq.heappush(h, (v*shift+nxt, nxt))
%o A036342 print(list(islice(A036342_gen(), 16))) # _Michael S. Branicky_, May 20 2024
%Y A036342 Cf. A034326, A036343, A036344.
%K A036342 nonn,base
%O A036342 1,1
%A A036342 _Patrick De Geest_, Dec 15 1998
%E A036342 a(14)-a(15) from _Jean-Marie Hachey_, Oct 05 2016
%E A036342 Offset and data corrected by _Sean A. Irvine_, Oct 26 2020
