%I A080080 #16 Dec 13 2015 07:05:12
%S A080080 1,0,1,2,1,1,0,0,0,1,1,0,3,1,1,0,2,2,1,1,1,3,2,2,1,2,1,1,0,0,0,0,0,0,
%T A080080 0,1,1,0,2,0,1,0,4,1,1,0,1,1,0,0,3,3,1,1,1,2,1,1,0,4,3,3,1,2,1,1,0,0,
%U A080080 0,2,2,2,2,1,1,1,1,1,1,0,4,2,2,2,2,1,1,1,3,1,1,0,3,3,2,2,2,2,1,1,2,2,1,1,1
%N A080080 T(n,k) = length of longest carry sequence when adding k to n in binary representation, 1 <= k <= n (triangular array).
%C A080080 T(n,1) = A007814(n+1), T(n,n) = 1; for n>1: T(n,n-1) = A043545(n+1); T(n,k) <= A070940(n) = T(n, A080079(n)).
%C A080080 T(n,k) = A050600(n+k,k) - 1. - _Reinhard Zumkeller_, Aug 03 2014
%H A080080 Reinhard Zumkeller, <a href="/A080080/b080080.txt">Rows n=1..150 of triangle, flattened</a>
%H A080080 <a href="/index/Bi#binary">Index entries for sequences related to binary expansion of n</a>
%e A080080 Triangle begins:
%e A080080               1
%e A080080             0   1
%e A080080           2   1   1
%e A080080         0   0   0   1
%e A080080       1   0   3   1   1
%e A080080     0   2   2   1   1   1
%e A080080   3   2   2   1   2   1   1
%o A080080 (Haskell)
%o A080080 import Data.Bits (xor, (.&.), shiftL)
%o A080080 a080080 :: Int -> Int -> Int
%o A080080 a080080 n k = addc n k 0 where
%o A080080    addc x y z | y == 0    = z - 1
%o A080080               | otherwise = addc (x `xor` y) (shiftL (x .&. y) 1) (z + 1)
%o A080080 a080080_row n = map (a080080 n) [1..n]
%o A080080 a080080_tabl = map a080080_row [1..]
%o A080080 -- _Reinhard Zumkeller_, Apr 22 2013
%Y A080080 Cf. A050600.
%K A080080 nonn,tabl,nice
%O A080080 1,4
%A A080080 _Reinhard Zumkeller_, Jan 26 2003
