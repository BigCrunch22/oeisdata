%I A149681
%S A149681 1,1,5,17,67,261,1101,4661,20049,87001,382589,1695781,7569313,
%T A149681 33959517,153131465,693502931,3153074549,14383223399,65803927299,
%U A149681 301837483491,1387839853983,6395130435889,29526896412549,136570991583717,632714113089353,2935698007000649,13640280804487557,63459615245411849
%N A149681 Number of walks within N^3 (the first octant of Z^3) starting at (0,0,0) and consisting of n steps taken from {(-1, -1, 1), (-1, 0, 0), (0, -1, 0), (0, 1, -1), (1, 1, 1)}.
%H A149681 Robert Israel, <a href="/A149681/b149681.txt">Table of n, a(n) for n = 0..100</a>
%H A149681 A. Bostan and M. Kauers, <a href="http://arxiv.org/abs/0811.2899">Automatic Classification of Restricted Lattice Walks</a>, arXiv:0811.2899 [math.CO], 2008.
%p A149681 N:= 50: # to get a(0)..a(N)
%p A149681 S:= [[-1,-1,1],[-1,0,0],[0,-1,0],[0,1,-1],[1,1,1]]:
%p A149681 B:=Array(0..N,0..N,0..N):
%p A149681 B[0,0,0]:= 1: A[0]:= 1:
%p A149681 for n from 1 to N do
%p A149681   A[n]:= 0;
%p A149681   Bp:= Array(0..N,0..N,0..N);
%p A149681   for i from 0 to n-1 do
%p A149681     for j from 0 to n-1 do
%p A149681       for k from 0 to n-1 do
%p A149681          for s in S do
%p A149681            p:= [i,j,k] + s;
%p A149681            if min(p) >= 0  then
%p A149681              Bp[op(p)]:= Bp[op(p)]+B[i,j,k];
%p A149681              A[n]:= A[n]+B[i,j,k];
%p A149681            fi
%p A149681    od od od od;
%p A149681    B:= copy(Bp);
%p A149681 od:
%p A149681 seq(A[i],i=0..N); # _Robert Israel_, Sep 15 2016
%t A149681 aux[i_Integer, j_Integer, k_Integer, n_Integer] := Which[Min[i, j, k, n] < 0 || Max[i, j, k] > n, 0, n == 0, KroneckerDelta[i, j, k, n], True, aux[i, j, k, n] = aux[-1 + i, -1 + j, -1 + k, -1 + n] + aux[i, -1 + j, 1 + k, -1 + n] + aux[i, 1 + j, k, -1 + n] + aux[1 + i, j, k, -1 + n] + aux[1 + i, 1 + j, -1 + k, -1 + n]]; Table[Sum[aux[i, j, k, n], {i, 0, n}, {j, 0, n}, {k, 0, n}], {n, 0, 10}]
%K A149681 nonn,walk,changed
%O A149681 0,3
%A A149681 _Manuel Kauers_, Nov 18 2008
