%I A275723 #35 Jun 24 2017 05:37:49
%S A275723 1,1,2,1,2,3,1,2,2,4,1,2,3,4,5,1,2,2,4,5,6,1,2,3,4,3,4,7,1,2,2,4,2,6,
%T A275723 7,8,1,2,3,4,2,4,7,8,9,1,2,2,4,2,6,7,8,4,10,1,2,3,4,5,4,7,8,9,10,11,1,
%U A275723 2,2,4,5,6,7,8,4,6,11,12,1,2,3,4,3,4,5,8,9,4,11,8,13,1,2,2,4,2,6,5,8,4,4,11,12,13,14,1,2,3,4,2,4,3,8,9,4,11,8,13,14,15
%N A275723 Square array A(n,k) = prime factorization of n (= 1..) completely reduced by factorial base representation of k (= 0..), read by descending antidiagonals as A(1,0), A(1,1), A(2,0), A(1,2), A(2,1), A(3,0), etc. See the Comments section for the meaning of reduction in this context.
%C A275723 The reduction is done by scanning the factorial base representation of k [see A007623] from its most significant end [where the most significant digit occurs at the one-based position A084558(k)], by adding the exponent of prime(1+A084558(k)) of n to the current exponent (possibly zero) of prime(1+A084558(k)-A099563(k)) in the prime factorization of n, after which the exponent of prime(1+A084558(k)) is changed to zero. Thus the total number of prime factors of n [A001222(n)] never changes. This single step of reduction is performed with a bivariate function A273673. The reduction then proceeds to the next digit to the right, effectively skipping any zeros until all factorial base digits of k have been scanned through and the prime factorization of n has been changed accordingly. See the examples.
%C A275723 This bivariate function is used to compute A275725.
%H A275723 Antti Karttunen, <a href="/A275723/b275723.txt">Table of n, a(n) for n = 1..5050; the first 100 antidiagonals of array</a>
%H A275723 Indranil Ghosh, <a href="/A275723/a275723.txt">Python program for computing this sequence</a>
%H A275723 <a href="/index/Fa#facbase">Index entries for sequences related to factorial base representation</a>
%F A275723 A(n,0) = n, and for k > 0, A(n,k) = A(A273673(n,k), A257687(k)).
%F A275723 Other identities. For all n >= 1 and k >= 0:
%F A275723 A001222(A(n,k)) = A001222(n). [This reduction doesn't change the total number of prime factors of n.]
%e A275723 The top left 7 X 15 corner of the array:
%e A275723    1,  1,  1,  1,  1,  1,  1
%e A275723    2,  2,  2,  2,  2,  2,  2
%e A275723    3,  2,  3,  2,  3,  2,  3
%e A275723    4,  4,  4,  4,  4,  4,  4
%e A275723    5,  5,  3,  2,  2,  2,  5
%e A275723    6,  4,  6,  4,  6,  4,  6
%e A275723    7,  7,  7,  7,  7,  7,  5
%e A275723    8,  8,  8,  8,  8,  8,  8
%e A275723    9,  4,  9,  4,  9,  4,  9
%e A275723   10, 10,  6,  4,  4,  4, 10
%e A275723   11, 11, 11, 11, 11, 11, 11
%e A275723   12,  8, 12,  8, 12,  8, 12
%e A275723   13, 13, 13, 13, 13, 13, 13
%e A275723   14, 14, 14, 14, 14, 14, 10
%e A275723   15, 10,  9,  4,  6,  4, 15
%e A275723 For row 15 (above), we have 15 = 3*5 = prime(2)*prime(3) and the terms for columns 0 - 6 (in factorial base: 0, 1, 10, 11, 20, 21, 100, see A007623) are computed as:
%e A275723 When k=0, we do nothing and n stays as n (thus column 0 of array is A000027).
%e A275723 When k=1 (with the length 1), we transfer the exponent of prime(2) to prime(1), to get prime(1)*prime(3) = 2*5 = 10.
%e A275723 When k=2, in factorial base "10", with the length 2, we transfer (add) the exponent of prime(3) to prime(2), to get prime(2)*prime(2) = 9.
%e A275723 When k=3, in factorial base "11", we first do as above, to get 9 = prime(2)^2, and for the least significant one, we transfer (add) the exponent of prime(2) to prime(1), to get prime(1)*prime(1) = 4.
%e A275723 When k=4, in factorial base "20", with the length 2, we transfer (add) the exponent of prime(3) to prime(1), to get prime(2)*prime(1) = 6.
%e A275723 When k=5, in factorial base "21", we first do as above, to get 6 = prime(2)*prime(1), and for the remaining "1" in factorial base representation of k, we transfer (add) the exponent of prime(2) to prime(1), to get prime(1)*prime(1) = 4.
%e A275723 When k=6, in factorial base "100", with the length 3, we transfer (add) the exponent of prime(4) to prime(3), but prime(4) = 7 whose exponent is zero in 15, thus the result is also 15.
%o A275723 (Scheme)
%o A275723 (define (A275723 n) (A275723bi (A002260 n) (- (A004736 n) 1)))
%o A275723 (define (A275723bi n fex) (let loop ((n n) (fex fex)) (cond ((zero? fex) n) (else (loop (A273673bi n fex) (A257687 fex))))))
%o A275723 ;; Code for A273673bi given in A273673.
%Y A275723 Transpose: A275724.
%Y A275723 Column 0: A000027.
%Y A275723 Cf. A001222, A002260, A004736, A007623, A257687, A273673, A275725.
%K A275723 nonn,base,tabl
%O A275723 1,3
%A A275723 _Antti Karttunen_, Aug 09 2016
