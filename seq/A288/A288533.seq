%I A288533 #26 Dec 11 2023 08:40:03
%S A288533 1,1,2,2,1,1,3,2,3,1,3,2,1,2,2,2,1,2,4,1,1,2,3,3,2,3,5,1,3,3,3,1,1,2,
%T A288533 2,4,3,2,3,4,4,1,3,4,4,2,1,2,2,5,5,1,2,4,3,5,1,1,2,3,4,5,2,2,3,5,5,3,
%U A288533 1,3,3,3,4,5,1,2,2,4,5,6,1,2,4,4,6,4,1,2,3,4,4,6,2,1,2,3,3,5,5,4,1,2,3,5,6,6,1,1,2,3,4,5,7,3,2,3,4,4,7,6,1,3,3,4,5,6,5,1,2,2
%N A288533 Parse A004736 into distinct phrases [1], [2], [1,3], [2,1], [4], [3], [2,1,5], [4,3], [2,1,6], ...; a(n) is the length of the n-th phrase.
%C A288533 The phrases are formed by the Ziv-Lempel encoding described in A106182. - _Neal Gersh Tolunsky_, Nov 30 2023
%H A288533 Neal Gersh Tolunsky, <a href="/A288533/b288533.txt">Table of n, a(n) for n = 1..10000</a>
%e A288533 Consider the infinite sequence [1,2,1,3,2,1,4,3,2,1,5,4,3,2,1,...], i.e., A004736. We can first take [1] since we've never used it before. Then [2]. For the third term, we've already used [1], so we must instead take [1,3].
%o A288533 (Python)
%o A288533 # you should use program from internal format
%o A288533 a = set()
%o A288533 i = 2
%o A288533 s = "1"
%o A288533 seq = ""
%o A288533 while i < 100:
%o A288533     j = i
%o A288533     while j > 0:
%o A288533         if s not in a:
%o A288533             seq = seq + "," + str(len(s)-len(s.replace(",",""))+1)
%o A288533             a.add(s)
%o A288533             s = str(j)
%o A288533         else:
%o A288533             s = s + "," + str(j)
%o A288533         j -= 1
%o A288533     i += 1
%o A288533 print(seq[1:])
%Y A288533 Cf. A109337, A106182, A187180, A187181, A187182, A187183, A187184, A187185, A187186, A187187, A187188, A187199, A187200.
%K A288533 nonn
%O A288533 1,3
%A A288533 _Lewis Chen_, Jun 11 2017
