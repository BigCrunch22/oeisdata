%I A288173 #12 Apr 06 2020 20:20:44
%S A288173 0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,
%T A288173 0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,
%U A288173 0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1
%N A288173 Fixed point of the mapping 00->0010, 1->001, starting with 00.
%C A288173 From _Michel Dekking_, Feb 21 2020: (Start)
%C A288173 This sequence is a morphic sequence, i.e., the letter-to-letter image of a fixed point of a morphism mu. In fact, one can take the alphabet {1,2,...,8}, with the morphism
%C A288173       mu:  1->123, 2->14, 3->56, 4->1, 5->27, 6->83, 7->56, 8->14,
%C A288173 and the letter-to-letter map lambda defined by
%C A288173       lambda:  1->0, 2->0, 3->1, 4->0, 5->0, 6->1, 7->0, 8->0.
%C A288173 Then (a(n)) = lambda(x), where x = 12314561231278... is the unique fixed point of the morphism mu.
%C A288173 How does one see this? We note first that the mapping  SR: 00->0010, 1->010, is an algorithmic procedure given by StringReplace in Mathematica. This makes it hard in general to describe iterates of it.
%C A288173 To circumvent this, we do the following: define the three words
%C A288173       A:=001, B:=0001, C:=00001.
%C A288173 Then (a(n)) is a concatenation of these three words, and moreover the StringReplace algorithm SR acts context free on concatenations of these three words:
%C A288173       SR(001) = 0010001, SR(0001) = 00100001, SR(00001) = 00100010001.
%C A288173 This induces a morphism alpha on the alphabet {A,B,C} given by
%C A288173       alpha(A) = AB, alpha(B) = AC, alpha(C) = ABB.
%C A288173 It is clear that a(n) = delta(t(n)),  where delta is given by:
%C A288173       delta(A) = 001, delta(B) = 0001, delta(C) = 00001,
%C A288173 and t is the unique fixed point t = ABACABABB.... of the morphism tau.
%C A288173 In my paper  "Morphic words, Beatty sequences and integer images of the Fibonacci language" such a map delta is called a decoration. It is well-known that decorated fixed points are morphic sequences, and the 'natural' algorithm to achieve this yields a morphism on an alphabet of 3+4+5 = 12 symbols. The algorithm gives a large freedom in defining the morphism. This permits to reduce the size of the alphabet, and to obtain the morphism mu and the letter-to-letter map lambda given above.
%C A288173 See A288176 for a proof of Kimberling's conjecture on the number of letters (0's and 1's) in the n-th iteration of the mapping SR. (End)
%H A288173 Clark Kimberling, <a href="/A288173/b288173.txt">Table of n, a(n) for n = 1..10000</a>
%H A288173 Michel Dekking, <a href="https://doi.org/10.1016/j.tcs.2019.12.036">Morphic words, Beatty sequences and integer images of the Fibonacci language</a>, Theoretical Computer Science 809, 407-417 (2020).
%e A288173 Iterates, starting with 00:
%e A288173 00
%e A288173 0010
%e A288173 00100010
%e A288173 0010001001000010
%e A288173 0010001001000010010001001000100010
%t A288173 s = {0, 0}; w[0] = StringJoin[Map[ToString, s]];
%t A288173 w[n_] := StringReplace[w[n - 1], {"00" -> "0010", "1" -> "001"}]
%t A288173 Table[w[n], {n, 0, 8}]
%t A288173 st = ToCharacterCode[w[11]] - 48   (* A288173 *)
%t A288173 Flatten[Position[st, 0]]  (* A288174 *)
%t A288173 Flatten[Position[st, 1]]  (* A288175 *)
%t A288173 Table[StringLength[w[n]], {n, 1, 35}] (* A288176 conjectured *)
%Y A288173 Cf. A288174, A288175, A288176.
%K A288173 nonn,easy
%O A288173 1
%A A288173 _Clark Kimberling_, Jun 07 2017
