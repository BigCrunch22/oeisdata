%I A221555 #9 Sep 10 2015 01:12:05
%S A221555 152607844,823378840,578354438,2035308228,1004016855,280090412,
%T A221555 101929267,1784484492,944975825,1190959745,2051724831,784170963,
%U A221555 1102246882,1400285365,915896220,1070477904,515204530,1083454666,681910962,269220094,563613512,194847408,1998097157
%N A221555 Consecutive values produced by the C++ knuth_b random number generator with the default seed (1).
%C A221555 The knuth_b generator uses "Algorithm B" (described in the Knuth reference) to permute the values produced by the "minimal standard generator".
%D A221555 Carter Bays and S. D. Durham, "Improving a Poor Random Number Generator", ACM Transactions on Mathematical Software, vol. 2, issue 1 (March 1976), pp. 59-64.
%D A221555 D. E. Knuth, The Art of Computer Programming, 2nd Edition, vol. 2 Seminumerical Algorithms, Addison-Wesley, 1981, pp. 32-33.
%H A221555 Eric M. Schmidt, <a href="/A221555/b221555.txt">Table of n, a(n) for n = 1..1000</a>
%H A221555 <a href="/index/Ps#PRN">Index entries for sequences related to pseudo-random numbers.</a>
%o A221555 (C++)
%o A221555 #include <iostream>
%o A221555 #include <random>
%o A221555 void A221555(int max)
%o A221555 {
%o A221555   std::knuth_b gen;
%o A221555   for (int i = 1; i <= max; ++i)
%o A221555     std::cout << i << ' ' << gen() << '\n';
%o A221555 }
%Y A221555 Cf. A096550.
%K A221555 nonn
%O A221555 1,1
%A A221555 _Eric M. Schmidt_, Jan 19 2013
