%I A367726 #18 Nov 30 2023 07:14:14
%S A367726 1,2,4,9,8,11,10,28,12,22,22,26,41,40,75,49,36,55,40,51,52,57,42,124,
%T A367726 44,118,118,186,50,148,52,94,94,130,56,106,94,114,100,112,114,120,169,
%U A367726 168,331,177,164,311,168,307,308,441,201,200,395,209,148,231,152,227
%N A367726 Row sums of A367562 (iterates of the Christmas tree pattern map, A367508, converted to decimal).
%C A367726 See A367508 for the description of the Christmas tree patterns, references and links.
%H A367726 Paolo Xausa, <a href="/A367726/b367726.txt">Table of n, a(n) for n = 1..13494</a> (first 15 orders).
%H A367726 Michael De Vlieger, <a href="/A367726/a367726.png">Log log scatterplot of a(n)</a>, n = 1..99294 (18 orders) showing primes in red, and nonprimes in dark green.
%H A367726 Michael De Vlieger, <a href="/A367726/a367726_1.png">Log log scatterplot of a(n)</a>, n = 1..7059 (14 orders) showing primes in red, composite prime powers in gold, squarefree composites in green, and numbers neither squarefree nor prime powers in blue, accentuating numbers of the last category that are also squareful in light blue.
%e A367726 The first 4 tree pattern orders of A367508 are shown below (left). In the middle they are converted to decimal (A367562); row sums are on the right.
%e A367726 .
%e A367726 Order 1:                        |                 |
%e A367726               0  1              |      0  1       |   1
%e A367726                                 |                 |
%e A367726 Order 2:                        |                 |
%e A367726                10               |        2        |   2
%e A367726            00  01  11           |     0  1  3     |   4
%e A367726                                 |                 |
%e A367726 Order 3:                        |                 |
%e A367726             100  101            |      4  5       |   9
%e A367726             010  110            |      2  6       |   8
%e A367726        000  001  011  111       |   0  1  3  7    |  11
%e A367726                                 |                 |
%e A367726 Order 4:                        |                 |
%e A367726               1010              |       10        |  10
%e A367726         1000  1001  1011        |     8  9 11     |  28
%e A367726               1100              |       12        |  12
%e A367726         0100  0101  1101        |     4  5 13     |  22
%e A367726         0010  0110  1110        |     2  6 14     |  22
%e A367726   0000  0001  0011  0111  1111  |  0  1  3  7 15  |  26
%e A367726 .
%t A367726 With[{imax=8},Map[Total,Map[FromDigits[#,2]&,NestList[Map[Delete[{If[Length[#]>1,Map[#<>"0"&,Rest[#]],Nothing],Join[{#[[1]]<>"0"},Map[#<>"1"&,#]]},0]&],{{"0","1"}},imax-1],{3}],{2}]] (* Generates terms up to order 8 *)
%o A367726 (Python)
%o A367726 from itertools import islice
%o A367726 from functools import reduce
%o A367726 def uniq(r): return reduce(lambda u, e: u if e in u else u+[e], r, [])
%o A367726 def agen():  # generator of terms
%o A367726     R = [["0", "1"]]
%o A367726     while R:
%o A367726         r = R.pop(0)
%o A367726         yield sum(map(lambda b: int(b, 2), r))
%o A367726         if len(r) > 1: R.append(uniq([r[k]+"0" for k in range(1, len(r))]))
%o A367726         R.append(uniq([r[0]+"0", r[0]+"1"] + [r[k]+"1" for k in range(1, len(r))]))
%o A367726 print(list(islice(agen(), 60))) # _Michael S. Branicky_, Nov 28 2023
%Y A367726 Cf. A367508, A367562.
%K A367726 nonn,base,look
%O A367726 1,2
%A A367726 _Paolo Xausa_, Nov 28 2023
