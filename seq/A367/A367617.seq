%I A367617 #16 Feb 07 2024 13:21:43
%S A367617 1,2,3,4,5,6,7,8,9,10,10,1,13,14,15,16,17,18,19,20,21,20,10,2,25,26,
%T A367617 27,28,29,30,31,32,30,21,1,3,37,38,39,40,41,42,43,40,31,20,13,4,49,50,
%U A367617 51,52,53,54,50,41,32,10,14,14,5,62,63,64,65,14,51,42,30,30,2,15,6,74,75
%N A367617 a(n) is the most remote positive ancestor of n in the comma-child graph.
%C A367617 Like A367366 but allows ancestors that are not comma-predecessors. More specifically, A367366(n) is the most remote positive ancestor of n in the comma-successor graph. See A367338 for definitions.
%C A367617 This sequence first differs from A367366 at n = 60.
%H A367617 Michael S. Branicky, <a href="/A367617/b367617.txt">Table of n, a(n) for n = 1..10000</a>
%H A367617 Eric Angelini, Michael S. Branicky, Giovanni Resta, N. J. A. Sloane, and David W. Wilson, The Comma Sequence: A Simple Sequence With Bizarre Properties, <a href="http://arxiv.org/abs/2401.14346">arXiv:2401.14346</a>, <a href="https://www.youtube.com/watch?v=_EHAdf6izPI">Youtube</a>
%e A367617 a(60) = a(66) = 14, since 66 is a comma-child of 60, and 60 is a comma-child of 14, and 14 is not the comma-child of any positive number. In other words, A367616(A367616(66)) = A367616(60) = 14, and A367616(14) = -1.
%o A367617 (Python)
%o A367617 def comma_parent(n): # A367616(n)
%o A367617     y = int(str(n)[0])
%o A367617     x = (n-y)%10
%o A367617     k = n - y - 10*x
%o A367617     return k if k > 0 else -1
%o A367617 def a(n):
%o A367617     an = n
%o A367617     while (cp:=comma_parent(an)) > 0: an = cp
%o A367617     return an
%o A367617 print([a(n) for n in range(1, 76)]) # _Michael S. Branicky_, Dec 18 2023
%Y A367617 Cf. A367338, A367366, A367616.
%K A367617 nonn,base,changed
%O A367617 1,2
%A A367617 _Michael S. Branicky_ and _N. J. A. Sloane_, Dec 18 2023
