%I A367600 #18 Jan 23 2024 04:17:51
%S A367600 1,2,3,4,5,6,7,8,9,10,13,14,15,16,17,18,19,20,21,25,26,27,28,29,30,31,
%T A367600 32,37,38,39,40,41,42,43,49,50,51,52,53,54,60,62,63,64,65,70,74,75,76,
%U A367600 80,86,87,90,98,200,300,400,500,600,700,800,900,2000,3000,4000,5000,6000,7000
%N A367600 Numbers that are not the comma-successor of any number.
%C A367600 These are the positive integers that do not appear in A367338.
%C A367600 All terms > 98 are of the form c*10^i for i >= 2 and 2 <= c <= 9; see proof in links. - _Michael S. Branicky_, Nov 28 2023
%H A367600 Michael S. Branicky, <a href="/A367600/b367600.txt">Table of n, a(n) for n = 1..110</a> (all terms < 10^9)
%H A367600 Eric Angelini, Michael S. Branicky, Giovanni Resta, N. J. A. Sloane, and David W. Wilson, <a href="http://neilsloane.com/doc/Commas1.pdf">The Comma Sequence: A Simple Sequence With Bizarre Properties</a>, Draft, 22 Jan 2024
%H A367600 Michael S. Branicky, <a href="https://docs.google.com/document/d/1hrGOL8r3cxskRYfsEku7G4e_8b7TiLP1ntDfbPgROyA/edit?usp=sharing">Comma-Predecessor Theorem</a>
%o A367600 (Python)
%o A367600 from itertools import count, islice
%o A367600 def A367338(n):
%o A367600     nn = n + 10*(n%10)
%o A367600     return next((nn+y for y in range(1, 10) if str(nn+y)[0] == str(y)), -1)
%o A367600 def agen():
%o A367600     A367338_set = set()
%o A367600     for n in count(1):
%o A367600         A367338_set.add(A367338(n))
%o A367600         if n not in A367338_set:
%o A367600             yield n
%o A367600         # A367338_set.discard(n-100) # uncomment if memory is an issue
%o A367600 print(list(islice(agen(), 86))) # _Michael S. Branicky_, Nov 28 2023
%Y A367600 Cf. A121805, A337338, A367614.
%K A367600 nonn,base,changed
%O A367600 1,2
%A A367600 _Giovanni Resta_, Nov 23 2023
