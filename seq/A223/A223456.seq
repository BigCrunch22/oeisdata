%I A223456 #34 Jul 16 2015 22:28:34
%S A223456 16,36,48,64,80,81,100,112,120,144,162,168,176,196,208,210,216,225,
%T A223456 256,264,270,272,280,304,312,324,330,368,378,384,390,400,405,408,440,
%U A223456 441,456,462,464,484,496,510,512,520,546,552,567,570,576,592,594,616,625
%N A223456 Composite numbers whose number of proper divisors has a prime number of proper divisors.
%H A223456 Reinhard Zumkeller, <a href="/A223456/b223456.txt">Table of n, a(n) for n = 1..10000</a>
%F A223456 { n: n in A002808 and A032741(A032741(n)) in A000040}.
%F A223456 (1 - A010051(a(n))) * A010051(a032741(a032741(a(n)))) = 1. - _Reinhard Zumkeller_, Sep 22 2013
%e A223456 a(1) = 16, which has 4 proper divisors (1, 2, 4, 8). 4 has 2 proper divisors, 2 is prime. 2 steps were needed.
%p A223456 isA223456 := proc(n)
%p A223456         local npd ;
%p A223456         if not isprime(n) and n >=4 then
%p A223456                 npd := A032741(n) ;
%p A223456                 if isprime( A032741(npd)) then
%p A223456                         true;
%p A223456                 else
%p A223456                         false;
%p A223456                 end if ;
%p A223456         else
%p A223456                 false;
%p A223456         end if;
%p A223456 end proc:
%p A223456 for n from 16 to 630 do
%p A223456         if isA223456(n) then
%p A223456                 printf("%d,",n) ;
%p A223456         end if;
%p A223456 end do: # _R. J. Mathar_, Sep 18 2013
%t A223456 Select[Range[1000], PrimeQ[DivisorSigma[0, DivisorSigma[0, #] - 1] - 1] &] (* _Alonso del Arte_, Jul 21 2013 *)
%o A223456 (C#)
%o A223456 // data
%o A223456 uint size = Math.Power(2,30);
%o A223456 uint[] divisors = new uint[size]
%o A223456 List<uint> A000040 = new List<uint>();
%o A223456 List<uint> A063806 = new List<uint>();
%o A223456 List<uint> A223456 = new List<uint>();
%o A223456 List<uint> A223457 = new List<uint>();
%o A223456 // calculate
%o A223456 for( uint i = 1; i < size; i++ )
%o A223456     for( uint j = i * 2; j < size; j += i )
%o A223456         divisors[j]++;
%o A223456 // assign
%o A223456 for( uint i = 2; i < size; i++ )
%o A223456     if( divisors[i] == 1 )
%o A223456         // A000040: Numbers with a only one proper divisor.
%o A223456         A000040.Add( i );
%o A223456     else if( divisors[divisors[i]] == 1 )
%o A223456         // A063806: Numbers with a prime number of proper divisors.
%o A223456         A063806.Add( i );
%o A223456     else if( divisors[divisors[divisors[i]]] == 1 )
%o A223456         // Numbers with a nonprime number of proper divisors
%o A223456         // which itself has prime number of proper divisors.
%o A223456         A223456.Add( i );
%o A223456     else if( divisors[divisors[divisors[divisors[i]]]] == 1 )
%o A223456         // Numbers with a nonprime number of proper divisors
%o A223456         // which itself has a nonprime number of proper divisors
%o A223456         // which itself has prime number of proper divisors.
%o A223456         A223457.Add( i );
%o A223456 (Haskell)
%o A223456 a223456 n = a223456_list !! (n-1)
%o A223456 a223456_list = filter ((== 1 ) . a010051 . a032741 . a032741) a002808_list
%o A223456 -- _Reinhard Zumkeller_, Sep 22 2013
%Y A223456 Cf. A000040, A063806, A032741.
%K A223456 nonn,easy
%O A223456 1,1
%A A223456 _Christopher J. Hanson_, Jul 19 2013
