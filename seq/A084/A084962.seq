%I A084962 #28 May 09 2020 19:43:43
%S A084962 6,8,21,10946
%N A084962 Iterations of the Fibonacci sequence starting at 6.
%C A084962 The next term, a(4) = 1.695... * 10^2287, has 2288 digits and is too large to display.
%C A084962 This sequence is of interest because the sequences with this recurrence and a(0) in {0, 1, 2, 3, 4} all converge to 1 and the sequence with a(0) = 5 is constant.
%H A084962 Alonso del Arte, <a href="/A084962/a084962.txt">Table of a(n) for n=0..4, with digits of a(4) grouped in hundreds</a>
%F A084962 a(0) = 6, a(n) = Fibonacci(a(n-1)) for n>0.
%e A084962 a(3) = Fibonacci(a(2)) = Fibonacci(21) = 10946.
%p A084962 a:= proc(n) option remember; `if`(n=0, 6,
%p A084962       (<<0|1>, <1|1>>^a(n-1))[1,2])
%p A084962     end:
%p A084962 seq(a(n), n=0..4);  # _Alois P. Heinz_, May 09 2020
%t A084962 fibonaccieth6[m_] := Module[{ex = 6}, Do[ex = Fibonacci[ex], {m}]; ex] Table[fibonaccieth6[m], {m, 0, 4}]
%t A084962 NestList[Fibonacci[#] &, 6, 4] (* _Alonso del Arte_, Apr 30 2020 *)
%o A084962 (Scala) val fiboLimited: LazyList[Int] = 0 #:: 1 #:: fiboLimited.zip(fiboLimited.tail).map { n => n._1 + n._2 }
%o A084962 def fibonaccieth(start: Int): LazyList[Int] = LazyList.iterate(start)(fiboLimited)
%o A084962 fibonaccieth(6).takeWhile(_ > 0).toList // _Alonso del Arte_, Apr 30 2020
%Y A084962 Cf. A000045, A007097, A010716 (starting with 5), A084963 (starting with 7).
%K A084962 nonn
%O A084962 0,1
%A A084962 _Hollie L. Buchanan II_, Jun 14 2003
