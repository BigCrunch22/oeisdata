%I A226228 #10 Jun 05 2013 15:11:38
%S A226228 3,6,7,12,14,24,27,28,31,48,51,54,55,56,59,62,96,99,102,103,108,110,
%T A226228 112,115,118,119,124,127,192,195,198,199,204,206,216,219,220,223,224,
%U A226228 227,230,231,236,238,248,251,254,384,387,390,391,396,398,408,411,412,415,432
%N A226228 Numbers m such that all lengths of runs of 1's in the binary representation of m are prime numbers.
%H A226228 Reinhard Zumkeller, <a href="/A226228/b226228.txt">Table of n, a(n) for n = 1..10000</a>
%t A226228 Select[Range@432, And @@ PrimeQ[(Length /@ Split@ IntegerDigits[#, 2])[[;; ;; 2]]] &] (* _Giovanni Resta_, Jun 01 2013 *)
%o A226228 (C)
%o A226228 #include <stdio.h>
%o A226228 #include <stdlib.h>
%o A226228 typedef unsigned long long U64;
%o A226228 U64 runs[] = {0,2,3,5,7,11,13,17,19,23,29,31,37,41,43}, *wr;
%o A226228 #define MemUSAGE 1ULL<<33
%o A226228 #define TOP (1ULL<<9)  // <<40 ok if MemUSAGE = 1ULL<<33
%o A226228 int compare64(const void *p1, const void *p2) {
%o A226228   if (*(U64*)p1 == *(U64*)p2) return 0;
%o A226228   return (*(U64*)p1 < *(U64*)p2) ? -1 : 1;
%o A226228 }
%o A226228 void rec(U64 bits) {
%o A226228   for (U64 i = 0, b; (b = ((bits*2+1) << runs[i])-1) < TOP; ++i)
%o A226228     if (b) *wr++ = b, rec(b);
%o A226228 }
%o A226228 int main() {
%o A226228   U64 *wr0 = (wr = (U64*)malloc(MemUSAGE));
%o A226228   rec(0);
%o A226228   //printf("%llu\n", wr-wr0);
%o A226228   qsort(wr0, wr-wr0, 8, compare64);
%o A226228   while (wr0<wr)  printf("%llu, ", *wr0++);
%o A226228   return 0;
%o A226228 }
%o A226228 (Haskell)
%o A226228 import Data.List (group, genericLength)
%o A226228 a226228 n = a226228_list !! (n-1)
%o A226228 a226228_list = filter (all (== 1) .
%o A226228                map (a010051 . genericLength) .
%o A226228                    other . reverse . group . a030308_row) [1..]
%o A226228    where other [] = []; other [x] = [x]; other (x:_:xs) = x : other xs
%o A226228 -- _Reinhard Zumkeller_, Jun 05 2013
%Y A226228 Cf. A033015, A226227, A226229.
%Y A226228 Cf. A005811, A030308, A010051.
%K A226228 nonn,base
%O A226228 1,1
%A A226228 _Alex Ratushnyak_, May 31 2013
