%I A361206 #18 Mar 10 2023 19:38:55
%S A361206 12,1,2,4,18,3,8,20,10,24,5,7,16,30,9,14,32,36,11,13,40,15,42,17,48,
%T A361206 19,21,54,22,44,56,50,60,23,25,52,64,66,26,70,72,27,29,34,78,45,80,33,
%U A361206 68,84,31,35,88,90,37,38,96,39,41,100,46,102,76,104,108,43,58
%N A361206 Lexicographically earliest infinite sequence of distinct imperfect numbers such that the sum of the abundance of all terms is never < 1.
%C A361206 The abundance of each term is A033880(a(n)) and s = Sum_{i=1..n} A033880(a(i)).
%C A361206 All imperfect numbers A132999 will appear in this sequence and the abundant numbers A005101 will appear in order.
%e A361206 The sequence starts with a(1) = 12, since 12 is the first imperfect number with abundance greater than 0. Then the next term not yet in the sequence, such that s is not less than 1, is 1.
%e A361206 a(5) is the next abundant number 18, since any deficient number would bring s below 1.
%e A361206 n   :  1  2  3  4   5  6  7   8   9  10
%e A361206 a(n): 12  1  2  4  18  3  8  20  10  24
%e A361206 s   :  4  3  2  1   4  2  1   3   1  13
%o A361206 (Python)
%o A361206 from sympy.ntheory import abundance
%o A361206 from itertools import count, filterfalse
%o A361206 def A361206_list(nmax):
%o A361206     A,s = [],0
%o A361206     for n in range(1,nmax+1):
%o A361206         A2 = set(A)
%o A361206         for y in filterfalse(A2.__contains__,count(1)):
%o A361206             ab = abundance(y)
%o A361206             if ab != 0 and ab + s >= 1:
%o A361206                 A.append(y)
%o A361206                 s += ab
%o A361206                 break
%o A361206     return(A)
%Y A361206 Cf. A005101, A033879, A033880, A132999.
%K A361206 nonn,easy
%O A361206 1,1
%A A361206 _John Tyler Rascoe_, Mar 04 2023
