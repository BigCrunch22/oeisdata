%I A325644 #24 Oct 09 2019 13:44:18
%S A325644 0,1,2,7,4,5,6,11,8,9,10,15,12,13,30,19,16,17,18,23,20,21,22,27,24,25,
%T A325644 26,31,28,29,46,35,32,33,34,39,36,37,38,43,40,41,42,47,44,45,62,51,48,
%U A325644 49,50,55,52,53,54,59,56,57,58,63,60,125,78,67,64,65,66,71,68,69,70
%N A325644 "Sloping quaternary numbers": write numbers in quaternary under each other (right-justified), read diagonals in upward direction, convert to decimal.
%H A325644 Seiichi Manyama, <a href="/A325644/b325644.txt">Table of n, a(n) for n = 0..10000</a>
%H A325644 Wikipedia, <a href="https://en.wikipedia.org/wiki/Quaternary_numeral_system">Quaternary numeral system</a>
%e A325644     0
%e A325644     1
%e A325644     2
%e A325644     3
%e A325644    10
%e A325644    11
%e A325644    12
%e A325644    13
%e A325644    20
%e A325644    21
%e A325644    22
%e A325644    23
%e A325644    30
%e A325644    31
%e A325644    32
%e A325644    33
%e A325644   100
%e A325644 ...
%e A325644 The upward-sloping diagonals are:
%e A325644 0
%e A325644 1
%e A325644 2
%e A325644 13
%e A325644 10
%e A325644 11
%e A325644 12
%e A325644 23
%e A325644 20
%e A325644 21
%e A325644 22
%e A325644 33
%e A325644 30
%e A325644 31
%e A325644 132
%e A325644 103
%e A325644 100
%e A325644 ...
%e A325644 giving 0, 1, 2, "7", 4, 5, 6, "11", 8, 9, 10, "15", 12, 13, "30", "19", 16, ...
%o A325644 (Ruby)
%o A325644 def A(m, n)
%o A325644   ary = [0]
%o A325644   n.times{|i|
%o A325644     (m ** i - i..m ** (i + 1) - i - 2).each{|j|
%o A325644       ary << (0..i).inject(0){|s, k| s + (j + k).to_s(m)[-1 - k].to_i * m ** k}
%o A325644     }
%o A325644   }
%o A325644   ary
%o A325644 end
%o A325644 p A(4, 4)
%Y A325644 Cf. A102370 (base 2), A109681 (base3), this sequence (base 4), A325645 (base 5), A325692 (base 6), A325693 (base 7), A325805 (base 8), A325829 (base 9), A103205 (base 10).
%K A325644 nonn,base
%O A325644 0,3
%A A325644 _Seiichi Manyama_, Sep 07 2019
