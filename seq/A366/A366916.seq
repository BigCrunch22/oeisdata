%I A366916 #17 Oct 28 2023 18:08:45
%S A366916 2,2,2,3,4,5,6,8,9,11,15,18,22,30,35,43,57,69,88,114,142,177
%N A366916 Maximum number of codewords for particular code length of two deletion binary Helberg code.
%C A366916 The maximum number of codewords for different N in Helberg code for two deletion binary Helberg code.
%D A366916 K. A. S. Abdel-Ghaffar, F. Paluncic, H. C. Ferreira and W. A. Clarke, "On Helberg's Generalization of the Levenshtein Code for Multiple Deletion/Insertion Error Correction," in IEEE Transactions on Information Theory, vol. 58, no. 3, pp. 1804-1808, March 2012, doi: 10.1109/TIT.2011.2174961.
%H A366916 <a href="https://ieeexplore.ieee.org/document/6071006"> link </a>
%e A366916 For N = 4, using the Helberg formula Equation 2 in the reference paper, we will get different values of 'a' for different codewords. Now, the maximum number of codewords for a particular 'a' will be 2 in this example.
%e A366916 The same formula is used to calculate 'a' and then the maximum number of codewords for different values of N.
%o A366916 (Python) import numpy as np
%o A366916 (Python) import sys
%o A366916 (Python) def String_generate(n, k, x, final_list):
%o A366916 (Python)     if n == 0:
%o A366916 (Python)         final_list.append(x[:])
%o A366916 (Python)     else:
%o A366916 (Python)         for j in range(0, k):
%o A366916 (Python)             x.append(j)
%o A366916 (Python)             String_generate(n-1, k, x, final_list)
%o A366916 (Python)             x.pop()
%o A366916 (Python)     return x
%o A366916 (Python) def Vi_generate(n, s, v):
%o A366916 (Python)     for i in range(0, n):
%o A366916 (Python)         for j in range(1, s+1):
%o A366916 (Python)             v[i] += v[i-j] if (i-j >= 0) else 0
%o A366916 (Python) def find_M(v, s, n):
%o A366916 (Python)     m = 1
%o A366916 (Python)     for i in range(1, s+1):
%o A366916 (Python)         m += v[n-i]
%o A366916 (Python)     return m
%o A366916 (Python) def func(num, v, m, n, ans):
%o A366916 (Python)     sum = 0
%o A366916 (Python)     for i in range(0, n):
%o A366916 (Python)         sum += v[i]*num[i]
%o A366916 (Python)     sum = sum % m
%o A366916 (Python)     if sum not in ans:
%o A366916 (Python)         ans[sum] = []
%o A366916 (Python)     ans[sum].append(num)
%o A366916 (Python) def a(n):
%o A366916 (Python)     x = []
%o A366916 (Python)     final_list = []
%o A366916 (Python)     q = 2
%o A366916 (Python)     s = 2
%o A366916 (Python)     v = np.ones(n)
%o A366916 (Python)     ans = {}
%o A366916 (Python)     if s < n:
%o A366916 (Python)         String_generate(n, q, x, final_list)
%o A366916 (Python)         x = final_list
%o A366916 (Python)         x = np.array(x)
%o A366916 (Python)         Vi_generate(n, s, v)
%o A366916 (Python)         m = find_M(v, s, n)
%o A366916 (Python)         for i in x:
%o A366916 (Python)             func(i, v, m, n, ans)
%o A366916 (Python)     else:
%o A366916 (Python)         ans[0] = []
%o A366916 (Python)     return max(len(v) for v in ans.values())
%K A366916 nonn,unkn,easy,hear,new
%O A366916 1,1
%A A366916 _Devdeep Shetranjiwala_, Oct 28 2023
