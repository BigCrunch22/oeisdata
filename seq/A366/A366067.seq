%I A366067 #50 Oct 14 2023 21:03:14
%S A366067 578,3468,62424,2996352,359562240,142386647040,177698535505920,
%T A366067 45704355840,61426654248960,294847940395008000,19688030208000,
%U A366067 71821934198784000,5985161183232,11491509471805440,1773381091328,978906362413056,2443350280582987776,265120473153536
%N A366067 Trajectory of 578 under the map x -> A366144(x) (divide or multiply tau(x)).
%C A366067 578 is the smallest starting number for this rule which seems to diverge (rather than entering a loop). This starting number was found by _Robert Gerbicz_, who made the following argument for the sequence's divergence:
%C A366067 When the exponent of 2 is t in the prime factorization of n, then t+1 divides tau(n), and if t+1 has a relatively large prime factor r, then it is likely that n is not divisible by r and so n will be multiplied by tau(n). So r is now a factor of n, which means it will be even harder to clear r from n. In the range of 2000 iterations, division occurs only a few times. In almost all cases, you need only check the exponent of 2 to see if it was a division or multiplication.
%H A366067 Neal Gersh Tolunsky, <a href="/A366067/b366067.txt">Table of n, a(n) for n = 1..960</a>
%H A366067 Neal Gersh Tolunsky, <a href="/A366067/a366067.png">Log plot of a(1..1000)</a>.
%e A366067 a(1) = 578. Applying the rule in A366144, 578 has 6 divisors. 578 is not divisible by 6, so we multiply: a(2) = 578*6 = 3468.
%e A366067 a(7) = 177698535505920, which has 3888 divisors. 177698535505920 is divisible by 3888, so we divide: a(8) = 177698535505920/3888 = 45704355840.
%t A366067 a[1] = 578; a[n_] := a[n] = a[n-1] * If[Divisible[a[n-1], d = DivisorSigma[0, a[n-1]]], 1/d, d]; Array[a, 18] (* _Amiram Eldar_, Sep 29 2023 *)
%o A366067 (Python)
%o A366067 from itertools import islice
%o A366067 from sympy import divisor_count
%o A366067 def f(n): return n//dn if n%(dn:=divisor_count(n)) == 0 else n*dn
%o A366067 def agen(x=578): # generator of terms
%o A366067     while True: yield x; x = f(x)
%o A366067 print(list(islice(agen(), 18))) # _Michael S. Branicky_, Oct 03 2023
%o A366067 (Python)
%o A366067 from math import prod
%o A366067 from collections import Counter
%o A366067 from itertools import islice
%o A366067 from sympy import factorint
%o A366067 def A366067_gen(): # generator of terms
%o A366067     a, b = 578, Counter({2:1,17:2})
%o A366067     while True:
%o A366067         yield a
%o A366067         c = prod((e+1 for e in b.values()))
%o A366067         if (d:=sum((Counter(factorint(e+1)) for e in b.values()),start=Counter()))<=b:
%o A366067             a //= c
%o A366067             b -=d
%o A366067         else:
%o A366067             a *= c
%o A366067             b += d
%o A366067 A366067_list = list(islice(A366067_gen(),20)) # _Chai Wah Wu_, Oct 03 2023
%Y A366067 Cf. A366144, A033950.
%K A366067 nonn,new
%O A366067 1,1
%A A366067 _Neal Gersh Tolunsky_, Sep 28 2023
