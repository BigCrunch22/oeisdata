%I A237500 #20 Jul 25 2022 10:42:33
%S A237500 2,6,12,28,58,118,244,500,1004,2024,4070,8150,16340,32720,65450,
%T A237500 130986,262056,524136,1048422,2096982,4194000,8388300,16776906
%N A237500 Number of binary strings of length 2n which contain the ones' complement of each of their two halves.
%H A237500 Michael S. Branicky, <a href="/A237500/a237500.py.txt">Python program</a>
%e A237500 The two halves of 011001 are 011 and 001. Their complements are 100 and 110, and both are substrings of 011001. Since there are 11 other strings of length 2*3 with this property, a(3) = 12.
%t A237500 sQ[L_, {s__}] := MatchQ[L, {___, s, ___}]; a[n_] := Length@ Select[ Tuples[{0, 1}, 2@n], sQ[#, 1-Take[#, n]] && sQ[#, 1-Take[#, -n]] &]; Array[a,8]
%o A237500 (Python) # see link for faster version
%o A237500 from itertools import product as prod
%o A237500 def comp(s): z, o = ord('0'), ord('1'); return s.translate({z:o, o:z})
%o A237500 def ok(s): return comp(s[:len(s)//2]) in s and comp(s[len(s)//2:]) in s
%o A237500 def a(n): return 2*sum(ok("0"+"".join(p)) for p in prod("01", repeat=2*n-1))
%o A237500 print([a(n) for n in range(1, 12)]) # _Michael S. Branicky_, Feb 06 2021
%Y A237500 Cf. A237501, A237502.
%K A237500 nonn,more
%O A237500 1,1
%A A237500 _Giovanni Resta_, Feb 08 2014
%E A237500 a(17)-a(21) from _Michael S. Branicky_, Feb 06 2021
%E A237500 a(22) from _Michael S. Branicky_, Jul 06 2022
%E A237500 a(23) from _Michael S. Branicky_, Jul 25 2022
