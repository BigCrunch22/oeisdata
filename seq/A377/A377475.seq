%I A377475 #52 Jan 13 2025 19:20:11
%S A377475 0,1,2,3,8,10,12,14,144,146,148,150,152,154,156,158,352,354,356,358,
%T A377475 360,362,364,366,368,370,372,374,376,378,380,382,832,834,836,838,840,
%U A377475 842,844,846,848,850,852,854,856,858,860,862,864,866,868,870,872,874,876,878,880,882,884,886,888,890,892
%N A377475 a(n) is the Even-Rodeh encoding of n as an integer.
%C A377475 Runtime complexity is O(log log n).
%C A377475 For n < 4 leading zeros are omitted.
%C A377475 For n >=4 all terms are even.
%H A377475 Wikipedia, <a href="https://en.wikipedia.org/wiki/Even%E2%80%93Rodeh_coding">Even-Rodeh coding</a>.
%F A377475 a(n) = a(n-1)+2 for n >= 5 and odd.
%e A377475 For n = 2761, a(2761) = 628114 because in binary
%e A377475   n    =          101011001001
%e A377475   a(n) = 100 1100 101011001001 0
%e A377475          \-/ \--/ \----------/
%e A377475           4   12        n
%e A377475 n has a 0 appended, then binary 12 prepended since the bit length of n is 12, and then binary 4 prepended since the bit length of 12 is 4, and stop there since 4 is 3 bits long.
%e A377475 Decoding is the reverse: 3 most significant bits are value 4, next 4 bits are value 12, next 12 bits are n, and the bit after is 0 so stop.
%o A377475 (Python)
%o A377475 def a(n):
%o A377475     if n <= 3: return n
%o A377475     enc, s, v = 0, 0, n
%o A377475     while v > 3:
%o A377475         enc |= v << s
%o A377475         v = v.bit_length()
%o A377475         s += v
%o A377475     return enc << 1
%o A377475 print([a(n) for n in range(63)])
%o A377475 (PARI) a(n) = if (n <= 3, return(n), enc=0;s=0;v=n; while(v >3, enc=bitor(enc,(v << s)); v = #binary(v); s += v;)); return(enc << 1)
%Y A377475 Cf. A070939.
%K A377475 nonn,base,easy,new
%O A377475 0,3
%A A377475 _DarÃ­o Clavijo_, Jan 08 2025
