%I A377280 #36 Nov 24 2024 10:14:26
%S A377280 1,4,9,12,25,36,28,32,81,60,121,120,117,196,75,80,204,324,228,200,147,
%T A377280 264,529,504,200,676,540,252,841,900,186,192,1089,748,1225,324,740,
%U A377280 1140,1521,1080,1681,336,1204,484,540,460,1692,1152,735,2500,2601,624,2809,972,1980,784,2508,696,1416,3300
%N A377280 Given n cards, each time you reversing the order of the top 1, 2, 3, ..., n-1, n cards, then repeat reversing 1, 2, 3, ... cards. Do reversing at least once. the minimum number of steps required to return all the cards to their original position.
%C A377280 The sequence is only restored after one of the full length n reversal, so a(n) >= n.
%C A377280 The process of reversing blocks from 1 to n corresponds to the order transformation of numbers in sequence A130517.
%F A377280 a(n) = n * A003558(n).
%e A377280 For example, using "abc" to represent three cards, the card positions at the end of each step are: abc, bac, cab, cab, acb, bca, bca, cba, abc. Therefore, it takes 9 steps. If there are 4 cards "abcd", the sequence of changes is: abcd, bacd, cabd, dbac, dbac, bdac, adbc, cbda, cbda, bcda, dcba, abcd, so it takes 12 steps
%o A377280 (PARI) A377280(n)=my(M=Mod(2,2*n+1),o=znorder(M));if(o%2==0&&M^(o/2)==-1,n*o/2,o*n) \\ _Kevin Ryde_
%o A377280 (Python)
%o A377280 from sympy.ntheory import n_order
%o A377280 def A377280(n):
%o A377280     modular = 2*n + 1
%o A377280     order = n_order(2, 2*n+1)
%o A377280     if order % 2 == 0 and pow(2, order//2, modular) == modular - 1:
%o A377280         return (order//2) * n
%o A377280     else:
%o A377280         return order * n # after _Kevin Ryde_
%Y A377280 Cf. A003558. A130517.
%K A377280 nonn
%O A377280 1,2
%A A377280 _Youhua Li_, Oct 22 2024
