%I A377090 #21 Jan 20 2025 09:07:30
%S A377090 0,2,-1,1,-2,3,-4,-6,-3,4,6,-5,-7,-9,8,5,7,9,-8,-10,-12,11,13,10,12,
%T A377090 -11,-13,-15,14,16,18,15,-14,-16,-18,19,17,20,-17,-19,-21,22,24,21,
%U A377090 -20,-22,-24,23,25,27,-26,-23,-25,-27,26,28,30,-29,-31,-28,-30,29
%N A377090 a(0) = 0, and for any n > 0, a(n) is the least integer (in absolute value) not yet in the sequence such that the absolute difference of a(n-1) and a(n) is a prime number; in case of a tie, preference is given to the positive value.
%C A377090 This sequence is a variant of A277618 allowing negative values.
%C A377090 Will every integer appear in the sequence?
%H A377090 Paolo Xausa, <a href="/A377090/b377090.txt">Table of n, a(n) for n = 0..10000</a> (terms 0..1000 from Rémy Sigrist).
%H A377090 Rémy Sigrist, <a href="/A377090/a377090.png">Scatterplot of the first 100000 terms of the partial sums</a>
%H A377090 Rémy Sigrist, <a href="/A377090/a377090.gp.txt">PARI program</a>
%e A377090 The first terms are:
%e A377090   n   a(n)  |a(n)-a(n-1)|
%e A377090   --  ----  -------------
%e A377090    0     0  N/A
%e A377090    1     2              2
%e A377090    2    -1              3
%e A377090    3     1              2
%e A377090    4    -2              3
%e A377090    5     3              5
%e A377090    6    -4              7
%e A377090    7    -6              2
%e A377090    8    -3              3
%e A377090    9     4              7
%e A377090   10     6              2
%e A377090   11    -5             11
%e A377090   12    -7              2
%e A377090   13    -9              2
%e A377090   14     8             17
%t A377090 A377090list[nmax_] := Module[{s, a = 0, an, u = 1}, s[_] := False; s[0] = True; Join[{0}, Table[a = (While[s[u] && s[-u], u++]; an = u; While[s[an] || !PrimeQ[Abs[a - an]], an = Boole[an < 0] - an]; s[an] = True; an), nmax]]];
%t A377090 A377090list[100] (* _Paolo Xausa_, Jan 20 2025 *)
%o A377090 (PARI) \\ See Links section.
%o A377090 (Python)
%o A377090 from sympy import isprime
%o A377090 from itertools import count, islice
%o A377090 def cond(n): return isprime(n)
%o A377090 def agen(): # generator of terms
%o A377090     an, aset, m = 0, {0}, 1
%o A377090     for n in count(0):
%o A377090         yield an
%o A377090         an = next(s for k in count(m) for s in [k, -k] if s not in aset and cond(abs(an-s)))
%o A377090         aset.add(an)
%o A377090         while m in aset and -m in aset: m += 1
%o A377090 print(list(islice(agen(), 62))) # _Michael S. Branicky_, Dec 27 2024
%Y A377090 Cf. A277618, A377091, A377092.
%K A377090 sign,look,changed
%O A377090 0,2
%A A377090 _Rémy Sigrist_, Oct 16 2024
