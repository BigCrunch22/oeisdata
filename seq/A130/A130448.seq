%I A130448
%S A130448 1,4,9,25,36,576,676,7056,80656,665856,2027776,2802276,22282727076,
%T A130448 77770707876,78807087076,7888885568656,8782782707776,72822772707876,
%U A130448 555006880085056,782280288087076,827702888070276,888288787822276,2282820800707876,7880082008070276,80077778877070276,88778000807227876,782828878078078276,872727072820287876
%N A130448 Squares whose decimal representation contains no proper subsequence which is a positive square.
%C A130448 Is this sequence finite and if so what is the last term?
%C A130448 Yes, the sequence must be finite.  This follows from a well-known result: there are no infinite antichains for the subsequence ordering. - _Jeffrey Shallit_, Mar 05 2014
%C A130448 If it exists, a(29) is greater than 10^18. - _Mauro Fiorentini_, Jan 24 2017
%C A130448 If it exists, a(51) is greater than 2*10^30. - _Giovanni Resta_, Jan 08 2018
%H A130448 Martin Raab, <a href="/A130448/b130448.txt">Table of n, a(n) for n = 1..55</a> (terms 1..50 from Giovanni Resta, terms 51..55 from Martin Raab)
%H A130448 Michael S. Branicky, <a href="/A130448/a130448.txt">Python program</a>
%H A130448 Wikipedia, <a href="http://en.wikipedia.org/wiki/Subsequence">Subsequence</a>
%e A130448 576 is in the list because none of its proper subsequences 5, 7, 6, 57, 76 or 56 are squares.
%t A130448 fQ[n_] := Module[{d = IntegerDigits[n], ds, sq}, ds = FromDigits /@ Union[Most[Rest[Subsets[d]]]]; sq = Select[ds, # > 0 && IntegerQ[Sqrt[#]] &, 1]; sq == {}]; Select[Range[0, 100000]^2, fQ] (* _T. D. Noe_, Mar 05 2014 *)
%o A130448 (PARI) isok(n) = {my(d = digits(n)); for (k = 1, #d, for (j= 1, #d - k + 1, if (j != #d, sd = vector(j, i, d[k+i-1]); nsd = fromdigits(sd); if (nsd && issquare(nsd), return(0));););); return (1);} \\ _Michel Marcus_, Apr 21 2018
%o A130448 (Python) # see linked program for faster version
%o A130448 from math import isqrt
%o A130448 from itertools import chain, combinations as C, count, islice
%o A130448 def issquare(n): return isqrt(n)**2 == n
%o A130448 def psets(s): # nonempty proper subsets of s
%o A130448     return chain.from_iterable(C(s, r) for r in range(1, len(s)))
%o A130448 def cond(s):
%o A130448     ss = ("".join(t) for t in psets(s) if t[0] != "0")
%o A130448     return not any(issquare(int(u)) for u in ss)
%o A130448 def agen(): yield from (k**2 for k in count(1) if cond(str(k**2)))
%o A130448 print(list(islice(agen(), 15))) # _Michael S. Branicky_, Feb 23 2023
%Y A130448 Cf. A131599, A238334 (substrings).
%K A130448 base,nonn,fini
%O A130448 1,2
%A A130448 _Martin Raab_, Aug 07 2007
%E A130448 Edited by _N. J. A. Sloane_, Sep 14 2007
%E A130448 a(23)-a(28) from _Mauro Fiorentini_, Jan 24 2017
