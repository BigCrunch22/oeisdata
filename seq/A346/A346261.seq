%I A346261 #28 Jul 22 2021 08:03:34
%S A346261 10,21,32,43,54,65,76,87,98,100,111,122,133,144,155,166,177,188,199,
%T A346261 201,212,220,234,245,253,267,278,286,302,313,324,330,341,356,368,375,
%U A346261 389,397,403,414,425,431,440,452,469,496,504,515,523,536,542,550,561,579,605,616,627,638,649,651
%N A346261 Lexicographically earliest sequence of decimal words starting with 10 such that each term has Hamming distance at least 2 from all earlier terms.
%H A346261 Michael S. Branicky, <a href="/A346261/b346261.txt">Table of n, a(n) for n = 1..10000</a>
%H A346261 J. H. Conway and N. J. A. Sloane, <a href="https://doi.org/10.1109/TIT.1986.1057187">Lexicographic codes: error-correcting codes from game theory</a>, IEEE Transactions on Information Theory, 32:337-348, 1986.
%e A346261 a(1) = 10 by definition.
%e A346261 a(2) = 21 because '2' has not yet appeared in the tens place and '1' has not yet appeared in the ones place.
%o A346261 (Python)
%o A346261 def ham(m, n):
%o A346261     s, t = str(min(m, n))[::-1], str(max(m, n))[::-1]
%o A346261     return len(t) - len(s) + sum(s[i] != t[i] for i in range(len(s)))
%o A346261 def aupton(terms):
%o A346261     alst = [10]
%o A346261     for n in range(2, terms+1):
%o A346261         an = alst[-1] + 1
%o A346261         while any(ham(an, aprev) < 2 for aprev in alst[::-1]):  an += 1
%o A346261         alst.append(an)
%o A346261     return alst
%o A346261 print(aupton(60)) # _Michael S. Branicky_, Jul 22 2021
%Y A346261 Lexicodes of minimal distance 1,2,3,... over alphabets of size 2: A001477, A001969, A075926, A075928, A075931, A075934, ...; size 3: A001477, A346002, A346003; size 10: A001477, A343444, A333568, A346000, A346001.
%Y A346261 Cf. A207063.
%K A346261 nonn,base
%O A346261 1,1
%A A346261 _Peter Woodward_, Jul 11 2021
%E A346261 Edited and corrected by _N. J. A. Sloane_, Jul 20 2021
