%I A243060 #13 Apr 01 2017 20:56:31
%S A243060 1,2,1,4,2,1,3,4,2,1,8,3,4,2,1,25,8,3,4,2,1,16,6,8,3,4,2,1,9,16,6,8,3,
%T A243060 4,2,1,9,5,16,6,8,3,4,2,1,343,9,5,16,6,8,3,4,2,1,32,12,9,5,16,6,8,3,4,
%U A243060 2,1,10,32,12,9,5,16,6,8,3,4,2,1,64,35,32,12,9,5,16,6,8,3,4,2,1,14641,64,10,32,12,9,5,16,6,8,3,4,2,1,125,24,64,10,32,12,9,5,16,6,8,3,4,2,1
%N A243060 Square array read by antidiagonals: rows are successively recursivized versions of Bulgarian solitaire operation (starting from the usual "first order" version, A243051), as applied to partitions listed in A241918.
%C A243060 The array is read by antidiagonals: A(0,0), A(0,1), A(1,0), A(0,2), A(1,1), A(2,0), ... .
%C A243060 Each row is a A241909-conjugate of the corresponding row in A243070.
%C A243060 Rows in both arrays converge towards A122111.
%C A243060 First point where row k differs from row k of A243070 seems to be A000040(k+2): primes from five onward: 5, 7, 11, 13, 17, 19, 23, 29, 31, ...
%C A243060 While the first point where row k differs from A122111 seems to begin as 6, 12, 24, 48, 96, 192, 384, 768, 1536, 3072, ... A007283 (3*2^n) from the term n=1 onward.
%C A243060 The rows in this table preserve A243503.
%e A243060 The top left corner of the array:
%e A243060   1, 2, 4, 3, 8, 25, 16, 9, 9, 343,  32,  10,  64, 14641,   125,   27, ...
%e A243060   1, 2, 4, 3, 8,  6, 16, 5, 9,  12,  32,  35,  64,    24,    18,   25, ...
%e A243060   1, 2, 4, 3, 8,  6, 16, 5, 9,  12,  32,  10,  64,    24,    18,    7, ...
%e A243060   1, 2, 4, 3, 8,  6, 16, 5, 9,  12,  32,  10,  64,    24,    18,    7, ...
%e A243060   1, 2, 4, 3, 8,  6, 16, 5, 9,  12,  32,  10,  64,    24,    18,    7, ...
%o A243060 (Scheme)
%o A243060 (define (A243060 n) (A243060bi (A002260 n) (A004736 n)))
%o A243060 (define (A243060bi row col) (explist->n (ascpart_to_prime-exps (bulgarian-operation-n-th-order (prime-exps_to_ascpart (primefacs->explist col)) row))))
%o A243060 (define (bulgarian-operation-n-th-order ascpart n) (if (or (zero? n) (null? ascpart)) ascpart (let ((newpart (length ascpart))) (let loop ((newpartition (list)) (ascpart ascpart)) (cond ((null? ascpart) (sort (cons newpart (bulgarian-operation-n-th-order newpartition (- n 1))) <)) (else (loop (if (= 1 (car ascpart)) newpartition (cons (- (car ascpart) 1) newpartition)) (cdr ascpart))))))))
%o A243060 ;; For other required functions and libraries, please see A243051.
%Y A243060 Row 1: A243051, Row 2: A243052, Row 3: A243053.
%Y A243060 Rows converge towards A122111.
%Y A243060 Cf. A243070, A243503.
%K A243060 nonn,tabl
%O A243060 1,2
%A A243060 _Antti Karttunen_, May 29 2014
