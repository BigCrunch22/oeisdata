%I A309771 #23 Oct 23 2019 15:44:47
%S A309771 2,5,4,1,18,4,5,1,2,5,6,1,3,2,3,1,2,5,12,1,5,6,4,1,2,3,10,1,5,2,3,1,2,
%T A309771 4,4,1,5,10,7,1,2,5,8,1,3,2,3,1,2,6,8,1,4,3,13,1,2,3,5,1,5,2,3,1,2,6,
%U A309771 4,1,6,10,6,1,2,4,9,1,3,2,3,1,2
%N A309771 a(n) is the number of odd numbers found in the Collatz trajectory of 6*n + 3 before reaching a number x == 5 (mod 8).
%C A309771 The number reached at the end of the computation, 8x + 5, will need more than 2 even steps to get to an odd number in the Collatz trajectory.
%C A309771 a(3 + 4*n) = 1 always because 6*(3 + 4*n) + 3 = 21 + 24*n = 8*(3*n + 2) + 5.
%C A309771 There's an interesting pattern in these seemingly chaotic numbers:
%C A309771    a(12 + 32*n) = 3,
%C A309771    a(13 + 32*n) = 2,
%C A309771    a(14 + 32*n) = 3,
%C A309771    a(15 + 32*n) = a(3 + 4(8*n + 3)) = 1,
%C A309771    a(16 + 32*n) = 2.
%C A309771 A general formula for a(n), if it exists, could shed some light on the Collatz problem. The big spike at n=4 (large sequence for 27) seems a mystery for me. For big values of n we don't usually get big a(n), probably because of the presence of patterns like the above (just an observation).
%H A309771 Máximo Pérez López, <a href="/A309771/b309771.txt">Table of n, a(n) for n = 0..20000</a>
%H A309771 Wikipedia, <a href="http://en.wikipedia.org/wiki/Collatz_conjecture">Collatz Conjecture</a>
%F A309771 Not known for now, a(n) is calculated from computer program and definition of the Collatz function, e.g., f(x) = 3x + 1 if x is odd, or x/2 if x is even.
%e A309771 For n = 0, 6*0 + 3 = 3. Collatz sequence of 3 omitting the even numbers: 3, 5. 5 = 8*0 + 5 so the computation stops: 2 odd numbers found.
%e A309771 For n = 1, 6*1 + 3 = 9. Sequence: 9, 7, 11, 17, 13. 13 = 8*1 + 5, halt. a(1) = 5.
%t A309771 Array[Count[NestWhileList[If[EvenQ@ #, #/2, 3 # + 1] &, 6 # + 3, Mod[#, 8] != 5 &], _?OddQ] &, 81, 0] (* _Michael De Vlieger_, Sep 27 2019 *)
%o A309771 (C)
%o A309771 #include <stdio.h>
%o A309771 #include <stdlib.h>
%o A309771 int collatzOdd(int n) {
%o A309771         int i = 1;
%o A309771         int r;
%o A309771         while ( (r = n % 8) != 5) {
%o A309771                 i++;
%o A309771                 if (r == 1) {
%o A309771                         n = 6*(n / 8) + 1;
%o A309771                 } else {
%o A309771                         n = 6*(n / 4) + 5;
%o A309771                 }
%o A309771         }
%o A309771         return i;
%o A309771 }
%o A309771 int main(int argc, char *argv[]) {
%o A309771         int i = 0;
%o A309771         while (i <= 20000) {
%o A309771                 printf("%d %d\n", i, collatzOdd((6 * i) + 3));
%o A309771                 i++;
%o A309771         }
%o A309771         return (EXIT_SUCCESS);
%o A309771 }
%K A309771 easy,nonn
%O A309771 0,1
%A A309771 _Máximo Pérez López_, Aug 16 2019
