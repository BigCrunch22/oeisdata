%I A309096 #17 May 05 2023 07:48:28
%S A309096 1,2,4,6,12,16,18,30,36,48,60,64,90,144,150,162,180,192,210,240,300,
%T A309096 324,420,450,576,630,720,810,900,960,1050,1200,1260,1296,1458,1470,
%U A309096 1620,1680,2100,2310,2880,2916,2940,3150,3600,3750,4050,4096,4410,4620,4800
%N A309096 Increasing positive integers with prime factorization exponents all appearing earlier in the sequence.
%C A309096 Because non-existing primes in the a factorization are recorded with exponent 0 here, and because 0 is not in the sequence, all entries must have a full set of prime divisors from 2 up to their largest prime: this is a subsequence of A055932. - _R. J. Mathar_, May 05 2023
%C A309096 3 and 5 do not appear in the sequence, so entries of A176297 or A362831 are not in the sequence. - _R. J. Mathar_, May 05 2023
%F A309096 a(1) = 1; a(n) = least positive integer x > a(n-1) where the exponents e in the prime factorization of x are in a(1..n-1).
%e A309096 a(2) = 2, since 2 = 2^1 and all {1} are in a(1..1) = [1].
%e A309096 a(3) != 3, since 3 = 2^0 * 3^1 and not all {0,1} are in a(1..2) = [1,2].
%e A309096 a(3) = 4, since 4 = 2^2 and all {2} are in a(1..2) = [1,2].
%e A309096 a(4) != 5, since 5 = 2^0 * 3^0 * 5^1 and not all {0,1} are in a(1..3) = [1,2,4].
%e A309096 a(4) = 6, since 6 = 2^1 * 3^1 and all {1} are in a(1..3) = [1,2,4].
%o A309096 (Haskell)
%o A309096 wheelSeeds = [2, 3, 5, 7, 11, 13]
%o A309096 wheelOffsets = filter (\c -> all (\s -> mod c s /= 0) wheelSeeds) [1..product wheelSeeds]
%o A309096 restOfWheel = (concat (map (replicate (length wheelOffsets)) (map (* (product wheelSeeds)) [1..])))
%o A309096 wheel = wheelSeeds ++ (tail wheelOffsets) ++ (zipWith (+) (cycle wheelOffsets) restOfWheel)
%o A309096 isPrime n = and [n > 1, all (\c -> mod n c /= 0) (takeWhile (\c -> c * c <= n) wheel)]
%o A309096 primes = filter isPrime wheel
%o A309096 exponents bases acc n =
%o A309096     if (n == 1)
%o A309096         then (dropWhile (== 0) acc)
%o A309096         else if (mod n (head bases) == 0)
%o A309096             then (exponents bases (((head acc) + 1) : (tail acc)) (div n (head bases)))
%o A309096             else (exponents (tail bases) (0 : acc) n)
%o A309096 a = filter (\n -> all (\e -> elem e (takeWhile (<= e) a)) (exponents primes [0] n)) [1..]
%K A309096 nonn
%O A309096 1,2
%A A309096 _Chris Murray_, Jul 12 2019
