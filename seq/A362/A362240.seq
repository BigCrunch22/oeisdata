%I A362240 #34 Jan 04 2024 14:17:02
%S A362240 0,1,0,0,1,1,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,1,0,1,1,0,1,0,0,0,0,0,0,0,
%T A362240 0,1,1,0,0,1,0,0,0,0,1,1,1,0,1,1,1,0,1,1,1,1,1,0,0,0,1,0,0,0,0,1,0,0,
%U A362240 1,0,0,1,1,0,1,0,0,1,1,1,1,0,1,0,0,0,1
%N A362240 Triangle read by rows: Row n is the shortest, then lexicographically earliest sequence of 0s and 1s not yet in the sequence.
%C A362240 Bit strings as indexed by A362009.
%C A362240 Shortest then lexicographically earliest ordering for rows is as per A076478.
%H A362240 Samuel Harkness, <a href="/A362240/b362240.txt">Table of n, a(n) for n = 1..10008</a> (first 911 rows flattened)
%H A362240 Neal Gersh Tolunsky, <a href="/A362240/a362240.png">Bitmap of a(n), n = 1..2^17, read left to right, top to bottom, where black represents 1 and white 0.</a>
%H A362240 Samuel Harkness, <a href="/A362240/a362240_1.m.txt">MATLAB program</a>
%e A362240 The triangle begins:
%e A362240    n      row(n)
%e A362240   ---     ------
%e A362240    1      0;
%e A362240    2      1;
%e A362240    3      0, 0;
%e A362240    4      1, 1;
%e A362240    5      0, 0, 0;
%e A362240    6      1, 0, 1;
%e A362240    7      1, 1, 1;
%e A362240    8      0, 0, 0, 0;
%e A362240    9      1, 0, 1, 0;
%e A362240   10      1, 1, 0, 1;
%e A362240   11      0, 0, 0, 0, 0;
%e A362240   12      0, 0, 0, 1, 1;
%e A362240   13      0, 0, 1, 0, 0;
%e A362240 For row 6, we know that all binary sequences up to row 5 = {0, 0, 0} appear, so we first check {0, 0, 1}. This sequence appears at {a(3), a(4), a(5)} (using parts of rows 3 and 4).
%e A362240 Next, check {0, 1, 0}. This sequence appears at {a(1), a(2), a(3)} (using parts of rows 1, 2, and 3).
%e A362240 Next, check {0, 1, 1}. This sequence appears at {a(4), a(5), a(6)} (using parts of rows 3 and 4).
%e A362240 Next, check {1, 0, 0}. This sequence appears at {a(2), a(3), a(4)} (using parts of rows 2 and 3).
%e A362240 Next, check {1, 0, 1}. This sequence does not appear anywhere in the sequence, so row 6 of the triangle is {1, 0, 1}.
%t A362240 V = {0}; K = {0}; While[Length@K <= 87, y = 0; While[y == 0, i = Length@V; V[[i]]++; While[V[[i]] == 2 && i > 1 , V[[i]] = 0; i--; V[[i]]++]; If[V[[1]] == 2, V = ConstantArray[0, Length@V + 1]]; z = 0; For[a = 1, a <= Length@K - Length@V + 1, a++, If[K[[a ;; a + Length@V - 1]] == V, z = 1; Break[]]]; If[z == 0, AppendTo[K, V]; K = Flatten[K]; y = 1]]]; Print[K[[1 ;; 87]]]
%o A362240 (MATLAB) See Links section.
%o A362240 (Python)
%o A362240 from itertools import chain, count, islice, product
%o A362240 def bins(): yield from ("".join(b) for d in count(1) for b in product("01", repeat=d))
%o A362240 def agen(s=""): yield from chain.from_iterable(map(int, t) for t in bins() if t not in s and (s:=s+t))
%o A362240 print(list(islice(agen(), 87))) # _Michael S. Branicky_, Apr 12 2023
%Y A362240 Cf. A076478, A362009, A362241 (rows interpreted as binary).
%Y A362240 Cf. A118247
%K A362240 nonn,tabf,changed
%O A362240 1
%A A362240 _Samuel Harkness_, Apr 12 2023
