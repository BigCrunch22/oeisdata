%I A362869 #59 Oct 16 2023 06:08:17
%S A362869 1,2,8,11,22,27,43,50,71,80,106,117,148,161,197,212,253,270,316,335,
%T A362869 386,407,463,486,547,572,638,665,736,765,841,872,953,986,1072,1107,
%U A362869 1198,1235,1331,1370,1471,1512,1618,1661,1772,1817,1933,1980,2101,2150,2276
%N A362869 a(n) is equal to the number of cells in one octant of the octagon of unit squares with side equal n.
%C A362869 The octagon is obtained from a square of side 3n-2 cells by removing a triangle of cells from each of the four corners.
%H A362869 Paolo Xausa, <a href="/A362869/b362869.txt">Table of n, a(n) for n = 1..10000</a>
%H A362869 Anatoliy A. Abramov, <a href="/A362869/a362869.jpg">Illustration of initial terms</a>
%H A362869 <a href="/index/Rec#order_05">Index entries for linear recurrences with constant coefficients</a>, signature (1,2,-2,-1,1).
%F A362869 a(n) = k*(k + 1)/2 - floor(n^2/4), where k = ceiling((n + 2*(n - 1))/2).
%F A362869 G.f.: x*(1 + x + 4*x^2 + x^3)/((1 - x)^3*(1 + x)^2). - _Stefano Spezia_, May 07 2023
%e A362869 For n=3, the octagon is a square of side 3n-2 = 7 with corners chopped to leave each side with 3 "*",
%e A362869         * * *
%e A362869       * * * * *
%e A362869     * * * * * * *
%e A362869     @ @ @ @ * * *
%e A362869     @ @ @ * * * *
%e A362869       @ * * * *
%e A362869         * * *
%e A362869 The a(3) = 8 cells marked "@" are an eighth of the figure and are the primitive cells in the sense that other cells map to them by rotations or reflections.
%t A362869 LinearRecurrence[{1,2,-2,-1,1},{1,2,8,11,22},100] (* _Paolo Xausa_, Oct 16 2023 *)
%o A362869 (Java)
%o A362869 import java.util.function.Function;
%o A362869 import java.util.stream.IntStream;
%o A362869 public class Main {
%o A362869     private static int A362869(int n) {
%o A362869         Function<Integer, Integer> trianglarNumber = p -> p * (p + 1) / 2;
%o A362869         Function<Integer, Integer> quarterOfSquareNumber = p -> p * p / 4;
%o A362869         int k = (n + 2 * (n - 1) + 1) / 2;
%o A362869         return trianglarNumber.apply(k) - quarterOfSquareNumber.apply(n);
%o A362869     }
%o A362869     public static void main(String[] args) {
%o A362869         IntStream.range(1, 100).forEach(n -> System.out.print(A362869(n) + ", "));
%o A362869     }
%o A362869 }
%Y A362869 Cf. A000217, A002620.
%K A362869 nonn,easy,changed
%O A362869 1,2
%A A362869 _Anatoliy A. Abramov_, May 07 2023
