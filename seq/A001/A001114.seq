%I A001114 M1747 N0692 #21 Feb 07 2021 21:10:31
%S A001114 2,7,18,28,182,845,904,5235,36028,74713,526624,977572,4709369,9959574,
%T A001114 96696762,7724076630,35354759457,138217852516,642742746639,
%U A001114 1932003059921,8174135966290,43572900334295,260595630738132,328627943490763,2338298807531952,5101901157383418
%N A001114 Increasing blocks of digits of e.
%D A001114 N. J. A. Sloane, A Handbook of Integer Sequences, Academic Press, 1973 (includes this sequence).
%D A001114 N. J. A. Sloane and Simon Plouffe, The Encyclopedia of Integer Sequences, Academic Press, 1995 (includes this sequence).
%H A001114 Michael S. Branicky, <a href="/A001114/b001114.txt">Table of n, a(n) for n = 1..1000</a>
%H A001114 G. W. Reitwiesner, <a href="https://doi.org/10.2307/2002695">An ENIAC determination of pi and e to more than 2000 decimal places</a>, Mathematical Tables and Other Aids to Computation, 4 (1950), 11-15.
%H A001114 D. Shanks and J. W. Wrench, Jr., <a href="https://doi.org/10.2307/2004403">Calculation of e to 100,000 decimals</a>, Math. Comp., 23 (1969), 679-680.
%o A001114 (Python)
%o A001114 from sympy import E
%o A001114 def aupto(digit_limit):
%o A001114   alst, estr = [], str(E.n(digit_limit)).replace(".", "")
%o A001114   prevlen, prevstr, suffix = 0, "", estr
%o A001114   while len(suffix) > prevlen + 1:
%o A001114     if suffix[:prevlen] > prevstr: idx = prevlen
%o A001114     else: idx = prevlen + 1
%o A001114     while suffix[idx] == '0':
%o A001114       idx += 1
%o A001114       if idx > len(suffix): break # end of string reached
%o A001114     anstr, suffix = suffix[:idx], suffix[idx:]
%o A001114     prevstr, prevlen = anstr, len(anstr)
%o A001114     assert anstr[0] != '0'
%o A001114     alst.append(int(anstr))
%o A001114   return alst
%o A001114 print(aupto(220)) # _Michael S. Branicky_, Feb 07 2021
%K A001114 nonn,base
%O A001114 1,1
%A A001114 _N. J. A. Sloane_
%E A001114 More terms from _Jon E. Schoenfield_, Mar 24 2010
%E A001114 a(24) and beyond from _Michael S. Branicky_, Feb 07 2021
