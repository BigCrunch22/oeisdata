%I A370091 #22 Feb 14 2024 01:09:23
%S A370091 6,35,77,169,287,1147,2623,1517,7739,17792,4352,14647,71107,55488,
%T A370091 114091,121673,167137,206837,333797,762079,554484,909157,277928,
%U A370091 722473,2165407,3249569,4328483,2498227,5271391,5770603,9178891,8321771,15732791,16862017,21067968,9983680,29496102
%N A370091 The smallest number such that exactly n numbers k exist such that a(n) - k = sopfr(a(n)) + sopfr(k), where sopfr(m) is the sum of the primes dividing m, with repetition.
%H A370091 Michael S. Branicky, <a href="/A370091/b370091.txt">Table of n, a(n) for n = 1..49</a>
%F A370091 a(n) >= A369351(n).
%o A370091 (Python)
%o A370091 from sympy import factorint
%o A370091 from functools import cache
%o A370091 from itertools import count, islice
%o A370091 from collections import Counter
%o A370091 kcount, kmax = Counter(), 0
%o A370091 @cache
%o A370091 def sopfr(n): return sum(p*e for p, e in factorint(n).items())
%o A370091 def f(n):   # revised based on comment by _David A. Corneth_ in A369351
%o A370091     global kcount, kmax
%o A370091     target = n - sopfr(n)
%o A370091     for k in range(kmax+1, target+1):
%o A370091         kcount[k+sopfr(k)] += 1
%o A370091         kmax += 1
%o A370091     return kcount[target]
%o A370091 def agen(): # generator of terms
%o A370091     adict, n = dict(), 1
%o A370091     for m in count(2):
%o A370091         v = f(m)
%o A370091         if v not in adict: adict[v] = m
%o A370091         while n in adict: yield adict[n]; n += 1
%o A370091 print(list(islice(agen(), 12)))
%Y A370091 Cf. A001414, A369351.
%K A370091 nonn,changed
%O A370091 1,1
%A A370091 _Michael S. Branicky_, Feb 09 2024
%E A370091 More terms from _David A. Corneth_, Feb 11 2024
