%I A370410 #28 Feb 20 2024 01:08:46
%S A370410 0,4,6,14,26,48,86,148,232,400,622,982,1514,2440,3482,5680,8162,12932,
%T A370410 18398,29146,40706,64856,90070,141880,196448,309712,425412,668978,
%U A370410 917450,1437148,1966022,3074080,4192882,6545344,8912278,13877920,18874298,29341624,39842594,61835140,83886002,129977116,176160686,272563362
%N A370410 Number of length-n binary strings that are the concatenation of two nonempty palindromes.
%H A370410 Michael S. Branicky, <a href="/A370410/a370410.txt">Python program for A370410 (bitwise operations)</a>
%H A370410 Michael S. Branicky, <a href="/A370410/a370410_1.txt">Python program for A370410 (explicit construction)</a>
%F A370410 a(n) = A007055(n) - A056458(n) (conjectured). - _Michael S. Branicky_, Feb 18 2024
%o A370410 (Python) # see below and Links for faster programs
%o A370410 from itertools import product
%o A370410 def p(w): return w == w[::-1]
%o A370410 def c(w): return any(p(w[:i]) and p(w[i:]) for i in range(1, len(w)))
%o A370410 def a(n): return 2*sum(1 for w in product("01", repeat=n-1) if c(("1",)+w))
%o A370410 print([a(n) for n in range(1, 21)]) # _Michael S. Branicky_, Feb 18 2024
%o A370410 (Python)
%o A370410 from itertools import product
%o A370410 def bin_pals(d): yield from ("".join(p+(m,)+p[::-1]) for p in product("01", repeat=d//2) for m in [[""], ["0", "1"]][d%2])
%o A370410 def a(n): return len(set(a+b for i in range(1, n) for a in bin_pals(i) for b in bin_pals(n-i)))
%o A370410 print([a(n) for n in range(1, 21)]) # _Michael S. Branicky_, Feb 18 2024
%Y A370410 Cf. A007055, which enumerates the same thing, but allowing the palindromes to be empty.
%K A370410 nonn
%O A370410 1,2
%A A370410 _Jeffrey Shallit_, Feb 18 2024
%E A370410 a(21)-a(44) from _Michael S. Branicky_, Feb 18 2024
