%I A334004 #26 Dec 20 2024 10:54:02
%S A334004 1,40545,750331584,11905151192865,179796299139278305,
%T A334004 2662079368040434932480,39067130344394503972142977,
%U A334004 570929651486775190858844600865,8326627661691818545121844900397056,121316352059447360262303173959408358625,1766658737971934774798769007686932254154689
%N A334004 Number of spanning trees in the graph P_9 x P_n.
%H A334004 Seiichi Manyama, <a href="/A334004/b334004.txt">Table of n, a(n) for n = 1..200</a>
%H A334004 <a href="/index/Rec#order_256">Index entries for linear recurrences with constant coefficients</a>, order 256.
%t A334004 a[n_] := Resultant[ChebyshevU[n - 1, x/2], ChebyshevU[8, (4 - x)/2], x]; Array[a, 11] (* _Amiram Eldar_, May 04 2021 *)
%o A334004 (PARI) {a(n) = polresultant(polchebyshev(n-1, 2, x/2), polchebyshev(8, 2, (4-x)/2))}
%o A334004 (Python)
%o A334004 # Using graphillion
%o A334004 from graphillion import GraphSet
%o A334004 import graphillion.tutorial as tl
%o A334004 def A116469(n, k):
%o A334004     if n == 1 or k == 1: return 1
%o A334004     universe = tl.grid(n - 1, k - 1)
%o A334004     GraphSet.set_universe(universe)
%o A334004     spanning_trees = GraphSet.trees(is_spanning=True)
%o A334004     return spanning_trees.len()
%o A334004 def A334004(n):
%o A334004     return A116469(n, 9)
%o A334004 print([A334004(n) for n in range(1, 10)])
%Y A334004 Row m=9 of A116469.
%K A334004 nonn,changed
%O A334004 1,2
%A A334004 _Seiichi Manyama_, Apr 12 2020
