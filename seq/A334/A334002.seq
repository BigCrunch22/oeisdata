%I A334002 #22 Dec 19 2024 09:11:40
%S A334002 1,2911,4768673,7022359583,10021992194369,14143261515284447,
%T A334002 19872369301840986112,27873182693625548898079,
%U A334002 39067130344394503972142977,54740416599810921320592441119,76692291658239649098972455530913,107441842254735898225957962027174559,150517199699838971875005120330439121217
%N A334002 Number of spanning trees in the graph P_7 x P_n.
%H A334002 Seiichi Manyama, <a href="/A334002/b334002.txt">Table of n, a(n) for n = 1..200</a>
%H A334002 Vaclav Kotesovec, <a href="/A334002/a334002.txt">Generating function</a>
%H A334002 <a href="/index/Rec#order_48">Index entries for linear recurrences with constant coefficients</a>, order 48.
%t A334002 a[n_] := Resultant[ChebyshevU[n - 1, x/2], ChebyshevU[6, (4 - x)/2], x]; Array[a, 13] (* _Amiram Eldar_, May 04 2021 *)
%o A334002 (Python)
%o A334002 # Using graphillion
%o A334002 from graphillion import GraphSet
%o A334002 import graphillion.tutorial as tl
%o A334002 def A116469(n, k):
%o A334002     if n == 1 or k == 1: return 1
%o A334002     universe = tl.grid(n - 1, k - 1)
%o A334002     GraphSet.set_universe(universe)
%o A334002     spanning_trees = GraphSet.trees(is_spanning=True)
%o A334002     return spanning_trees.len()
%o A334002 def A334002(n):
%o A334002     return A116469(n, 7)
%o A334002 print([A334002(n) for n in range(1, 15)])
%Y A334002 Row m=7 of A116469.
%K A334002 nonn
%O A334002 1,2
%A A334002 _Seiichi Manyama_, Apr 12 2020
