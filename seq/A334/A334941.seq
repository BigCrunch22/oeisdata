%I A334941 #19 Dec 14 2022 09:37:57
%S A334941 0,1,0,0,0,1,1,0,1,0,1,1,1,0,0,1,0,0,1,1,1,1,0,1,1,0,0,0,0,0,1,0,1,0,
%T A334941 0,0,0,1,1,1,0,1,0,0,1,0,1,1,0,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,1,1,0,
%U A334941 0,1,1,0,0,0,1,1,1,1,1,1,0,1,0,1,0,1,0
%N A334941 For any n > 0, let w be the least positive number such that the values (a(n+1-w), ..., a(n-1), e) do not appear continuously in (a(1), ..., a(n-1)) for some e in {0, 1}; a(n) is the least such e.
%C A334941 In other words, at each step we introduce a minimal suffix that has not yet appeared; we first minimize its length, and in case of a tie, we choose the lexicographically earliest.
%C A334941 Will every finite sequence of 0's and 1's appear?
%C A334941 Differs from A079101 for the first time at n = 70. - _Jeffrey Shallit_, Dec 14 2022
%H A334941 Rémy Sigrist, <a href="/A334941/a334941.png">Pin plot of the number of 0's minus the number of 1's among the first n terms for n = 1..500000</a>
%H A334941 Rémy Sigrist, <a href="/A334941/a334941.pl.txt">Perl program for A334941</a>
%e A334941 For n = 1:
%e A334941 - for w = 1: (0) has not appeared,
%e A334941 - so a(1) = 0.
%e A334941 For n = 2:
%e A334941 - for w = 1: (0) has appeared but (1) has not,
%e A334941 - so a(2) = 1.
%e A334941 For n = 3:
%e A334941 - for w = 1: (0) and (1) have appeared,
%e A334941 - for w = 2: (1, 0) has not appeared,
%e A334941 - so a(3) = 0.
%e A334941 For n = 4:
%e A334941 - for w = 1: (0) and (1) have appeared,
%e A334941 - for w = 2: (0, 0) has not appeared,
%e A334941 - so a(4) = 0.
%e A334941 For n = 5:
%e A334941 - for w = 1: (0) and (1) have appeared,
%e A334941 - for w = 2: (0, 0) and (0, 1) have appeared,
%e A334941 - for w = 3: (0, 0, 0) has not appeared,
%e A334941 - so a(5) = 0.
%o A334941 (Perl) See Links section.
%Y A334941 Cf. A038219, A079101, A334944.
%K A334941 nonn
%O A334941 1
%A A334941 _Rémy Sigrist_, May 17 2020
