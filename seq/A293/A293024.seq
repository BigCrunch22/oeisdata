%I A293024 #51 Jan 05 2025 19:51:41
%S A293024 1,1,1,1,0,2,1,0,1,5,1,0,0,1,15,1,0,0,1,4,52,1,0,0,0,1,11,203,1,0,0,0,
%T A293024 1,1,41,877,1,0,0,0,0,1,11,162,4140,1,0,0,0,0,1,1,36,715,21147,1,0,0,
%U A293024 0,0,0,1,1,92,3425,115975,1,0,0,0,0,0,1,1,36,491,17722,678570
%N A293024 Square array A(n,k), n>=0, k>=0, read by antidiagonals, where column k is the expansion of e.g.f. exp(exp(x) - Sum_{i=0..k} x^i/i!).
%C A293024 A(n,k) is the number of set partitions of [n] into blocks of size > k.
%H A293024 Seiichi Manyama, <a href="/A293024/b293024.txt">Antidiagonals n = 0..139, flattened</a>
%H A293024 E. A. Enneking and J. C. Ahuja, <a href="https://web.archive.org/web/2024*/https://www.fq.math.ca/Scanned/14-1/enneking.pdf">Generalized Bell numbers</a>, Fib. Quart., 14 (1976), 67-73.
%F A293024 E.g.f. of column k: Product_{i>k} exp(x^i/i!).
%F A293024 A(0,k) = 1, A(1,k) = A(2,k) = ... = A(k,k) = 0 and A(n,k) = Sum_{i=k..n-1} binomial(n-1,i)*A(n-1-i,k) for n > k.
%e A293024 Square array begins:
%e A293024     1,   1,  1, 1, 1, 1, 1, 1, ...
%e A293024     1,   0,  0, 0, 0, 0, 0, 0, ...
%e A293024     2,   1,  0, 0, 0, 0, 0, 0, ...
%e A293024     5,   1,  1, 0, 0, 0, 0, 0, ...
%e A293024    15,   4,  1, 1, 0, 0, 0, 0, ...
%e A293024    52,  11,  1, 1, 1, 0, 0, 0, ...
%e A293024   203,  41, 11, 1, 1, 1, 0, 0, ...
%e A293024   877, 162, 36, 1, 1, 1, 1, 0, ...
%p A293024 A:= proc(n, k) option remember; `if`(n=0, 1, add(
%p A293024       A(n-j, k)*binomial(n-1, j-1), j=1+k..n))
%p A293024     end:
%p A293024 seq(seq(A(n, d-n), n=0..d), d=0..14);  # _Alois P. Heinz_, Sep 28 2017
%t A293024 A[0, _] = 1;
%t A293024 A[n_, k_] /; 0 <= k <= n := A[n, k] = Sum[A[n-j, k] Binomial[n-1, j-1], {j, k+1, n}];
%t A293024 A[_, _] = 0;
%t A293024 Table[A[n-k, k], {n, 0, 11}, {k, n, 0, -1}] // Flatten (* _Jean-FranÃ§ois Alcover_, Dec 06 2019 *)
%o A293024 (Ruby)
%o A293024 def ncr(n, r)
%o A293024   return 1 if r == 0
%o A293024   (n - r + 1..n).inject(:*) / (1..r).inject(:*)
%o A293024 end
%o A293024 def A(k, n)
%o A293024   ary = [1]
%o A293024   (1..n).each{|i| ary << (k..i - 1).inject(0){|s, j| s + ncr(i - 1, j) * ary[-1 - j]}}
%o A293024   ary
%o A293024 end
%o A293024 def A293024(n)
%o A293024   a = []
%o A293024   (0..n).each{|i| a << A(i, n - i)}
%o A293024   ary = []
%o A293024   (0..n).each{|i|
%o A293024     (0..i).each{|j|
%o A293024       ary << a[i - j][j]
%o A293024     }
%o A293024   }
%o A293024   ary
%o A293024 end
%o A293024 p A293024(20)
%Y A293024 Columns k=0..5 give A000110, A000296, A006505, A057837, A057814, A293025.
%Y A293024 Rows n=0..1 give A000012, A000007.
%Y A293024 Main diagonal gives A000007.
%Y A293024 Cf. A182931, A282988 (as triangle), A293051, A293053.
%K A293024 nonn,tabl
%O A293024 0,6
%A A293024 _Seiichi Manyama_, Sep 28 2017
