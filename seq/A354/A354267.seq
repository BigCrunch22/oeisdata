%I A354267 #14 Nov 29 2023 05:59:40
%S A354267 1,0,1,1,1,1,1,2,2,1,2,3,4,3,1,3,5,7,7,4,1,5,8,12,14,11,5,1,8,13,20,
%T A354267 26,25,16,6,1,13,21,33,46,51,41,22,7,1,21,34,54,79,97,92,63,29,8,1,34,
%U A354267 55,88,133,176,189,155,92,37,9,1,55,89,143,221,309,365,344,247,129,46,10,1
%N A354267 A Fibonacci-Pascal triangle read by rows: T(n, n) = 1, T(n, n-1) = n - 1, T(n, 0) = T(n-1, 1) and T(n, k) = T(n-1, k-1) + T(n-1, k) for 0 < k < n-1.
%H A354267 <a href="/index/Pas#Pascal">Index entries for triangles and arrays related to Pascal's triangle</a>
%F A354267 T(n, 0) = Fibonacci(n - 1).
%e A354267 [0]  1;
%e A354267 [1]  0,  1;
%e A354267 [2]  1,  1,  1;
%e A354267 [3]  1,  2,  2,  1;
%e A354267 [4]  2,  3,  4,  3,  1;
%e A354267 [5]  3,  5,  7,  7,  4,  1;
%e A354267 [6]  5,  8, 12, 14, 11,  5,  1;
%e A354267 [7]  8, 13, 20, 26, 25, 16,  6,  1;
%e A354267 [8] 13, 21, 33, 46, 51, 41, 22,  7, 1;
%e A354267 [9] 21, 34, 54, 79, 97, 92, 63, 29, 8, 1;
%p A354267 T := proc(n, k) option remember;
%p A354267 if n = k then 1 elif k = n-1 then n-1 elif k = 0 then T(n-1, 1) else
%p A354267 T(n-1, k) + T(n-1, k-1) fi end: seq(seq(T(n, k), k = 0..n), n = 0..11);
%t A354267 T[n_, k_] := Which[n == k, 1, k == n-1, n-1, k == 0, T[n-1, 1], True, T[n-1, k] + T[n-1, k-1]];
%t A354267 Table[T[n, k], {n, 0, 11}, {k, 0, n}] // Flatten (* _Jean-Fran√ßois Alcover_, Nov 29 2023 *)
%o A354267 (Python) from functools import cache
%o A354267 @cache
%o A354267 def A354267row(n):
%o A354267     if n == 0: return [1]
%o A354267     if n == 1: return [0, 1]
%o A354267     row = A354267row(n - 1) + [1]
%o A354267     s = row[1]
%o A354267     for k in range(n-1, 0, -1):
%o A354267         row[k] += row[k - 1]
%o A354267     row[0] = s
%o A354267     return row
%o A354267 for n in range(10): print(A354267row(n))
%Y A354267 Cf. A212804 (first column, which is also row 0 of A352744), A099036 (row sums), A228074 (subtriangle), A000045 (Fibonacci).
%K A354267 nonn,tabl,changed
%O A354267 0,8
%A A354267 _Peter Luschny_, May 31 2022
