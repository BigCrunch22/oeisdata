%I A203718 #32 May 21 2021 08:08:20
%S A203718 1,110,110100,110100111,1101001111000,11010011110001011,
%T A203718 1101001111000101110000,110100111100010111000010010,
%U A203718 11010011110001011100001001010101,1101001111000101110000100101010110110,110100111100010111000010010101011011011001
%N A203718 Binary sequence where each successive term is made by appending to the previous term the next smallest positive binary integer that is not already contained within it.
%C A203718 Each successive term is built from the last by appending to it the next smallest positive binary integer that is not already contained within the previous term as a sequential subset. E.g., a(2) = 110. The smallest positive binary integer not contained within this term is 100, since 1, 10 and 11 can all be found in parts of it. Therefore a(3) is the concatenation of a(2) and '100'; a(3) = 110100.
%C A203718 Note that every power of 2 will always be included, as there is never a prior instance of exactly that many zeros occurring sequentially. This sequence can be generalized to other number bases, but higher bases take more terms to begin exhibiting interesting (nontrivial) behavior. Can also be begun with a 'seed' number. Properties of this sequence using seed values are yet to be examined. Open questions: frequency at which new integers are appended, frequency of each digit within successive terms, rate of growth of terms.
%o A203718 (Python)
%o A203718 def A203718(n, seed = '1'):
%o A203718     """
%o A203718     Returns the n-th term of the sequence.
%o A203718     Optionally specified seed.
%o A203718     """
%o A203718     i = 0
%o A203718     term = seed
%o A203718     next_int = 1
%o A203718     while i < n:
%o A203718         b = bin(next_int)[2:]
%o A203718         if b not in term:
%o A203718             term += b
%o A203718             i += 1
%o A203718         next_int += 1
%o A203718     return term
%o A203718 def A203718_list(stop, start = 0, seed = '1'):
%o A203718     """
%o A203718     Returns a slice of the sequence up to the specified index.
%o A203718     Seed and starting index optional
%o A203718     """
%o A203718     terms = [seed]
%o A203718     term = seed
%o A203718     i = 0
%o A203718     next_int = 1
%o A203718     while i < stop:
%o A203718         b = bin(next_int)[2:]
%o A203718         if b not in term:
%o A203718             term += b
%o A203718             if start <= i:
%o A203718                 terms.append(term)
%o A203718             i += 1
%o A203718         next_int += 1
%o A203718     return terms
%K A203718 nonn,base
%O A203718 1,2
%A A203718 _Michael Cromer_, Jan 05 2012
