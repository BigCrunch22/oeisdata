%I A356266 #10 Aug 21 2022 14:10:10
%S A356266 1,1,0,1,0,1,1,0,1,2,1,1,0,1,3,3,3,3,1,0,1,4,4,2,6,12,2,4,6,1,0,1,5,5,
%T A356266 5,10,20,10,10,10,30,10,5,10,1,0,1,6,6,6,3,15,30,30,15,15,20,60,30,60,
%U A356266 5,15,60,30,6,15,1
%N A356266 Partition triangle read by rows, counting reducible permutations with weakly decreasing Lehmer code, refining triangle A356115.
%H A356266 Peter Luschny, <a href="https://github.com/PeterLuschny/PermutationsWithLehmer/blob/main/PermutationsWithLehmer.ipynb">Permutations with Lehmer</a>, a SageMath Jupyter Notebook.
%e A356266 [0] 1;
%e A356266 [1] 1;
%e A356266 [2] 0, 1;
%e A356266 [3] 0, 1, 1;
%e A356266 [4] 0, [1, 2], 1, 1;
%e A356266 [5] 0, [1, 3], [3, 3], 3,  1;
%e A356266 [6] 0, [1, 4, 4], [2,  6, 12], [2,  4],  6,  1;
%e A356266 [7] 0, [1, 5, 5], [5, 10, 20, 10], [10, 10, 30], [10,  5], 10,  1;
%e A356266 [8] 0, [1, 6, 6, 6],[3,15, 30, 30, 15],[15, 20, 60, 30, 60],[5,15,60],[30,6],15,1;
%e A356266 Summing the bracketed terms reduces the triangle to A356115.
%o A356266 (SageMath) # uses functions perm_red_stats and reducible from A356264.
%o A356266 @cache
%o A356266 def A356266_row(n: int) -> list[int]:
%o A356266     if n < 2: return [1]
%o A356266     return [0] + [v[1] for v in perm_red_stats(n, reducible, weakly_decreasing)]
%o A356266 def A356266(n: int, k: int) -> int:
%o A356266     return A356266_row(n)[k]
%o A356266 for n in range(8):
%o A356266     print(A356266_row(n))
%Y A356266 Cf. A356264, A356115 (reduced), A120588 (row sums).
%K A356266 nonn,tabf
%O A356266 0,10
%A A356266 _Peter Luschny_, Aug 16 2022
