%I A308705 #18 May 13 2021 01:44:40
%S A308705 2,7,6,3,8,7,1,1,7,2,7,9,4,8,6,5,2,3,7,3,4,1,9,8,6,7,6,2,1,1,9,0,1,2,
%T A308705 3,0,5,5,5,0,8,9,9,8,8,1,6,0,6,8,5,5,0,6,1,4,3,6,7,6,8,1,9,1,1,5
%N A308705 Decimal expansion of the constant formed by concatenating the terms of A076478 (binary vectors of lengths 1, 2, 3, ... in numerical order).
%C A308705 The binary vectors "0,1,00,01,10,11,000,001,..." are concatenated into a constant "0.0100011011000001...", then converted to decimal.
%e A308705 0.276387117279486523734198676211901230555089988160685506143676819115...
%t A308705 m = 100; d[n_] := Rest@IntegerDigits[n + 1, 2] + 1; v = Flatten[Array[d, 4 m]] - 1; RealDigits[FromDigits[v, 2]/2^Length[v], 10, m][[1]] (* _Amiram Eldar_, Jul 05 2019 after _Clark Kimberling_ at A076478 *)
%o A308705 (Python)
%o A308705 from bigfloat import *
%o A308705 import string
%o A308705 def GenerateBitstring(bitstring, suffix, recurse):
%o A308705     if recurse == 0:
%o A308705         bitstring = bitstring + suffix
%o A308705     else:
%o A308705         bitstring = GenerateBitstring(bitstring, suffix + "0", recurse-1)
%o A308705         bitstring = GenerateBitstring(bitstring, suffix + "1", recurse-1)
%o A308705     return bitstring
%o A308705 VulcanBinary = ""
%o A308705 MaxRecursion = 8
%o A308705 for i in range(1,MaxRecursion+1):
%o A308705     VulcanBinary = GenerateBitstring(VulcanBinary, "", i)
%o A308705 print('.' + VulcanBinary)
%o A308705 with precision(2000):
%o A308705     VulcanDecimal = BigFloat(0)
%o A308705     b = BigFloat(1)
%o A308705     for c in VulcanBinary:
%o A308705         b = b/2.
%o A308705         if c == '1':
%o A308705             VulcanDecimal = VulcanDecimal+b
%o A308705 print(VulcanDecimal)
%o A308705 print(string.join(x + ',' for x in str(VulcanDecimal)[2:]))
%Y A308705 Cf. A076478.
%K A308705 nonn,base,cons
%O A308705 0,1
%A A308705 _David McFadzean_, Jun 18 2019
