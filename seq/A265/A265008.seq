%I A265008 #28 Dec 06 2015 10:34:18
%S A265008 1,3,3,6,5,9,5,10,8,9,9,18,13,15,7,15,12,12,13,18,11,17,13,30,23,21,
%T A265008 17,30,21,21,9,21,17,16,16,18,16,21,17,30,22,15,17,32,21,25,19,45,34,
%U A265008 33,27,36,25,25,25,50,37,33,27,42,33,27,11,28,23,21,21,22,20,24,20,30,20,24,23,33,27,29,21,45,34,30,29,30,17,29,25,52,40,33,25,46,31
%N A265008 Number of positive solutions to the equation A x B = C, where A, B and C are made from (contiguous) substrings of the binary representation of n.
%C A265008 Here all three of A, B and C are positive; if A and B are distinct then the solutions A X B = C and B X A = C are regarded as distinct; while A x A is counted once. A substring may be used any number of times.
%H A265008 Robert Israel, <a href="/A265008/b265008.txt">Table of n, a(n) for n = 1..10000</a>
%H A265008 Marko Riedel, <a href="/A265008/a265008.maple.txt">Maple code for the number of solutions to A x B = C using binary substrings of n.</a>
%e A265008 When n=6 = (110)_2 we get the substrings 1=(1)_2, 2=(10)_2, 3=(11)_2 and 6=(110)_2 with the products 1*1=1, 1*2=2, 2*1=2, 1*3=3, 3*1=3, 1*6=6, 6*1=6, 2*3=6, 3*2=6 for a total of 9. When n=8 = (1000)_2 we get the substrings 1=(1)_2, 2=(10)_2, 4=(100)_2 and 8=(1000)_2 with the products 1*1=1, 1*2=2, 2*1=2, 1*4=4, 4*1=4, 1*8=1, 8*1=1, 2*2=4, 2*4=8, 4*2=8 for a total of 10.
%p A265008 F:= proc(n) local L,ss;
%p A265008   L:= convert(n,base,2);
%p A265008   ss:= {seq(seq(add(2^(i-j)*L[i],i=j..k), j=1..k),k=1..nops(L))} minus {0};
%p A265008   numboccur(true,[seq(seq(member(a*b,ss),a=ss),b=ss)]);
%p A265008 end proc:
%p A265008 seq(F(n), n=1..100); # _Robert Israel_, Nov 30 2015
%o A265008 (Haskell)
%o A265008 a265008 n = length [() | let cs = a165416_row n, c <- cs,
%o A265008             let as = takeWhile (<= c) cs, a <- as, b <- as, a * b == c]
%o A265008 -- _Reinhard Zumkeller_, Dec 05 2015
%Y A265008 Allowing A,B,C to be zero gives A265236.
%Y A265008 See A265182, A265183 for decimal analogs.
%Y A265008 Cf. A165416.
%K A265008 nonn,base
%O A265008 1,2
%A A265008 _Marko Riedel_, Nov 29 2015
