%I A348834 #33 Dec 31 2023 12:37:29
%S A348834 1,2,3,4,5,6,7,8,9,96,969,987,9997,99998,999999,9899997,99999997,
%T A348834 999999998,9999999999,98999999998,999999999998,9999999999999,
%U A348834 99999999999998,999999999999999,9999999999999997,99999999999999999,699999999999999999,9799999999999999997
%N A348834 Zeroless numbers that have the largest possible remainder when divided by their digit product.
%C A348834 For the largest remainder of an n-digit number when divided by its product of digits, see A348833.
%C A348834 Starting from 9997, each term appears to have 1 more decimal digit than the previous term. - _Chai Wah Wu_, Nov 08 2021
%H A348834 Chai Wah Wu, <a href="/A348834/b348834.txt">Table of n, a(n) for n = 1..61</a>
%e A348834 1-digit number 3 == 0 mod (3).
%e A348834 2-digit number 96 == 42 mod (9*6).
%e A348834 3-digit numbers 969 == 483 mod (9*6*9) and 987 == 483 mod (9*8*7).
%e A348834 4-digit number 9997 == 4894 mod (9*9*9*7).
%e A348834 5-digit number 99998 == 47510 mod (9*9*9*9*8).
%o A348834 (Python)
%o A348834 from math import prod
%o A348834 from itertools import product
%o A348834 def auptod(maxdigits):
%o A348834     alst = []
%o A348834     for d in range(1, maxdigits+1):
%o A348834         maxr, argmaxr = 0, []
%o A348834         for p in product("123456789", repeat=d):
%o A348834             t = int("".join(p))
%o A348834             r = t%prod(map(int, p))
%o A348834             if r == maxr:
%o A348834                 argmaxr.append(t)
%o A348834             elif r > maxr:
%o A348834                 maxr = r
%o A348834                 argmaxr = [t]
%o A348834         alst.extend(argmaxr)
%o A348834     return alst
%o A348834 print(auptod(7)) # _Michael S. Branicky_, Nov 07 2021
%Y A348834 Cf. A052382, A007602, A348799, A348833.
%K A348834 nonn,base
%O A348834 1,2
%A A348834 _Bernard Schott_, Nov 07 2021
%E A348834 a(18)-a(21) from _Michael S. Branicky_, Nov 07 2021
%E A348834 a(22)-a(28) from _Chai Wah Wu_, Nov 08 2021
