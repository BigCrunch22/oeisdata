%I A348633 #16 Feb 26 2024 19:20:43
%S A348633 2,13,17,19,101,3,131,5,151,7,181,31,41,61,71,313,191,317,1013,1019,
%T A348633 1213,1217,1319,1613,1619,1913,10141,419,10151,613,10181,617,12101,
%U A348633 619,12161,719,13121,919,13151,2131,2141,2161,3121,3181,3191,5101,5171,6101,6121,6131,6151,7121,7151,8101,8161,8171,8191,9151,9161,9181,21013,13171,21017,15101
%N A348633 Lexicographically earliest sequence of distinct primes where the concatenation of all terms alternates a 1 digit with a not-1 digit.
%C A348633 Primes containing two adjacent ones are necessarily excluded.
%H A348633 Hans Havermann, <a href="/A348633/b348633.txt">Table of n, a(n) for n = 1..10000</a>
%t A348633 q[p_, m_] := AllTrue[IntegerDigits[p][[m ;; -1 ;; 2]], # == 1 &] && AllTrue[IntegerDigits[p][[3 - m ;; -1 ;; 2]], # != 1 &]; seq[max_] := Module[{p = Select[Range[3, max], PrimeQ], p1, p2, s = {2}}, p1 = Select[p, q[#, 1] &]; p2 = Select[p, q[#, 2] &]; While[p1 != {} && p2 != {}, If[Mod[s[[-1]], 10] == 1, AppendTo[s, p2[[1]]]; p2 = Drop[p2, 1], AppendTo[s, p1[[1]]]; p1 = Drop[p1, 1]]]; s]; seq[2*10^4] (* _Amiram Eldar_, Oct 28 2021 *)
%o A348633 (Python)
%o A348633 from sympy import isprime
%o A348633 from itertools import product
%o A348633 def eo1(): # generates +ive terms with every other digit 1 and not-1 or v.v.
%o A348633     yield from range(1, 10)
%o A348633     digits = 2
%o A348633     while True:
%o A348633         for not1s in product("023456789", repeat=digits//2):
%o A348633             yield(int("1" + "1".join(not1s) + "1"*(digits%2)))
%o A348633         for first in "23456789":
%o A348633             for not1s in product("023456789", repeat=(digits-1)//2):
%o A348633                 yield(int("1".join((first,)+not1s) + "1"*(digits%2==0)))
%o A348633         digits += 1
%o A348633 def aupton(terms):
%o A348633     alst, aset, astr = [2], {2}, "2"
%o A348633     kgen = {True: eo1(), False: eo1()}
%o A348633     for n in range(2, terms+1):
%o A348633         mustbegin1 = (astr[-1] != "1")
%o A348633         k = next(kgen[mustbegin1]); sk = str(k)
%o A348633         while k in aset or ((sk[0] == "1") != mustbegin1) or not isprime(k):
%o A348633             k = next(kgen[mustbegin1]); sk = str(k)
%o A348633         alst.append(k); aset.add(k); astr += sk
%o A348633     return alst
%o A348633 print(aupton(64)) # _Michael S. Branicky_, Oct 28 2021
%Y A348633 Cf. A000040, A276103.
%K A348633 nonn,base,changed
%O A348633 1,1
%A A348633 _Hans Havermann_, Oct 26 2021
