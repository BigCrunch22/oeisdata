%I A108737 #10 Oct 27 2023 13:09:56
%S A108737 0,1,0,1,1,0,0,1,1,1,0,0,0,1,0,1,0,1,1,0,1,1,1,1,0,0,0,0,1,0,0,1,0,1,
%T A108737 0,0,1,1,0,1,0,1,1,1,0,1,1,1,1,1,0,0,0,0,0,1,0,0,0,1,1,0,0,1,0,0,1,0,
%U A108737 1,0,0,0,1,0,1,0,1,0,1,1,0,1,0,0,1,1,0,1,1,0,1,1,1,0,0,1,1,1,0,1,0,1,1,1,1
%N A108737 Start with S = {}. For m = 0, 1, 2, 3, ... let u be the binary expansion of m. If u is not a substring of S, append the minimal number of 0's and 1's to S to remedy this. Sequence gives S.
%H A108737 Michael S. Branicky, <a href="/A108737/b108737.txt">Table of n, a(n) for n = 1..10000</a>
%e A108737 We construct S as follows, starting with S = {}.
%e A108737 0 is missing, so S = {0};
%e A108737 1 is missing, so S = {0,1};
%e A108737 10 is missing, so S = {0,1,0};
%e A108737 11 is missing, so S = {0,1,0,1,1};
%e A108737 100 is missing, so S = {0,1,0,1,1,0,0};
%e A108737 101 and 110 are visible, but 111 is missing, so S = {0,1,0,1,1,0,0,1,1,1}; etc.
%o A108737 (Python)
%o A108737 from itertools import count, islice, product
%o A108737 def a(): # generator of terms
%o A108737     S = ""
%o A108737     for m in count(0):
%o A108737         Sm = bin(m)[2:]
%o A108737         if Sm in S: continue
%o A108737         for i in range(1, len(Sm)+1):
%o A108737             v = Sm[-i:]
%o A108737             t = "" if len(v) == len(Sm) else S[-len(Sm)+i:]
%o A108737             if t+v == Sm: break
%o A108737         S += v
%o A108737         yield from list(map(int, v))
%o A108737 print(list(islice(a(), 105))) # _Michael S. Branicky_, Oct 27 2023
%Y A108737 Cf. A108736.
%K A108737 nonn,easy,changed
%O A108737 1,1
%A A108737 _N. J. A. Sloane_, Jun 23 2005
%E A108737 More terms from _John W. Layman_, Jun 24 2005
