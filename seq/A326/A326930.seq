%I A326930 #14 May 10 2020 16:32:59
%S A326930 1,3,3,3,7,6,7,8,13,10,13,12,13,15,15,15,17,21,19,21,21,21,25,24,25,
%T A326930 27,27,27,31,30,31,32,35,34,35,39,37,39,39,39,43,42,43,44,49,46,49,48,
%U A326930 49,51,51,51,55,54,55,56,61,58,61,60,61,63,63,63,65,69,67,69,69,69,71,75
%N A326930 Height of the smallest stack in a block-stacking sequence.
%C A326930 This sequence describes a block-stacking process: at step 1, start with a single stack of height 1. At step n>1, if n is less than or equal to the height of the smallest stack, start a new stack of height n. Otherwise, add n to the height of the smallest stack.
%o A326930 (Python)
%o A326930 def seq():
%o A326930     towers = [0]
%o A326930     for i in range(1, 100):
%o A326930         towers = sorted(towers)
%o A326930         if i <= towers[0]:
%o A326930             towers = [i] + towers
%o A326930         else:
%o A326930             towers = [towers[0] + i] + towers[1:]
%o A326930         yield min(towers)
%o A326930 (PARI) seq(n)={my(L=List(), a=vector(n)); for(n=1, #a, if(#L && L[1]<n, L[1]+=n, listput(L,n)); listsort(L); a[n]=L[1]); a} \\ _Andrew Howroyd_, Oct 22 2019
%K A326930 easy,nonn
%O A326930 1,2
%A A326930 _Christian Perfect_, Oct 22 2019
