%I A332661 #23 Apr 29 2022 17:20:48
%S A332661 1,2,3,11,4,22,101,5,111,6,1001,7,88,77,8,1111,9,10001,33,121,131,202,
%T A332661 44,2002,141,212,1221,303,2112,222,3003,232,10101,55,99,555,979,5555,
%U A332661 9779,55555,97779,100001,66,1000001,151,11011,161,11111,171,101101,181
%N A332661 a(1)=1; a(n+1) is the smallest palindrome not already in the sequence such that the product of a(n+1) and a(n) is also a palindrome.
%C A332661 First mentioned by Eric Angelini in the 'math-fun' mailing list on Jan 12, 2020.
%C A332661 The sequence is infinite because, when all smaller numbers fail, a sufficiently large 10^k+1 will always succeed.
%H A332661 Hans Havermann, <a href="/A332661/b332661.txt">Table of n, a(n) for n = 1..461</a>
%H A332661 Hans Havermann, <a href="/A332661/a332661.png">Sequence graph using alternately-colored indices</a>
%e A332661 a(4) = 11 because the smallest not-yet-used palindromes (4, 5, 6, 7, 8, 9) multiplied by 3 are not base-10 palindromes, but 11*3 is.
%o A332661 (Python)
%o A332661 from itertools import count, islice, product
%o A332661 def ispal(n): s = str(n); return s == s[::-1]
%o A332661 def pals(): # generator of palindromes
%o A332661     digits = "0123456789"
%o A332661     for d in count(1):
%o A332661         for p in product(digits, repeat=d//2):
%o A332661             if d > 1 and p[0] == "0": continue
%o A332661             left = "".join(p); right = left[::-1]
%o A332661             for mid in [[""], digits][d%2]: yield int(left + mid + right)
%o A332661 def agen(): # generator of terms
%o A332661     an, aset = 1, {0, 1} # 0 is not allowed
%o A332661     yield 1
%o A332661     while True:
%o A332661         for p in pals():
%o A332661             if p not in aset and ispal(an*p):
%o A332661                 an = p; aset.add(an); yield an; break
%o A332661 print(list(islice(agen(), 51))) # _Michael S. Branicky_, Apr 29 2022
%Y A332661 Cf. A002113 (base-10 palindromes).
%K A332661 nonn,base
%O A332661 1,2
%A A332661 _Eric Angelini_ and _Hans Havermann_, Feb 18 2020
