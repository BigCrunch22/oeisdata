%I A263344 #19 Mar 22 2019 12:10:04
%S A263344 1700,5950,155574,274550,300894,715275,758625,1365234,1404172,1542500,
%T A263344 1661750,2095250,2239750,2673250,2962250,3106750,3395750,3829250,
%U A263344 4226625,4262750,4407250,4700619,5398750,6371092,8167635,8560024,12305620,13725855,15497625,15586263
%N A263344 Consider the abundant aliquot parts, in ascending order, of a composite number. Take their sum and repeat the process deleting the minimum number and adding the previous sum. The sequence lists the numbers that after some number of iterations reach a sum equal to themselves.
%e A263344 Aliquot parts of 1700 are 1, 2, 4, 5, 10, 17, 20, 25, 34, 50, 68, 85, 100, 170, 340, 425, 850. The abundant numbers are 20, 100, 340. Therefore:
%e A263344 20 + 100 + 340 = 460;
%e A263344 100 + 340 + 460 = 900;
%e A263344 340 + 460 + 900 = 1700.
%p A263344 with(numtheory):P:=proc(q,h) local a,b,k,t,v; global n; v:=array(1..h);
%p A263344 for n from 1 to q do if not isprime(n) then b:=sort([op(divisors(n))]); a:=[];
%p A263344 for k from 1 to nops(b)-1 do if sigma(b[k])>2*b[k] then a:=[op(a),b[k]]; fi; od;
%p A263344 a:=sort(a); b:=nops(a); if b>1 then for k from 1 to b do v[k]:=a[k]; od;
%p A263344 t:=b+1; v[t]:=add(v[k], k=1..b); while v[t]<n do t:=t+1; v[t]:=add(v[k], k=t-b..t-1);
%p A263344 od; if v[t]=n then lprint(n,a); fi; fi; fi; od; end: P(10^9,1000);
%t A263344 seqQ[n_] := Module[{d = Select[Most[Divisors[n]], DivisorSigma[1, #] > 2 # &]}, Switch[Length[d], _?(# < 1 &), False, _?(# == 1 &), d[[1]] == n, _, k = 0; While[k < n, k = Total[d]; d = Rest[AppendTo[d, k]]]; k == n]]; seq = {}; Do[ If[seqQ[n], AppendTo[seq, n]], {n, 2, 10^6}]; seq (* _Amiram Eldar_, Mar 20 2019 *)
%Y A263344 Cf. A005101 (abundant numbers), A027751 (aliquot parts), A246544, A247012, A258142, A258270.
%K A263344 nonn
%O A263344 1,1
%A A263344 _Paolo P. Lava_, Oct 15 2015
%E A263344 More terms from _Amiram Eldar_, Mar 20 2019
