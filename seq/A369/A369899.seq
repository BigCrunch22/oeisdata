%I A369899 #15 Feb 08 2024 09:46:35
%S A369899 1,2,3,6,12,4,8,36,7,9,88,17,19,21,23,5,26,28,15,30,60,20,40,48,52,58,
%T A369899 38,67,43,78,64,92,10,103,11,14,115,27,13,31,34,37,41,45,50,51,16,18,
%U A369899 63,69,68,83,91,201,22,33,66,32,236,260,86,29,75,305,35,39,42,47,351,386,25,80,360,72
%N A369899 a(1) = 1, a(2) = 2; for n > 2, a(n) is the smallest unused positive number that is a substring of the sum of all previous terms.
%C A369899 The fixed points begin 1, 2, 3, 94, 1420, 1423, 1425, 1426, 1427, 8592, although it is likely there are infinitely more. The sequence is conjectured to be a permutation of the positive numbers.
%H A369899 Scott R. Shannon, <a href="/A369899/b369899.txt">Table of n, a(n) for n = 1..10000</a>
%H A369899 Scott R. Shannon, <a href="/A369899/a369899.png">Image of the first 50000 terms</a>.
%e A369899 a(6) = 4 as the sum of all previous terms is 1 + 2 + 3 + 6 + 12 = 24, and 4 is the smallest unused number that is a substring of "24".
%o A369899 (Python)
%o A369899 from itertools import islice
%o A369899 def agen(): # generator of terms
%o A369899     s, mink, aset = 3, 3, {1, 2}
%o A369899     yield from [1, 2]
%o A369899     while True:
%o A369899         an, ss = mink, str(s)
%o A369899         while an in aset or not str(an) in ss: an += 1
%o A369899         aset.add(an); s += an; yield an
%o A369899         while mink in aset: mink += 1
%o A369899 print(list(islice(agen(), 74))) # _Michael S. Branicky_, Feb 08 2024
%Y A369899 Cf. A370046 (base 2), A363186, A333410.
%K A369899 nonn,look,base
%O A369899 1,2
%A A369899 _Scott R. Shannon_, Feb 05 2024
