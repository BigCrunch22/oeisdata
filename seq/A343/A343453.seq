%I A343453 #26 Dec 19 2024 11:46:19
%S A343453 0,-1,0,0,1,1,0,0,1,1,0,1,1,1,0,0,1,1,0,1,1,2,2,1,1,1,0,1,1,1,0,0,1,1,
%T A343453 0,1,1,2,2,1,1,2,2,1,2,2,2,1,1,1,0,1,1,2,2,1,1,1,0,1,1,1,0,0,1,1,0,1,
%U A343453 1,2,2,1,1,2,2,1,2,2,2,1,1,2,2,1,2,2,3
%N A343453 The number of 3's minus the number of 2's among the first n terms of A342101.
%C A343453 It appears that the sequence never goes below -1 and increases without bound.
%C A343453 It appears that if the first appearance of a number x occurs at index n and the first appearance of x+1 appears at index m then m/n approaches 4 as x increases.
%H A343453 Kevin Ryde, <a href="https://user42.tuxfamily.org/seq-A342101-middle-delete/index.html">PARI/GP Code and Notes</a>.
%e A343453 A342101 = [1, 2, 3, 1, 3, ...]. By the fifth term of A342101 we see 2 terms with value 3, and a single term with value 2, so a(5) = 2 - 1 = 1.
%t A343453 Block[{a = {}, s = Nest[Join[#, Drop[#, {(Length[#] + 1)/2}]] &, Range[3], 6], c}, Array[Set[c[#], 0] &, 3]; Do[c[ s[[i]] ]++; AppendTo[a, c[3] - c[2]], {i, Min[Length@ s, 104]}]; a] (* _Michael De Vlieger_, May 01 2021 *)
%o A343453 (Kotlin)
%o A343453 fun a(iter: Int): List<Int> = runningSum(twosVersusThrees(iter))
%o A343453 fun runningSum(a: List<Int>) = a.drop(1).fold(listOf(a[0])) { acc, cur ->
%o A343453     acc + (acc.last() + cur)
%o A343453 }
%o A343453 fun twosVersusThrees(iter: Int): List<Int> = removeMiddle(listOf(0,-1,1), iter)
%o A343453 fun removeMiddle(initial: List<Int>, iter: Int): List<Int> {
%o A343453     if (iter < 2) return initial
%o A343453     val prev = removeMiddle(initial, iter-1)
%o A343453     return prev + prev.subList(0, (prev.size - 1) / 2) + prev.subList((prev.size + 1) /2, prev.size)
%o A343453 }
%o A343453 (PARI) \\ See links.
%Y A343453 Cf. A342101.
%K A343453 sign
%O A343453 1,22
%A A343453 _Matthew Malone_, Apr 15 2021
