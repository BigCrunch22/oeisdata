%I A323460 #18 May 11 2024 21:55:51
%S A323460 1,2,1,2,4,3,6,2,4,8,5,10,3,6,12,7,14,4,8,16,9,18,5,10,20,11,12,21,22,
%T A323460 6,11,12,14,22,24,13,16,23,26,7,12,14,18,24,28,15,25,30,110,8,13,16,
%U A323460 26,32,112,17,27,34,114,9,14,18,28,36,116,19,29,38
%N A323460 Choix de Bruxelles, version 2: irregular table read by rows in which row n lists all the legal numbers that can be reached by halving or doubling some substring of the decimal expansion of n (including the empty string).
%C A323460 The differs from the first version (in A323286) in that now n can be reached from n (by using the empty string).
%C A323460 This slight modification of the definition makes the analysis simpler.
%C A323460 The number of numbers that can be reached from n in one step is A323287(n)+1.
%C A323460 The minimal number of steps to reach n starting at 1 is still given by A323454.
%H A323460 Eric Angelini, Lars Blomberg, Charlie Neder, Remy Sigrist, and N. J. A. Sloane, <a href="http://arxiv.org/abs/1902.01444">"Choix de Bruxelles": A New Operation on Positive Integers</a>, arXiv:1902.01444 [math.NT], Feb 2019; Fib. Quart. 57:3 (2019), 195-200.
%H A323460 Brady Haran and N. J. A. Sloane, <a href="https://www.youtube.com/watch?v=AeqK96UX3rA">The Brussels Choice</a>, Numberphile video (2020)
%e A323460 Rows 1 through 20 are:
%e A323460 1, 2,
%e A323460 1, 2, 4,
%e A323460 3, 6,
%e A323460 2, 4, 8,
%e A323460 5, 10,
%e A323460 3, 6, 12,
%e A323460 7, 14,
%e A323460 4, 8, 16,
%e A323460 9, 18,
%e A323460 5, 10, 20,
%e A323460 11, 12, 21, 22,
%e A323460 6, 11, 12, 14, 22, 24,
%e A323460 13, 16, 23, 26,
%e A323460 7, 12, 14, 18, 24, 28,
%e A323460 15, 25, 30, 110,
%e A323460 8, 13, 16, 26, 32, 112,
%e A323460 17, 27, 34, 114,
%e A323460 9, 14, 18, 28, 36, 116,
%e A323460 19, 29, 38, 118,
%e A323460 10, 20, 40
%o A323460 (Python)
%o A323460 def cdb2(n):
%o A323460     s, out = str(n), {n}
%o A323460     for l in range(1, len(s)+1):
%o A323460         for i in range(len(s)+1-l):
%o A323460             if s[i] == '0': continue
%o A323460             t = int(s[i:i+l])
%o A323460             out.add(int(s[:i] + str(2*t) + s[i+l:]))
%o A323460             if t&1 == 0: out.add(int(s[:i] + str(t//2) + s[i+l:]))
%o A323460     return sorted(out)
%o A323460 print([c for n in range(1, 21) for c in cdb2(n)]) # _Michael S. Branicky_, Jul 24 2022
%Y A323460 Cf. A323286, A323287, A323453, A323454.
%K A323460 nonn,base,tabf
%O A323460 1,2
%A A323460 _N. J. A. Sloane_, Jan 22 2019
