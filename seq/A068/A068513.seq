%I A068513 #10 May 06 2024 11:04:13
%S A068513 15,45,630,25200,32004000,508031496000,128015872500032496000,
%T A068513 3670698694547655407496988066168944000,
%U A068513 10302657959650317880463349610273001290502485245258650172717840000
%N A068513 a(0) = 15; for n > 0, a(n) is the smallest triangular number which is a (proper) multiple of a(n-1).
%C A068513 Thanks to _Dean Hickerson_ for a very efficient program.
%H A068513 Chai Wah Wu, <a href="/A068513/b068513.txt">Table of n, a(n) for n = 0..10</a>
%t A068513 Needs[ NumberTheory`NumberTheoryFunctions`]; pm1[{k_}] := {1, k - 1}; pm1[lst_] := Module[{a, m, v}, a = lst[[1]]; m = Times @@ Rest[lst]; v = pm1[ Rest[lst]]; Union[ ChineseRemainder[{1, #}, {a, m}] & /@ v, ChineseRemainder[{-1, #}, {a, m}] & /@ v]]; nexttri[1] = 3; nexttri[n_] := Module[{s}, s = (pm1[Power @@ # & /@ FactorInteger[4n]]^2 - 1)/8; For[i = 1, True, i++, If[s[[i]] > n, Return[ s[[i]]] ]]]; a[0] = 15; a[n_] := a[n] = nexttri[ a[n - 1]]; Table[ a[n], {n, 0, 8}]
%o A068513 (Python)
%o A068513 from itertools import islice
%o A068513 from sympy import sqrt_mod_iter
%o A068513 def A068513_gen(): # generator of terms
%o A068513     a = 120
%o A068513     while True:
%o A068513         yield a>>3
%o A068513         b = a+1
%o A068513         for d in sqrt_mod_iter(1,a):
%o A068513             if d==1 or d**2-1 == a:
%o A068513                 d += a
%o A068513             if d&1 and d < b:
%o A068513                 b = d
%o A068513         a = b**2-1
%o A068513 A068513_list = list(islice(A068513_gen(),10)) # _Chai Wah Wu_, May 05 2024
%Y A068513 Cf. A068776, A068142.
%K A068513 nonn,changed
%O A068513 0,1
%A A068513 _Robert G. Wilson v_, Mar 19 2002
