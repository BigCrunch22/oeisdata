%I A068854 #23 Mar 22 2024 12:33:33
%S A068854 1,4,9,16,25,36,49,64,81,100,225,361,400,529,676,729,841,900,1024,
%T A068854 2116,3025,4356,5041,6400,7056,8100,9025,10201,21025,30276,42025,
%U A068854 50176,61009,70225,81796,90000,101124,210681,302500,410881,501264,613089,702244,810000
%N A068854 a(1) = 1; a(n) is the smallest square > a(n-1) which differs from it at every digit.
%H A068854 David A. Corneth, <a href="/A068854/b068854.txt">Table of n, a(n) for n = 1..2200</a>
%H A068854 David A. Corneth, <a href="/A068854/a068854.gp.txt">PARI program</a>
%e A068854 225 is a term and the next few squares are 256, 289, 324, 361, 400, 441, ...; 361 is the smallest one which differs from 225 in all corresponding digit positions.
%o A068854 (PARI) \\ See PARI link
%o A068854 (Python)
%o A068854 from math import isqrt
%o A068854 from itertools import count, islice
%o A068854 def alldiff(s, t):
%o A068854     return all(s[-i]!=t[-i] for i in range(1, min(len(s), len(t))+1))
%o A068854 def diffgreater(n): # smallest number >n that differs from it in every digit
%o A068854     s = str(n)
%o A068854     f = str(int(s[0]) + 1)
%o A068854     return int(f + "".join(("0" if di != "0" else "1") for di in s[1:]))
%o A068854 def agen(): # generator of terms
%o A068854     an = 1
%o A068854     while True:
%o A068854         yield an
%o A068854         r, s = isqrt(diffgreater(an)), str(an)
%o A068854         while not alldiff(s, str(r*r)): r += 1
%o A068854         an = r*r
%o A068854 print(list(islice(agen(), 45))) # _Michael S. Branicky_, Mar 20 2024
%Y A068854 Cf. A000290, A068853.
%K A068854 base,nonn
%O A068854 1,2
%A A068854 _Amarnath Murthy_, Mar 12 2002
%E A068854 Name corrected by _Jon E. Schoenfield_, Oct 27 2023
%E A068854 a(9) onward corrected by _Sean A. Irvine_, Mar 18 2024
