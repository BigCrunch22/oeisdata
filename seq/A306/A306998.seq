%I A306998 #15 May 30 2023 18:25:20
%S A306998 2,9,10,16,22,25,26,27,28,35,36,40,51,52,56,57,58,66,70,78,82,86,87,
%T A306998 88,92,93,94,95,96,121,122,123,124,125,126,135,136,145,146,147,148,
%U A306998 162,171,172,177,178,187,188,189,190,209,210,215,216,217,218,219,220
%N A306998 List of low point records for pi(n)/n.
%C A306998 Let f(n) = pi(n)/n, where pi(n) is the prime-counting function (A000720). This sequence is the list of numbers n such that f(n) < f(k) for 2 <= k < n.
%C A306998 Because the primes generally become sparser forever, this list is infinite.
%H A306998 Amiram Eldar, <a href="/A306998/b306998.txt">Table of n, a(n) for n = 1..10000</a>
%e A306998 f(10) = 0.4, which is smaller than f(2), f(3), ... , f(9), so 10 is in the list.
%t A306998 s={}; rm=1; Do[r = PrimePi[n]/n; If[r<rm, rm=r; AppendTo[s,n]], {n,2,1000}]; s (* _Amiram Eldar_, Mar 19 2019 *)
%t A306998 DeleteDuplicates[Table[{n,PrimePi[n]/n},{n,2,250}],LessEqual[#1[[2]],#2[[2]]]&][[;;,1]] (* _Harvey P. Dale_, May 30 2023 *)
%o A306998 (Haskell)
%o A306998 -- Very poor Haskell code, but let it stand until someone contributes the
%o A306998 -- elegant three-liner that must exist. Its only merit is that it was actually
%o A306998 -- used to produce the data given.
%o A306998 isPrime :: Int -> Bool
%o A306998 isPrime = isPrime1 2
%o A306998 isPrime1 :: Int -> Int -> Bool
%o A306998 isPrime1 d n = n /= 1 && (d^2 > n || mod n d /= 0 && isPrime1 (d+1) n)
%o A306998 count :: (a -> Bool) -> [a] -> Int
%o A306998 count f [] = 0
%o A306998 count f (x:xs) = (if f x then 1 else 0) + count f xs
%o A306998 pdf :: Int -> Double
%o A306998 pdf n = fromIntegral (count isPrime [1..n]) / fromIntegral n
%o A306998 isRecord :: Int -> Bool
%o A306998 isRecord n = (n == 2) || (pdf n) < (minimum (map pdf [2..(n-1)]))
%o A306998 records :: [Int]
%o A306998 records = filter isRecord [2..100]
%Y A306998 Cf. A000720.
%K A306998 nonn,easy
%O A306998 1,1
%A A306998 _Allan C. Wechsler_, Mar 18 2019
%E A306998 More terms from _Amiram Eldar_, Mar 19 2019
