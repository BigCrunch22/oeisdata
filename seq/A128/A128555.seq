%I A128555 #19 Dec 08 2022 11:03:52
%S A128555 1,2,4,3,6,8,10,12,9,16,14,18,20,24,28,5,22,30,26,36,32,40,34,48,15,
%T A128555 44,52,42,38,56,46,54,60,64,68,27,50,72,76,80,58,88,62,66,78,84,70,90,
%U A128555 21,96,92,102,74,104,100,112,108,116,82,120,86,124,114,7,128,136,94,126
%N A128555 a(n) = the smallest positive multiple of d(n) that does not occur earlier in the sequence, where d(n) is the number of positive divisors of n.
%C A128555 This sequence is a permutation of the positive integers.
%C A128555 a(2^(p+1)) = p, where p is prime. - _Michael De Vlieger_, Dec 07 2022
%H A128555 Ivan Neretin, <a href="/A128555/b128555.txt">Table of n, a(n) for n = 1..10000</a>
%H A128555 Michael De Vlieger, <a href="/A128555/a128555.png">Log log scatterplot of a(n)</a>, n = 1..2^14, showing primes in red, composite prime powers (in A246547) in gold, squarefree composites (A120944) in green, numbers neither prime power nor squarefree (A126706) in blue, with numbers in A286708 in large light blue. Highlighted in light green are squarefree composites divisible by 6.
%e A128555 8 has 4 positive divisors. So a(8) is the smallest positive multiple of 4 that has yet to appear in the sequence. 4 and 8 occur among the first 7 terms of the sequence, but 12 does not. So a(8) = 12.
%p A128555 A128555 := proc(nmin) local a,n,d,k ; a := [1,2] ; while nops(a) < nmin do n := nops(a)+1 ; d := numtheory[tau](n) ; k := 1; while k*d in a do k := k+1 ; od; a := [op(a),k*d] ; od: RETURN(a) ; end: A128555(80) ; # _R. J. Mathar_, Oct 09 2007
%t A128555 a = {1}; Do[AppendTo[a, Min[Complement[Range[Max[a] + 1]*DivisorSigma[0,n], a]]], {n, 2, 68}]; a (* _Ivan Neretin_, May 03 2015 *)
%t A128555 nn = 120; c[_] = False; q[_] = 1; Do[d = DivisorSigma[0, n]; m = q[d]; While[c[m d], m++]; If[m == q[d], While[c[m d], m++]; q[d] = m]; Set[{a[n], c[m d]}, {m d, True}], {n, nn}]; Array[a, nn] (* _Michael De Vlieger_, Dec 07 2022 *)
%o A128555 (Python)
%o A128555 from itertools import count, islice
%o A128555 from sympy import divisor_count as d
%o A128555 def agen():
%o A128555     seen = set()
%o A128555     for n in count(1):
%o A128555         dn = d(n)
%o A128555         m = dn
%o A128555         while m in seen: m += dn
%o A128555         yield m
%o A128555         seen.add(m)
%o A128555 print(list(islice(agen(), 68))) # _Michael S. Branicky_, Dec 08 2022
%Y A128555 Cf. A000005, A128556, A358820 (inverse).
%K A128555 nonn
%O A128555 1,2
%A A128555 _Leroy Quet_, Mar 10 2007
%E A128555 More terms from _R. J. Mathar_, Oct 09 2007
