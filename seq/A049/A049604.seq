%I A049604 #33 May 20 2022 10:21:13
%S A049604 0,3,3,2,4,2,3,1,1,3,2,2,4,2,2,3,3,3,3,3,3,4,4,2,2,2,4,4,5,3,3,3,3,3,
%T A049604 3,5,4,4,4,4,4,4,4,4,4,5,5,5,3,3,3,3,5,5,5,6,6,4,4,4,4,4,4,4,6,6,7,5,
%U A049604 5,5,5,5,5,5,5,5,5,7,6,6,6,6,4,4,4,4,4,6,6,6,6,7,7,7,5,5,5,5,5,5,5,5,7,7,7
%N A049604 Array T read by diagonals: T(i,j)=least number of knight's moves on unbounded chessboard from corner (0,0) to square (i,j).
%H A049604 Alois P. Heinz, <a href="/A049604/b049604.txt">Antidiagonals n = 0..140, flattened</a>
%F A049604 From _Yu-Sheng Chang_, Jun 10 2020: (Start)
%F A049604 We separate the generating function, F(z,v), into four parts: Left, Middle, Right and Remaining.
%F A049604 First, changing some entries and these lost terms are the Remaining part, X(z,v): T(1,0)=T(0,1)=1, T(2,2)=0, T(3,4)=T(4,3)=0, so X(z,v) = 2*(1+v)*z+4*v*z^2+4*v^2*z^4+3*(1+v)*v^2*z^5.
%F A049604 Second, the left and right parts, L(z,v) and R(z,v), collect coefficients like:
%F A049604                0
%F A049604               1 1
%F A049604              2 - 2
%F A049604             3 1 1 3
%F A049604            2 2 - 2 2
%F A049604           3 3 - - 3 3
%F A049604          4 4 2 - 2 4 4
%F A049604         5 3 3 - - 3 3 5
%F A049604        4 4 4 - - - 4 4 4
%F A049604       5 5 5 3 - - 3 5 5 5
%F A049604      6 6 4 4 - - - 4 4 6 6
%F A049604     7 5 5 5 - - - - 5 5 5 7
%F A049604    6 6 6 6 4 - - - 4 6 6 6 6
%F A049604   7 7 7 5 5 - - - - 5 5 7 7 7
%F A049604 Then R(z,v) = Sum_{j>=0} ((v^2*z^3)^j*(Sum_{i>=0} (((2*i+j)*(v*z)^0+(2*i+j+1)*(v*z)^1+(2*i+j+2)*(v*z)^2+(2*i+j+3)*(v*z)^3)*(v*z)^(4*i)))) = v*z*(1+z*v+z^2*v+z^2*v^2-z^3*v^2-z^3*v^3-z^4*v^3-z^5*v^4)/((1+z*v)*(1+z^2*v^2)*(1-z*v)^2*(1-z^3*v^2)^2) and L(z,v) = R(v*z,1/v) since it's symmetric.
%F A049604 Third, the middle part, M(z,v) collects:
%F A049604                 -
%F A049604                - -
%F A049604               - - -
%F A049604              - - - -
%F A049604             - - - - -
%F A049604            - - - - - -
%F A049604           - - - 2 - - -
%F A049604          - - - 3 3 - - -
%F A049604         - - - 4 4 4 - - -
%F A049604        - - - - 3 3 - - - -
%F A049604       - - - - 4 4 4 - - - -
%F A049604      - - - - 5 5 5 5 - - - -
%F A049604     - - - - - 4 4 4 - - - - -
%F A049604    - - - - - 5 5 5 5 - - - - -
%F A049604   - - - - - 6 6 6 6 6 - - - - -
%F A049604 Then M(z,v) = Sum_{i=>0} (v^3*z^6*(v*z^3)^i*((i+2)*(1-v^(i+1))/(1-v)+(i+3)*(1-v^(i+2))*z/(1-v)+(i+4)*(1-v^(i+3))*z^2/(1-v))) = v^3*z^6*(2+3*z+3*z*v+4*z^2+4*z^2*v+4*z^2*v^2-z^3*v-z^3*v^2-2*z^4*v-8*z^4*v^2-3*z^5*v-2*z^4*v^3-11*z^5*v^2-11*z^5*v^3-3*z^5*v^4+4*z^7*v^3+4*z^7*v^4+6*z^8*v^3+10*z^8*v^4+6*z^8*v^5-2*z^10*v^5-3*z^11*v^5-3*z^11*v^6)/((1-z^3*v^2)^2*(1-z^3*v)^2).
%F A049604 Finally, F(z,v) = L(z,v) + M(z,v) + R(z,v) + X(z,v), so we have:
%F A049604 O.g.f.: F(z,v) = (2*v^10*z^20-2*v^9*(v+1)*z^19+4*v^9*z^18-2*v^8*(v+1)*z^17-2*v^6*(v^4-v^2+1)*z^16+2*v^5*(v+1)*(v^4-v^2+1)*z^15-2*v^5*(2*v^4-v^2+2)*z^14+v^4*(v+1)*(2*v^4+2*v^3-v^2+2*v+2)*z^13-v^4*(2*v^4+v^3-4*v^2+v+2)*z^12+v^3*(v+1)*(2*v^4-v^3-3*v^2-v+2)*z^11-v^3*(3*v^2-5*v+3)*(v+1)^2*z^10-v*(v+1)*(2*v^6+3*v^3+2)*z^9+v*(2*v^6-v^5+2*v^4+4*v^3+2*v^2-v+2)*z^8+v*(v+1)*(v^4+2*v^3-4*v^2+2*v+1)*z^7+(2*v^6+v^5+4*v^3+v+2)*z^6-(v+1)*(2*v^4-2*v^3+v^2-2*v+2)*z^5-(v^4+3*v^3+3*v+1)*z^4+(v+1)*(v^2-3*v+1)*z^3-(v+1)^2*z^2+3*(v+1)*z)/(v*z+1)/(z+1)/(v^2*z^2+1)/(z^2+1)/(v*z-1)^2/(z-1)^2/(v^2*z^3-1)/(v*z^3-1).
%F A049604 (End)
%e A049604 Array T begins:
%e A049604 0, 3, 2, 3, 2, 3, 4, 5, 4, 5, 6, ...
%e A049604 3, 4, 1, 2, 3, 4, 3, 4, 5, 6, 5, ...
%e A049604 2, 1, 4, 3, 2, 3, 4, 5, 4, 5, 6, ...
%e A049604 3, 2, 3, 2, 3, 4, 3, 4, 5, 6, 5, ...
%e A049604 2, 3, 2, 3, 4, 3, 4, 5, 4, 5, 6, ...
%e A049604 3, 4, 3, 4, 3, 4, 5, 4, 5, 6, 5, ...
%e A049604 4, 3, 4, 3, 4, 5, 4, 5, 6, 5, 6, ...
%e A049604 5, 4, 5, 4, 5, 4, 5, 6, 5, 6, 7, ...
%e A049604 4, 5, 4, 5, 4, 5, 6, 5, 6, 7, 6, ...
%e A049604 5, 6, 5, 6, 5, 6, 5, 6, 7, 6, 7, ...
%e A049604 6, 5, 6, 5, 6, 5, 6, 7, 6, 7, 8, ...
%p A049604 A := proc(n,k) option remember;
%p A049604     local x;
%p A049604     if k = 0 then
%p A049604         if n = 1 then
%p A049604             3
%p A049604         else
%p A049604             2*floor(n/4)+ `mod`(n, 4)
%p A049604         end if;
%p A049604     elif k = 1 then
%p A049604         x := n - k + 1;
%p A049604         if x = 1 then
%p A049604             3
%p A049604         elif x = 2 then
%p A049604             4
%p A049604         else
%p A049604             2*floor((n+1)*(1/4))-1 + `mod`(n+1, 4)
%p A049604         end if ;
%p A049604     elif n < 2*k then
%p A049604         A(n, n - k)
%p A049604     else ## n >= 2*k and n >= k >= 2
%p A049604         1 + min(A(n-3,k-2), A(n-3,k-1))
%p A049604     end if;
%p A049604 end proc: # _Yu-Sheng Chang_, Jun 10 2020
%t A049604 A[n_ /; n >= 0, k_ /; k >= 0] := A[n, k] = Module[{x}, Which[
%t A049604      k == 0, If[n == 1, 3, 2*Floor[n/4] + Mod[n, 4]],
%t A049604      k == 1, x = n - k + 1;
%t A049604      Which[x == 1, 3, x == 2, 4,
%t A049604      True, 2*Floor[(n + 1)*(1/4)] - 1 + Mod[n + 1, 4]], n < 2*k, A[n, n - k],
%t A049604      True, 1 + Min[A[n - 3, k - 2], A[n - 3, k - 1]]]];
%t A049604 A[_, _] = 0;
%t A049604 T[n_, k_] := A[n + k, k];
%t A049604 Table[T[n - k, k], {n, 0, 13}, {k, 0, n}] // Flatten
%t A049604 (* _Jean-FranÃ§ois Alcover_, May 20 2022, after _Yu-Sheng Chang_ *)
%K A049604 nonn,tabl,look
%O A049604 0,2
%A A049604 _Clark Kimberling_
