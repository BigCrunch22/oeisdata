%I A368590 #36 Jan 14 2024 13:29:25
%S A368590 728,1013,2813,3309,4323,4899,12438,21259,23113,31394,35719,37812,
%T A368590 38023,111894,143449,194053,418613,418614,487368,535309,2232593,
%U A368590 2452644,2490669,9226854,17367998,19637644,20341453,28553671,33406839,174398434,468936719,1468970139,2136314464
%N A368590 Numbers k such that all of k, k+1 and k+2 are the sums of consecutive squares.
%C A368590 418613 is the smallest k such that k through k + 3 are the sums of consecutive squares.
%C A368590 After an idea by _Allan C. Wechsler_.
%C A368590 a(30)-a(33) were calculated using the b-file at A368570.
%H A368590 Michael S. Branicky, <a href="/A368590/b368590.txt">Table of n, a(n) for n = 1..86</a> (terms 1..74 from Frank A. Stevenson)
%H A368590 David A. Corneth, <a href="/A368590/a368590.gp.txt">PARI program</a>
%e A368590 728 is in the sequence via 728 = 7^2 + 8^2 + 9^2 + 10^2 + 11^2 + 12^2 + 13^2, 729 = 27^2 and 730 = 10^2 + 11^2 + 12^2 + 13^2 + 14^2.
%o A368590 (PARI) \\ See PARI program
%o A368590 (Python)
%o A368590 import heapq
%o A368590 from itertools import islice
%o A368590 def agen(): # generator of terms
%o A368590     m = 1; h = [(m, 1, 1)]; nextcount = 2
%o A368590     v1 = v2 = -1
%o A368590     while True:
%o A368590         (v, s, l) = heapq.heappop(h)
%o A368590         if v != v1:
%o A368590             if v2 + 2 == v1 + 1 == v: yield v2
%o A368590             v2, v1 = v1, v
%o A368590         if v >= m:
%o A368590             m += nextcount*nextcount
%o A368590             heapq.heappush(h, (m, 1, nextcount))
%o A368590             nextcount += 1
%o A368590         v -= s*s; s += 1; l += 1; v += l*l
%o A368590         heapq.heappush(h, (v, s, l))
%o A368590 print(list(islice(agen(), 33))) # _Michael S. Branicky_, Jan 01 2024
%Y A368590 Subsequence of A034705 and of A368570.
%K A368590 nonn
%O A368590 1,1
%A A368590 _David A. Corneth_, Dec 31 2023
