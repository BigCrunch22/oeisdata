%I A333410 #40 Feb 08 2024 10:44:47
%S A333410 1,6,10,11,3,16,21,23,22,31,100,26,87,51,41,73,69,66,63,36,58,101,97,
%T A333410 52,5,102,103,46,79,61,107,76,192,151,81,38,201,89,164,35,59,34,173,
%U A333410 126,99,184,74,135,153,7,167,176,29,251,121,28,168,148,27,56,92,123,137,57,141,207,25,113
%N A333410 a(n) is the smallest positive integer not yet appearing in the sequence such that n*a(n) contains n as a substring.
%H A333410 Scott R. Shannon, <a href="/A333410/b333410.txt">Table of n, a(n) for n = 1..10000</a>
%H A333410 RÃ©my Sigrist, <a href="/A333410/a333410.gp.txt">PARI program for A333410</a>
%e A333410 a(2) = 6 as 6 has not appeared previously and 2 * 6 = 12 which contains '2' as a substring.
%e A333410 a(6) = 16 as 16 has not appeared previously and 6 * 16 = 96 which contains '6' as a substring.
%e A333410 a(7) = 21 as 21 has not appeared previously and 7 * 21 = 147 which contains '7' as a substring.
%o A333410 (PARI) See Links section.
%o A333410 (Python)
%o A333410 from itertools import count, islice
%o A333410 def agen(): # generator of terms
%o A333410     s, mink, aset, concat = 1, 2, {1}, "1"
%o A333410     yield from [1]
%o A333410     for n in count(2):
%o A333410         an, sn = mink, str(n)
%o A333410         while an in aset or not sn in str(n*an): an += 1
%o A333410         aset.add(an); s += an; concat += str(an); yield an
%o A333410         while mink in aset: mink += 1
%o A333410 print(list(islice(agen(), 68))) # _Michael S. Branicky_, Feb 08 2024
%Y A333410 Cf. A086064, A333774, A333775, A333811, A332795, A332703.
%K A333410 nonn,base,changed
%O A333410 1,2
%A A333410 _Scott R. Shannon_, Apr 11 2020
