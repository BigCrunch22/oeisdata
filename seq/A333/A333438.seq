%I A333438 #32 Jun 29 2023 13:21:20
%S A333438 4,16,196,8224,1064540,424745876,527417814424,2026136052712752,
%T A333438 23910840138416191440,864203211903812503254788,
%U A333438 95556814333495667660116008300,32299777937527326896385272155961508,33351573725052992639783414388307775101504,105136332761744656894957880833209728891149151420
%N A333438 Number of self-avoiding walks of any length from NW corner to its adjacent points on an n X n grid or lattice.
%H A333438 Ed Wynn, <a href="/A333438/b333438.txt">Table of n, a(n) for n = 2..19</a>
%e A333438 a(2) = 4;
%e A333438    S--E   S  E
%e A333438           |  |
%e A333438           *--*
%e A333438    S      S--*
%e A333438    |         |
%e A333438    E      E--*
%e A333438 a(3) = 16;
%e A333438    S--E      S  E      S  E--*   S  E--*
%e A333438              |  |      |     |   |     |
%e A333438              *--*      *--*--*   *     *
%e A333438                                  |     |
%e A333438                                  *--*--*
%e A333438    S  E      S  E--*   S  E--*   S  E
%e A333438    |  |      |     |   |     |   |  |
%e A333438    *  *      *  *--*   *--*  *   *  *--*
%e A333438    |  |      |  |         |  |   |     |
%e A333438    *--*      *--*         *--*   *--*--*
%e A333438    S         S--*      S--*      S--*--*
%e A333438    |            |         |            |
%e A333438    E         E--*      E  *      E     *
%e A333438                        |  |      |     |
%e A333438                        *--*      *--*--*
%e A333438    S--*--*   S--*--*   S--*      S--*--*
%e A333438          |         |      |            |
%e A333438    E--*--*   E  *--*   E  *--*   E--*  *
%e A333438              |  |      |     |      |  |
%e A333438              *--*      *--*--*      *--*
%o A333438 (Python)
%o A333438 # Using graphillion
%o A333438 from graphillion import GraphSet
%o A333438 import graphillion.tutorial as tl
%o A333438 def A333438(n):
%o A333438     universe = tl.grid(n - 1, n - 1)
%o A333438     GraphSet.set_universe(universe)
%o A333438     start, goal = 1, 2
%o A333438     paths = GraphSet.paths(start, goal)
%o A333438     return paths.len() * 2
%o A333438 print([A333438(n) for n in range(2, 10)])
%Y A333438 Cf. A271507, A333439.
%K A333438 nonn
%O A333438 2,1
%A A333438 _Seiichi Manyama_, Mar 21 2020
%E A333438 a(11) and a(13) from _Seiichi Manyama_
%E A333438 More terms from _Ed Wynn_, Jun 29 2023
