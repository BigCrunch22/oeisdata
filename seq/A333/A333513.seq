%I A333513 #27 Nov 28 2022 10:21:59
%S A333513 1,1,1,1,1,1,1,3,3,1,1,7,11,7,1,1,17,49,49,17,1,1,41,229,373,229,41,1,
%T A333513 1,99,1081,3105,3105,1081,99,1,1,239,5123,26515,44930,26515,5123,239,
%U A333513 1,1,577,24323,227441,674292,674292,227441,24323,577,1
%N A333513 Square array T(n,k), n >= 2, k >= 2, read by antidiagonals, where T(n,k) is the number of self-avoiding closed paths on an n X k grid which pass through four corners ((0,0), (0,k-1), (n-1,k-1), (n-1,0)).
%H A333513 Seiichi Manyama, <a href="/A333513/b333513.txt">Antidiagonals n = 2..15, flattened</a>
%F A333513 T(n,k) = T(k,n).
%e A333513 Square array T(n,k) begins:
%e A333513   1,  1,    1,     1,      1,        1, ...
%e A333513   1,  1,    3,     7,     17,       41, ...
%e A333513   1,  3,   11,    49,    229,     1081, ...
%e A333513   1,  7,   49,   373,   3105,    26515, ...
%e A333513   1, 17,  229,  3105,  44930,   674292, ...
%e A333513   1, 41, 1081, 26515, 674292, 17720400, ...
%o A333513 (Python)
%o A333513 # Using graphillion
%o A333513 from graphillion import GraphSet
%o A333513 import graphillion.tutorial as tl
%o A333513 def A333513(n, k):
%o A333513     universe = tl.grid(n - 1, k - 1)
%o A333513     GraphSet.set_universe(universe)
%o A333513     cycles = GraphSet.cycles()
%o A333513     for i in [1, k, k * (n - 1) + 1, k * n]:
%o A333513         cycles = cycles.including(i)
%o A333513     return cycles.len()
%o A333513 print([A333513(j + 2, i - j + 2) for i in range(11 - 1) for j in range(i + 1)])
%Y A333513 Column k=2-7 give: A000012, A001333(n-2), A333514, A333515, A358712, A358713.
%Y A333513 Main diagonal gives A333466.
%Y A333513 Cf. A333758.
%K A333513 nonn,tabl
%O A333513 2,8
%A A333513 _Seiichi Manyama_, Mar 25 2020
