%I A333305 #17 May 26 2020 16:50:43
%S A333305 1,1,1,1,1,1,1,1,1,2,1,3,1,1,1,1,3,3,1,4,3,5,1,6,1,1,1,1,4,6,4,1,5,10,
%T A333305 9,8,7,1,10,15,9,1,10,1,1,1,1,5,10,10,5,1,6,15,14,10,35,16,15,9,1,15,
%U A333305 60,19,15,33,12,1,20,45,14,1,15,1,1
%N A333305 Irregular array read by rows, a refinement of A256894.
%H A333305 Peter Luschny, <a href="https://oeis.org/wiki/User:Peter_Luschny/BellTransform">The Bell transform</a>
%e A333305 Irregular table (the refinement is indicated by round brackets) starts:
%e A333305 [0] [1]
%e A333305 [1] [1, 1]
%e A333305 [2] [1, (1, 1), 1]
%e A333305 [3] [1, (1, 2, 1), (3, 1), 1]
%e A333305 [4] [1, (1, 3, 3, 1), (4, 3, 5, 1), (6, 1), 1]
%e A333305 [5] [1, (1, 4, 6, 4, 1), (5, 10, 9, 8, 7, 1), (10, 15, 9, 1), (10, 1), 1]
%e A333305 [6] [1, (1, 5, 10, 10, 5, 1), (6, 15, 14, 10, 35, 16, 15, 9, 1), (15, 60, 19, 15,
%e A333305      33, 12, 1), (20, 45, 14, 1), (15, 1), 1]
%o A333305 (SageMath)
%o A333305 def BellBlocks(n):
%o A333305     R = InfinitePolynomialRing(ZZ, 'v') # Thanks to _F. Chapoton_.
%o A333305     V = R.gen()
%o A333305     @cached_function
%o A333305     def T(n, k):
%o A333305         if k == 0: return V[0]^n
%o A333305         return sum(binomial(n-1, j-1)*V[j]*T(n-j, k-1) for j in (0..n-k+1))
%o A333305     P = (T(n, k) for k in (0..n))
%o A333305     return flatten([p.coefficients() for p in P])
%o A333305 for n in (0..8): print(BellBlocks(n))
%Y A333305 Cf. A000070 (length of rows), A102356 (max in rows), A186021 (sum of rows).
%Y A333305 Cf. A256894.
%K A333305 nonn,tabf
%O A333305 0,10
%A A333305 _Peter Luschny_, May 19 2020
