%I A333447 #41 Nov 21 2023 08:31:14
%S A333447 2,12,228,62052,4180832868,18201642257939067492,
%T A333447 338021701687178649306251838479209230948,
%U A333447 115407456979036362321626052309736660160730393295399201179594209600531491615332
%N A333447 a(n) is the integer corresponding to a bit-string representation of the von Neumann ordinal representation of n, with largest sets listed first, and with '{' represented by the bit 1, '}' represented by the bit zero, and ignoring commas.
%C A333447 Since the von Neumann ordinals begin with 0={}, it seems appropriate to have an offset of 0.
%C A333447 The sequence grows super-exponentially.
%C A333447 Similar to A092124, except that A092124 reverses the order of the elements in the ordinal.
%C A333447 The binary expansion of a(n-1) has length 2^n and consists of n 1's followed by the leading terms of A308187. - _Andrey Zabolotskiy_, Mar 21 2020
%H A333447 Kit Scriven, <a href="/A333447/b333447.txt">Table of n, a(n) for n = 0..10</a>
%H A333447 Johann von Neumann, <a href="http://acta.bibl.u-szeged.hu/13294/1/math_001_199-208.pdf">Zur Einf√ºhrung der transfiniten Zahlen</a>, Acta Litterarum AC Scientiarum Ragiae Universitatis Hungaricae Francisco-Josephinae, 1 (1923), 199-208.
%F A333447 a(0) = 2, a(n) = 2^(2^(n+1)-1) - 2^(2^(n)-1) + a(n-1)*(2^(2^(n)-1) + 1).
%e A333447 A table demonstrating the von Neumann ordinals of the first three integers, their corresponding bit strings, and their sequence values is as follows:
%e A333447   n   set notation       bit string         a(n)
%e A333447   0   {}                 10                 2
%e A333447   1   {{}}               1100               12
%e A333447   2   {{{}}{}}           11100100           228
%e A333447   3   {{{{}}{}}{{}}{}}   1111001001100100   62052
%t A333447 With[{nmax=8},Map[FromDigits[#,2]&,NestList["1"<>#<>StringTake[#,{2,-2}]<>"0"&,"10",nmax]]] (* _Paolo Xausa_, Nov 21 2023 *)
%o A333447 (Python)
%o A333447 def fBinDigit(n):
%o A333447     return 2**(2**(n+1) - 1)
%o A333447 def a333447(n):
%o A333447     if n==0:
%o A333447         return 2
%o A333447     else:
%o A333447         prevAsEle = a333447(n-1) * fBinDigit(n-1)
%o A333447         restOfEle = a333447(n-1) - fBinDigit(n-1)
%o A333447         return fBinDigit(n)+prevAsEle+restOfEle
%Y A333447 Cf. A079559, A092124, A308187.
%K A333447 nonn,base,changed
%O A333447 0,1
%A A333447 _Kit Scriven_, Mar 21 2020
