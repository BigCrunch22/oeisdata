%I A333759 #17 Apr 07 2020 10:38:14
%S A333759 1,1,11,191,11346,2002405,1112939654,1878223479450
%N A333759 Number of self-avoiding closed paths in the n X n grid graph which pass through all vertices on four (left, right, upper, lower) sides of the graph.
%C A333759 a(11) = 152567999801505122456.
%e A333759 a(2) = 1;
%e A333759    +--+
%e A333759    |  |
%e A333759    +--+
%e A333759 a(3) = 1;
%e A333759    +--+--+
%e A333759    |     |
%e A333759    +     +
%e A333759    |     |
%e A333759    +--+--+
%e A333759 a(4) = 11;
%e A333759    +--+--+--+   +--+--+--+   +--+--+--+
%e A333759    |        |   |        |   |        |
%e A333759    +--*--*  +   +--*  *--+   +--*     +
%e A333759          |  |      |  |         |     |
%e A333759    +--*--*  +   +--*  *--+   +--*     +
%e A333759    |        |   |        |   |        |
%e A333759    +--+--+--+   +--+--+--+   +--+--+--+
%e A333759    +--+--+--+   +--+--+--+   +--+--+--+
%e A333759    |        |   |        |   |        |
%e A333759    +  *--*--+   +  *--*  +   +     *--+
%e A333759    |  |         |  |  |  |   |     |
%e A333759    +  *--*--+   +  *  *  +   +     *--+
%e A333759    |        |   |  |  |  |   |        |
%e A333759    +--+--+--+   +--+  +--+   +--+--+--+
%e A333759    +--+--+--+   +--+--+--+   +--+  +--+
%e A333759    |        |   |        |   |  |  |  |
%e A333759    +        +   +        +   +  *--*  +
%e A333759    |        |   |        |   |        |
%e A333759    +  *--*  +   +        +   +  *--*  +
%e A333759    |  |  |  |   |        |   |  |  |  |
%e A333759    +--+  +--+   +--+--+--+   +--+  +--+
%e A333759    +--+  +--+   +--+  +--+
%e A333759    |  |  |  |   |  |  |  |
%e A333759    +  *--*  +   +  *  *  +
%e A333759    |        |   |  |  |  |
%e A333759    +        +   +  *--*  +
%e A333759    |        |   |        |
%e A333759    +--+--+--+   +--+--+--+
%o A333759 (Python)
%o A333759 # Using graphillion
%o A333759 from graphillion import GraphSet
%o A333759 import graphillion.tutorial as tl
%o A333759 def A333759(n):
%o A333759     universe = tl.grid(n - 1, n - 1)
%o A333759     GraphSet.set_universe(universe)
%o A333759     cycles = GraphSet.cycles()
%o A333759     points = [i for i in range(1, n * n + 1) if i % n < 2 or ((i - 1) // n + 1) % n < 2]
%o A333759     for i in points:
%o A333759         cycles = cycles.including(i)
%o A333759     return cycles.len()
%o A333759 print([A333759(n) for n in range(2, 10)])
%Y A333759 Main diagonal of A333758.
%Y A333759 Cf. A333466.
%K A333759 nonn,more
%O A333759 2,3
%A A333759 _Seiichi Manyama_, Apr 04 2020
