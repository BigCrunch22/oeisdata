%I A333686 #31 Apr 02 2020 14:06:07
%S A333686 1,10,101,1105,12046,131399,1433341,15635350,170555501,1860475165,
%T A333686 20294671306,221380909199,2414895329881,26342467719490,
%U A333686 287352249584501,3134532277710025,34192502805225766,372982998579773399,4068620481572281621,44381842298715324430,484131644804296287101
%N A333686 Number of self-avoiding paths in (2*n+1) X 3 grid starting the upper left corner, passing through the center of grid and finishing the lower right corner.
%H A333686 Seiichi Manyama, <a href="/A333686/b333686.txt">Table of n, a(n) for n = 0..500</a>
%F A333686 Conjecture: G.f.: (1-3*x-x^2)*(1+3*x+x^2+x^3)/((1-x)*(1+x)*(1+x+x^2)*(1-11*x+x^2)).
%F A333686 Conjecture: a(n) = 10*a(n-1) + 10*a(n-2) - 10*a(n-4) - 10*a(n-5) + a(n-6) for n>5.
%e A333686 a(0) = 1;
%e A333686    S--+--E
%e A333686 a(1) = 10;
%e A333686    S--*--*   S--*--*   S--*      S--*      S--*
%e A333686          |         |      |         |         |
%e A333686       +--*   *--+--*      +--*      +      *--+
%e A333686       |      |               |      |      |
%e A333686       *--E   *--*--E         E      *--E   *--*--E
%e A333686    S  *--*   S  *--*   S         S         S
%e A333686    |  |  |   |  |  |   |         |         |
%e A333686    *  +  *   *--+  *   *  +--*   *--+--*   *--+
%e A333686    |  |  |         |   |  |  |         |      |
%e A333686    *--*  E         E   *--*  E         E      *--E
%e A333686 a(2) = 101;
%e A333686    S--*--*   S--*--*   S--*--*   S--*--*   S--*--*
%e A333686          |         |         |         |         |
%e A333686    *--*--*   *--*--*   *--*--*   *--*--*   *--*--*
%e A333686    |         |         |         |         |
%e A333686    *--+--*   *--+      *--+      *--+      *  +--*
%e A333686          |      |         |         |      |  |  |
%e A333686          *   *--*         *--*      *      *--*  *
%e A333686          |   |               |      |            |
%e A333686          E   *--*--E         E      *--E         E
%e A333686    ... and so on.
%o A333686 (Python)
%o A333686 # Using graphillion
%o A333686 from graphillion import GraphSet
%o A333686 import graphillion.tutorial as tl
%o A333686 def A333685(n, k):
%o A333686     if n == 0 or k == 0: return 1
%o A333686     universe = tl.grid(2 * n, 2 * k)
%o A333686     GraphSet.set_universe(universe)
%o A333686     start, goal = 1, (2 * n + 1) * (2 * k + 1)
%o A333686     paths = GraphSet.paths(start, goal).including((start + goal) // 2)
%o A333686     return paths.len()
%o A333686 def A333686(n):
%o A333686     return A333685(n, 1)
%o A333686 print([A333686(n) for n in range(20)])
%Y A333686 Column 1 of A333685.
%K A333686 nonn
%O A333686 0,2
%A A333686 _Seiichi Manyama_, Apr 02 2020
