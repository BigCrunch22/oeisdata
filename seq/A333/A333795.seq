%I A333795 #20 Apr 07 2020 10:38:26
%S A333795 1,0,6,68,6102,1404416,1094802826,2524252113468
%N A333795 Number of self-avoiding closed paths on an n X n grid which pass through all points on the two diagonals of the grid.
%C A333795 a(11) = 407977071391342237828.
%e A333795 a(2) = 1;
%e A333795    +--+
%e A333795    |  |
%e A333795    +--+
%e A333795 a(4) = 6;
%e A333795    +--*--*--+   +--*--*--+   +--*--*--+
%e A333795    |        |   |        |   |        |
%e A333795    *--+--+  *   *--+  +--*   *  +--+--*
%e A333795          |  |      |  |      |  |
%e A333795    *--+--+  *   *--+  +--*   *  +--+--*
%e A333795    |        |   |        |   |        |
%e A333795    +--*--*--+   +--*--*--+   +--*--*--+
%e A333795    +--*--*--+   +--*  *--+   +--*  *--+
%e A333795    |        |   |  |  |  |   |  |  |  |
%e A333795    *  +--+  *   *  +--+  *   *  +  +  *
%e A333795    |  |  |  |   |        |   |  |  |  |
%e A333795    *  +  +  *   *  +--+  *   *  +--+  *
%e A333795    |  |  |  |   |  |  |  |   |        |
%e A333795    +--*  *--+   +--*  *--+   +--*--*--+
%o A333795 (Python)
%o A333795 # Using graphillion
%o A333795 from graphillion import GraphSet
%o A333795 import graphillion.tutorial as tl
%o A333795 def A333795(n):
%o A333795     universe = tl.grid(n - 1, n - 1)
%o A333795     GraphSet.set_universe(universe)
%o A333795     cycles = GraphSet.cycles()
%o A333795     points = [i + 1 for i in range(n * n) if i % n - i // n == 0 or i % n + i // n == n - 1]
%o A333795     for i in points:
%o A333795         cycles = cycles.including(i)
%o A333795     return cycles.len()
%o A333795 print([A333795(n) for n in range(2, 10)])
%Y A333795 Cf. A333455, A333464, A333466, A333796.
%K A333795 nonn,more
%O A333795 2,3
%A A333795 _Seiichi Manyama_, Apr 05 2020
