%I A333685 #23 Apr 03 2020 01:31:17
%S A333685 1,1,10,1,101,7056,1,1105,610765,462755440,1,12046,53968755,
%T A333685 365962179700,2593165016903538,1,131399,4775133828,294346514811753,
%U A333685 18855848354902159112,1243982213040307428318660
%N A333685 Triangle T(n,k), n>=0, 0 <= k <= n, read by rows, where T(n,k) is the number of self-avoiding paths in (2*n+1) X (2*k+1) grid starting the upper left corner, passing through the center of grid and finishing the lower right corner.
%F A333685 T(n,k) = T(k,n).
%e A333685 Triangle starts:
%e A333685 ====================================================================
%e A333685 n\k| 0        1             2                   3                 4
%e A333685 ---|----------------------------------------------------------------
%e A333685 0  | 1;
%e A333685 1  | 1,      10;
%e A333685 2  | 1,     101,         7056;
%e A333685 3  | 1,    1105,       610765,          462755440;
%e A333685 4  | 1,   12046,     53968755,       365962179700, 2593165016903538;
%e A333685 5  | 1,  131399,   4775133828,    294346514811753, ...
%e A333685 6  | 1, 1433341, 422813081886, 237970057189444731, ...
%o A333685 (Python)
%o A333685 # Using graphillion
%o A333685 from graphillion import GraphSet
%o A333685 import graphillion.tutorial as tl
%o A333685 def A333685(n, k):
%o A333685     if n == 0 or k == 0: return 1
%o A333685     universe = tl.grid(2 * n, 2 * k)
%o A333685     GraphSet.set_universe(universe)
%o A333685     start, goal = 1, (2 * n + 1) * (2 * k + 1)
%o A333685     paths = GraphSet.paths(start, goal).including((start + goal) // 2)
%o A333685     return paths.len()
%o A333685 print([A333685(n, k) for n in range(6) for k in range(n + 1)])
%Y A333685 Columns k=0..2 give A000012, A333686, A333689.
%Y A333685 T(n,n) gives A121787.
%K A333685 nonn,tabl
%O A333685 0,3
%A A333685 _Seiichi Manyama_, Apr 02 2020
