%I A316589 #21 Sep 07 2018 03:41:31
%S A316589 149,173,307,373,439,443,541,557,563,617,827,863,1297,1303,1373,1453,
%T A316589 1489,1627,1657,1667,1733,1783,1861,1901,2029,2053,2393,2423,2591,
%U A316589 2609,2647,2657,2677,2767,3037,3067,3253,3319,3343,3361,3433,3461,3467,3517,3659
%N A316589 Prime numbers p whose number of steps to reach 1 in Collatz (3x+1) problem is a prime number k and, in addition, the least prime number greater than p that also reaches 1 in the same problem in a prime number of steps also does so in k steps.
%e A316589 149 belongs to this sequence as it is prime, it satisfies the Collatz conjecture in 23 (that is prime) steps; no other prime number greater than 149 and less than 163 satisfies the conjecture in a prime number of steps (151 does it in 15 steps; 157 in 36 steps); and the prime number 163 also satisfies it in 23 steps, just as 149 does.
%o A316589 (Python)
%o A316589 def length_collatz_chain(start):
%o A316589     i=0
%o A316589     while start != 1:
%o A316589         if (start % 2 == 0):
%o A316589             start = start / 2
%o A316589         else:
%o A316589             start = 3 * start + 1
%o A316589         i = i+1
%o A316589     return i
%o A316589 def is_prime(num):
%o A316589     if num == 1: return(0)
%o A316589     for k in range(2, num):
%o A316589        if (num % k) == 0:
%o A316589            return(0)
%o A316589     return(1)
%o A316589 collatz = []
%o A316589 nmax=10000
%o A316589 for i in range(nmax):
%o A316589     collatz.append(0)
%o A316589 collatz.append(0)
%o A316589 for i in range(nmax):
%o A316589     start=i+1
%o A316589     collatz[start]=length_collatz_chain(start)
%o A316589 lista_elem=[]
%o A316589 elem=[]
%o A316589 for i in range(1,nmax):
%o A316589     if is_prime(collatz[i]) and is_prime(i):
%o A316589         elem.append(i)
%o A316589         elem.append(collatz[i])
%o A316589         lista_elem.append(elem)
%o A316589         elem=[]
%o A316589 result=""
%o A316589 for i in range(len(lista_elem)-1):
%o A316589     if lista_elem[i][1]==lista_elem[i+1][1]:
%o A316589         result=result+str(lista_elem[i][0])+","
%o A316589 print(result)
%o A316589 (PARI) nbs(n) = my(s); while(n>1, n=if(n%2, 3*n+1, n/2); s++); s; \\ A006577
%o A316589 lista(nn) = {vp = primes(nn); vs = select(x->isprime(nbs(x)), vp, 1); vpok = vector(#vs, k, prime(vs[k])); vpoks = vector(#vpok, k, nbs(vpok[k])); for (i=1, #vpoks-1, if (vpoks[i] == vpoks[i+1], print1(vpok[i], ", ")););} \\ _Michel Marcus_, Jul 27 2018
%Y A316589 Cf. A006577.
%Y A316589 Subsequence of A176112.
%K A316589 nonn
%O A316589 1,1
%A A316589 _Pierandrea Formusa_, Jul 07 2018
