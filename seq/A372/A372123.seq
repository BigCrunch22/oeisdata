%I A372123 #21 Jul 03 2024 19:55:00
%S A372123 1,2,1,1,0,0,0,1,0,0,2,2,3,2,0,1,0,1,1,1,1,1,2,2,2,1,1,1,2,2,3,1,2,1,
%T A372123 2,1,2,1,1,2,2,1,1,2,2,2,2,2,2,0,1,1,2,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,
%U A372123 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2
%N A372123 Number of fixed points when the integers 1..n are alphabetized by their American English names.
%C A372123 Inspired by Philip Cohen's solution to "Alphabetizing the Integers" in (Eckler, p. 20).
%C A372123 When alphabetizing, the space is assumed to precede any letter, so EIGHT HUNDRED comes before EIGHTEEN.
%H A372123 Michael S. Branicky, <a href="/A372123/b372123.txt">Table of n, a(n) for n = 1..10000</a>
%H A372123 A. Ross Eckler, <a href="https://digitalcommons.butler.edu/cgi/viewcontent.cgi?article=2556&amp;context=wordways">Alphabetizing the Integers (Word Ways, 1981, Vol. 14, No. 1, pp. 18-20)</a>.
%H A372123 Hans Havermann and Michael S. Branicky, <a href="/A372123/a372123.txt">n, Set of Fixed Points for n = 1..10000</a>.
%e A372123 For n = 2, the names in alphabetical order are ONE, TWO, and both are in their position, so a(2) = 2.
%e A372123 For n = 4, the names in alphabetical order are FOUR, ONE, THREE, TWO, and only THREE is in its position, so a(4) = 1.
%o A372123 (Python)
%o A372123 from num2words import num2words
%o A372123 from itertools import count, islice
%o A372123 def n2w(n): return num2words(n).replace(" and", "")
%o A372123 def agen(): # generator of terms
%o A372123     names = []
%o A372123     for n in count(1):
%o A372123         names.append((n2w(n), n-1))
%o A372123         names = sorted(names)
%o A372123         fixed = [j+1 for j in range(n) if names[j][1] == j]
%o A372123         yield len(fixed) # use "yield fixed" for list of fixed points
%o A372123 print(list(islice(agen(), 87)))
%Y A372123 Cf. A005589, A004740.
%K A372123 nonn,word,new
%O A372123 1,2
%A A372123 _Claudio Meller_, _Hans Havermann_ and _Michael S. Branicky_, Jul 03 2024
