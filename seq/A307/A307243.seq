%I A307243 #21 Apr 13 2019 22:12:46
%S A307243 1,0,1,1,1,0,0,1,1,1,1,0,1,1,0,1,0,1,0,0,1,1,1,1,1,0,0,1,1,1,0,1,1,1,
%T A307243 0,1,1,1,0,1,0,1,1,0,0,1,1,1,1,1,1,0,1,0,1,1,0,0,1,0,1,1,1,1,0,0,1,0,
%U A307243 1,0,0,1,1,1,0,0,1,1,1,1,0,1,1,1,0,1,1,1,1,0,1,1,0,1,0,1,0,0,1,1,1,1,1,1,1,0,0,1,1,0
%N A307243 An irregular fractal binary sequence embedding three copies of itself. See comments for precise definition.
%C A307243 The sequence has the following property: if a(n) = 0, underline a(n+1); if a(n) = 1, underline a(n+2). The terms underlined twice are the original sequence (copy #1), the terms underlined once are also (copy #2) and the non-underlined also (copy #3).
%C A307243 From _Lars Blomberg_: (Start)
%C A307243 I think this idea can be generalized:
%C A307243 Select some k >= 1, for example 2.
%C A307243 Initialize S = (k)(k-1)...0, for example S=210, and evaluate the underlining: the underlined amount is shown after '.', S=210.3
%C A307243 Initialize the "fetch pointers", f0=k, f1...fk=0 (using 0-based indexing);
%C A307243 Let p be the pointer to the next term to be evaluated, start with p=k=2;
%C A307243 The term indexed by p is shown in [], and the values of f0...fk are shown in ();
%C A307243 So for 210.[3]-(200), the underlined count is 3 - we should take the value from f2 which is 2, and calculate its underlining:
%C A307243 2102.[0]01-(201). Next is 0 so we take from f0:
%C A307243 21020.[1]1-(301) and so on.
%C A307243 Note that before «.» are the terms, and after «.» are the underlined, so a single array will suffice to store everything.
%C A307243 For k=2, I get:
%C A307243 2 1 0 2 2 2 2 1 0 1 2 2 2 2 2 2 1 0 0 1 1 2 2 0 2 2 1 2 1 2 0 2 2 2 1 0 2 2 2 0 2 1 2 2 2 1 2 2 1 2 2 0 1 0 0 2 0 2 1 1 1 2 1 1 2 2 2 0 2 2 2 2 2 1 0 2 0 2 2 2 2 0 2 2 2 1 2 2 1 2 2 2 2 1 2 2 1 2 1 2 0 1 2 2 0 0 1 2 0 1 0 1 2 0 2 0 2 1 2 2 1 1 2 1 0 2 2 2 2 1 1 0 2 2 0 2 2 2 2 2 0 1 2 2 1 2 2 2 2 2 1 0 2 2 2 2 0 1 2 2 1 2 2 2 2
%C A307243 And for k=3:
%C A307243 3 2 1 0 3 3 3 3 3 2 1 0 2 3 3 3 2 3 3 3 1 3 2 3 0 3 2 2 3 1 1 0 2 3 3 2 2 3 0 3 3 3 3 3 2 3 3 3 3 3 1 3 3 2 1 3 1 3 0 3 2 3 3 3 0 2 2 2 3 1 1 0 0 2 3 2 3 2 1 3 3 1 1 0 3 0 3 2 2 3 2 2 3 3 3 2 0 3 3 2 3 3 2 0 3 3 3 3 3 3 3 3 2 3 3 3 3 3 3 3 1 3 1 3 2 1 3 3 3 2 3 1 3 3 0 3 2 3 3 2 3 3 3 3 3 0 0 3 2 3 3 2 1 2 3 3 2 3 3 2 2 1 3 1 1
%C A307243 (End)
%H A307243 Lars Blomberg, <a href="/A307243/b307243.txt">Table of n, a(n) for n = 1..1000</a>
%e A307243 The sequence starts with 1,0,1,1,1,0,0,1,1,1,1,0,1,1,0,1,...
%e A307243 Instead of underlining them, we will put () around the terms we want to emphasize.
%e A307243 a(1) = 1 produces parentheses around a(3):
%e A307243 1,0,(1),1,1,0,0,1,1,1,1,0,1,1,0,1,...
%e A307243 a(2) = 0 produces parentheses around a(3) again:
%e A307243 1,0,((1)),1,1,0,0,1,1,1,1,0,1,1,0,1,...
%e A307243 a(3) = 1 produces parentheses around a(5):
%e A307243 1,0,((1)),1,(1),0,0,1,1,1,1,0,1,1,0,1,...
%e A307243 a(4) = 1 produces parentheses around a(6):
%e A307243 1,0,((1)),1,(1),(0),0,1,1,1,1,0,1,1,0,1,...
%e A307243 a(5) = 1 produces parentheses around a(7):
%e A307243 1,0,((1)),1,(1),(0),(0),1,1,1,1,0,1,1,0,1,...
%e A307243 a(6) = 0 produces parentheses around a(7) again:
%e A307243 1,0,((1)),1,(1),(0),((0)),1,1,1,1,0,1,1,0,1,...
%e A307243 a(7) = 0 produces parentheses around a(8):
%e A307243 1,0,((1)),1,(1),(0),((0)),(1),1,1,1,0,1,1,0,1,...
%e A307243 a(8) = 1 produces parentheses around a(10):
%e A307243 1,0,((1)),1,(1),(0),((0)),(1),1,(1),1,0,1,1,0,1,...
%e A307243 a(9) = 1 produces parentheses around a(11):
%e A307243 1,0,((1)),1,(1),(0),((0)),(1),1,(1),(1),0,1,1,0,1,...
%e A307243 a(10) = 1 produces parentheses around a(12):
%e A307243 1,0,((1)),1,(1),(0),((0)),(1),1,(1),(1),(0),1,1,0,1,...
%e A307243 a(11) = 1 produces parentheses around a(13):
%e A307243 1,0,((1)),1,(1),(0),((0)),(1),1,(1),(1),(0),(1),1,0,1,...
%e A307243 a(12) = 0 produces parentheses around a(13) again:
%e A307243 1,0,((1)),1,(1),(0),((0)),(1),1,(1),(1),(0),((1)),1,0,1,...
%e A307243 a(13) = 1 produces parentheses around a(15):
%e A307243 1,0,((1)),1,(1),(0),((0)),(1),1,(1),(1),(0),((1)),(1),(0),1,...
%e A307243 a(14) = 1 produces parentheses around a(16):
%e A307243 1,0,((1)),1,(1),(0),((0)),(1),1,(1),(1),(0),((1)),(1),(0),(1),...
%e A307243 a(15) = 0 produces parentheses around a(16) again:
%e A307243 1,0,((1)),1,(1),(0),((0)),(1),1,(1),(1),(0),((1)),(1),(0),((1)),...
%e A307243 Etc.
%e A307243 We see in this small example that the doubly parenthesized terms of the last line slowly reconstruct the starting sequence:
%e A307243 ((1)), ((0)), ((1)), ((1)), ...
%e A307243 The same holds for the singly parenthesized terms:
%e A307243 (1), (0), (1), (1), (1), (0), (1), (0), ...
%e A307243 And again by the non-parenthesized terms:
%e A307243 1, 0, 1, 1, ...
%Y A307243 Cf. A307183 (no distinction between underlined once or twice: two copies only of the starting sequence).
%K A307243 base,nonn,nice
%O A307243 1
%A A307243 _Eric Angelini_ and _Lars Blomberg_, Mar 30 2019
