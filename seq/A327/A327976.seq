%I A327976 #17 Oct 05 2019 18:21:01
%S A327976 5,23,73,359,1233,6143,19225,93495,325729,1518895,4833289,23453735,
%T A327976 81443089,398815039,1271974489,6168932215,21231239841,99197620591,
%U A327976 314863189193,1541326542823,5312985402193,26258203294847,82884499362201,400683454289591,1406328980294113,6532877164215983,20744329255918985,100303645024039591
%N A327976 Bitwise XOR of trajectories (centrally aligned) of rule 30, and its mirror image, rule 86, when both are started from a lone 1-bit, with the latter delayed by one step: a(n) = A110240(n) XOR 2*A265281(n-1).
%H A327976 Antti Karttunen, <a href="/A327976/b327976.txt">Table of n, a(n) for n = 1..1024</a>
%H A327976 Antti Karttunen, <a href="/A327976/a327976.png">Terms a(1)-a(256) drawn as binary strings, with 1 bit = 3x3 pixels resolution</a>
%H A327976 Antti Karttunen, <a href="/A327976/a327976_1.png">Terms a(1)-a(1024) drawn as binary strings, with 1 bit = 1 pixel resolution</a>
%H A327976 <a href="/index/Ce#cell">Index entries for sequences related to cellular automata</a>
%F A327976 a(n) = A110240(n) XOR 2*A265281(n-1) = A110240(n) XOR 2*A030101(A110240(n-1)).
%o A327976 (PARI)
%o A327976 A269160(n) = bitxor(n, bitor(2*n, 4*n)); \\ From A269160.
%o A327976 A110240(n) = if(!n,1,A269160(A110240(n-1)));
%o A327976 A327973(n) = bitxor(A110240(n), 2*A110240(n-1));
%o A327976 A269161(n) = bitxor(4*n, bitor(2*n, n));
%o A327976 A265281(n) = if(!n,1,A269161(A265281(n-1)));
%o A327976 A327976(n) = bitxor(A110240(n), 2*A265281(n-1));
%o A327976 \\ Use this one for writing b-files:
%o A327976 A030101(n) = if(n<1,0,subst(Polrev(binary(n)),x,2));
%o A327976 A327976write(up_to) = { my(s=1, t, n=0); for(n=1,up_to, t = A269160(s); write("b327976.txt", n, " ", bitxor(2*A030101(s), t)); s = t); };
%o A327976 (Python)
%o A327976 def A269160(n): return(n^((n<<1)|(n<<2)))
%o A327976 def A269161(n): return((n<<2)^((n<<1)|n))
%o A327976 def genA327976():
%o A327976     '''Yield successive terms of A327976.'''
%o A327976     s1 = 1
%o A327976     s2 = 1
%o A327976     while True:
%o A327976        s1 = A269160(s1)
%o A327976        yield (s1^(s2<<1))
%o A327976        s2 = A269161(s2)
%Y A327976 Cf. A110240, A265281, A269160, A269161, A030101, A327974 (gives the middle bit), A328108 (binary weight).
%Y A327976 Cf. also A327971, A327972, A327973, A328103, A328104 for other such combinations.
%K A327976 nonn
%O A327976 1,1
%A A327976 _Antti Karttunen_, Oct 04 2019
