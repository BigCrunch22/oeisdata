%I A327973 #16 Oct 06 2019 09:07:42
%S A327973 5,23,93,335,1493,5351,23853,85951,382405,1369943,6103965,21996687,
%T A327973 97906325,350709671,1562619373,5631262591,25064000389,89782414999,
%U A327973 400033474525,1441615751887,6416397448021,22984338788455,102408232210605,369052763468095,1642598765228869,5883986891577303,26216498605021469,94477513773305103
%N A327973 Bitwise XOR of two successive generations (centrally aligned) in the trajectory of rule 30 started from a lone 1 cell: a(n) = A110240(n) XOR 2*A110240(n-1).
%H A327973 Antti Karttunen, <a href="/A327973/b327973.txt">Table of n, a(n) for n = 1..1024</a>
%H A327973 Antti Karttunen, <a href="/A327973/a327973.png">Terms a(1)-a(256) drawn as binary strings, with 1 bit = 3x3 pixels resolution</a>
%H A327973 Antti Karttunen, <a href="/A327973/a327973_1.png">Terms a(1)-a(1024) drawn as binary strings, with 1 bit = 1 pixel resolution</a>
%H A327973 <a href="/index/Ce#cell">Index entries for sequences related to cellular automata</a>
%F A327973 a(n) = A110240(n) XOR 2*A110240(n-1).
%o A327973 (PARI)
%o A327973 A269160(n) = bitxor(n, bitor(2*n, 4*n)); \\ From A269160.
%o A327973 A110240(n) = if(!n,1,A269160(A110240(n-1)));
%o A327973 A327973(n) = bitxor(A110240(n), 2*A110240(n-1));
%o A327973 \\ Use this one for writing b-files:
%o A327973 A327973write(up_to) = { my(s=1, t, n=0); for(n=1,up_to, t = A269160(s); write("b327973.txt", n, " ", bitxor(2*s, t)); s = t); };
%o A327973 (Python)
%o A327973 def A269160(n): return(n^((n<<1)|(n<<2)))
%o A327973 def genA327973():
%o A327973     '''Yield successive terms of A327973.'''
%o A327973     s = 1
%o A327973     while True:
%o A327973        t = A269160(s)
%o A327973        yield (t^(s<<1))
%o A327973        s = t
%Y A327973 Cf. A110240, A269160, A327974 (gives the middle bit), A328107 (binary weight of terms).
%Y A327973 Cf. also A327971, A327972, A327976, A328103, A328104 for other such combinations.
%K A327973 nonn
%O A327973 1,1
%A A327973 _Antti Karttunen_, Oct 03 2019
