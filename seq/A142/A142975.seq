%I A142975 #37 Feb 24 2023 11:33:26
%S A142975 1,1,3,7,17,43,109,281,727,1891,4929,12871,33641,87985,230203,602447,
%T A142975 1576849,4127635,10805301,28287049,74053871,193871371,507555073,
%U A142975 1328785487,3478787857,9107556193,23843845299,62423922391,163427829137,427859414971,1120150172989
%N A142975 n-th term of the Fibonacci-type sequence x(1)=1, x(2)=Fibonacci(n), x(k+1)=x(k)+x(k-1) for k>1.
%C A142975 Original definition:
%C A142975 This sequence is derived from the Fibonacci sequence. Think of it as the Fibonacci sequence applied to itself. The sequence is generated by taking the n-th element of a recursive sequence whose first terms are 1 and the n-th element Fibonacci term.
%H A142975 Harvey P. Dale, <a href="/A142975/b142975.txt">Table of n, a(n) for n = 1..1000</a>
%H A142975 <a href="/index/Rec#order_05">Index entries for linear recurrences with constant coefficients</a>, signature (3,1,-5,-1,1).
%F A142975 a(n) = fib(1,fib(1,1,n),n).
%F A142975 a(n) = Fibonacci(n-1) * Fibonacci(n) + Fibonacci(n-2) = A001654(n-1)+A000045(n-2).
%F A142975 G.f.: (x^5-2*x^4+x^3+2*x^2-x) / (x^5-x^4-5*x^3+x^2+3*x-1).
%e A142975 The fifth term, 17, would be computed by hand like this:
%e A142975 1) Generate the first five values of the Fibonacci sequence: 1,1,2,3,5
%e A142975 2) The result of step 1 is the second value of the Fibonacci-type sequence used in computing 17.
%e A142975 3) Thus we know the first two terms of our Fibonacci-type sequence: 1,5...
%e A142975 4) The sequence can be extended through recursive addition f(n) = f(n-1) + f(n- 2): 1,5,6,11,17
%e A142975 5) The fifth element of this sequence is 17 and thus the answer.
%p A142975 F:= combinat[fibonacci]:
%p A142975 seq(F(n-1)*F(n)+F(n-2), n=1..32);
%t A142975 fts[{a_,b_,c_}]:=b*c+a; fts/@Partition[Fibonacci[Range[-1,30]],3,1] (* or *) LinearRecurrence[ {3,1,-5,-1,1},{1,1,3,7,17},40] (* _Harvey P. Dale_, Nov 24 2016 *)
%o A142975 (Python)
%o A142975 def fib(arb1,arb2,nth):
%o A142975     if nth == 0:
%o A142975             return arb1
%o A142975     if nth == 1:
%o A142975             return arb2
%o A142975     x = [0]*nth
%o A142975     x[0] = arb1
%o A142975     x[1] = arb2
%o A142975     for i in range(2,nth,1):
%o A142975             x[i] = x[i-1]+x[i-2]
%o A142975     return x[-1]
%o A142975 def fib2d(n):
%o A142975     return fib(1,fib(1,1,n),n)
%o A142975 [fib2d(i) for i in range(1,10)]
%o A142975 # the function fib2d will return the n-th term of the sequence.
%Y A142975 Cf. A000045, A143077.
%K A142975 nonn,easy
%O A142975 1,3
%A A142975 Gregory Nisbet (gregory.nisbet(AT)gmail.com), Jul 15 2008
