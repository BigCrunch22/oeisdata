%I A360494 #12 Feb 09 2023 21:56:21
%S A360494 11,10,101111,10010111,110111111101001,111110100001,11000011101101111,
%T A360494 10011110011011110110110011,110100000010101111110001010011001110001,
%U A360494 1000000010000011110100010001000101001010110111001,10100001011000101000110101011011011101111110100101011
%N A360494 a(n) is the least number that is prime when interpreted in bases 2 to n, but not n+1.
%C A360494 Since a(n) must be a valid base-2 integer, it can only have digits 0 and 1.
%e A360494 a(4) = 101111 because 101111 interpreted in base-2 is 47 (prime), base-3 is 283 (prime), base-4 is 1109 (prime), but base-5 is 3281 (not prime).
%p A360494 V:= Vector(9): count:= 0:
%p A360494 f:= proc(n) local L,P,x,b,i;
%p A360494       L:= convert(n,base,10);
%p A360494       P:= add(L[i]*x^(i-1),i=1..nops(L));
%p A360494       for b from 2 do if not isprime(eval(P,x=b)) then return b-1 fi od
%p A360494 end proc:
%p A360494 for i from 1 while count < 8 do
%p A360494   X:= convert(i,binary);
%p A360494   v:= f(X);
%p A360494   if v >= 1 and v <= 9 and V[v] = 0 then
%p A360494     V[v]:= X;
%p A360494     count:= count+1;
%p A360494   fi
%p A360494 od:
%p A360494 convert(V[2..9],list);
%o A360494 (Python)
%o A360494 from sympy import isprime
%o A360494 from itertools import count, islice, product
%o A360494 def f(s): return next(b-1 for b in count(2) if not isprime(int(s, b)))
%o A360494 def agen():
%o A360494     n, adict = 2, {2:11, 3:10}
%o A360494     for d in count(3):
%o A360494         for b in product("01", repeat=d-2):
%o A360494             s = "1" + "".join(b) + "1"
%o A360494             v = f(s)
%o A360494             if v not in adict: adict[v] = int(s)
%o A360494             while n in adict: yield adict[n]; n += 1
%o A360494 print(list(islice(agen(), 7))) # _Michael S. Branicky_, Feb 09 2023
%Y A360494 Cf. A086884.
%K A360494 nonn,base
%O A360494 2,1
%A A360494 _Robert Israel_, Feb 09 2023
%E A360494 a(10)-a(12) using A086884 from _Michael S. Branicky_, Feb 09 2023
