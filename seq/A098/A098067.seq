%I A098067 #40 Dec 03 2021 04:20:06
%S A098067 12,3,4,5,6,7,8,9,10,1,112,13,14,15,16,17,18,19,20,2,122,23,24,25,26,
%T A098067 27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,
%U A098067 50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73
%N A098067 Consider the succession of single digits of the positive integers: 1 2 3 4 5 6 7 8 9 1 0 1 1 1 2 1 3 1 4 1 5 1 6 ... (A007376). This sequence is the lexicographically earliest derangement of the positive integers that produces the same succession of digits.
%C A098067 Derangement here means that a(n) != n.
%H A098067 Paul Tek, <a href="/A098067/b098067.txt">Table of n, a(n) for n = 1..10000</a>
%H A098067 Eric Angelini, <a href="http://www.pourlascience.fr/ewb_pages/a/article-jeux-de-suites-19006.php">Jeux de suites</a>, in Dossier Pour La Science, pp. 32-35, Volume 59 (Jeux math'), April/June 2008, Paris.
%H A098067 Paul Tek, <a href="/A098067/a098067.txt">PERL program for this sequence</a>
%e A098067 We must begin with "1,2,3,..." and we cannot have a(1) = 1, so the first possible term is "12". The next term must be the smallest available positive integer not leading to a contradiction, thus "3"; the next one will be "4"; etc. After a(10) = 1, we cannot have a(11) = 11, so we use "112" instead. We are not allowed to use "2" after "19" because the next term would have a leading zero, which is forbidden. - _Eric Angelini_, Aug 12 2008
%t A098067 lim = 80; f[lst_List, k_] := Block[{L = lst, g, a = {}, m = 0}, g[] := {Set[m, First@ FromDigits@ Append[IntegerDigits@ m, First@ #]], Set[L, Last@ #]} &@ TakeDrop[L, 1]; Do[g[]; While[Or[m == Length@ a + 1, First@ L == 0, MemberQ[a, m]], g[]]; AppendTo[a, m]; m = 0, {k}]; a]; f[Flatten@ Map[IntegerDigits, Range@ lim], Floor[lim - 10^(Log10@ lim - 1)]] (* _Michael De Vlieger_, Nov 29 2015, Version 10.2 *)
%o A098067 (Perl) See Link section.
%o A098067 (Python)
%o A098067 from itertools import count
%o A098067 def diggen():
%o A098067     for k in count(1): yield from list(map(int, str(k)))
%o A098067 def aupton(terms):
%o A098067     g = diggen()
%o A098067     alst, aset, _, _, nextd = [12], {12}, next(g), next(g), next(g)
%o A098067     for n in range(2, terms+1):
%o A098067         an, nextd = nextd, next(g)
%o A098067         while an in aset or an == n or nextd == 0:
%o A098067             an, nextd = int(str(an) + str(nextd)), next(g)
%o A098067         alst.append(an); aset.add(an)
%o A098067     return alst
%o A098067 print(aupton(72)) # _Michael S. Branicky_, Dec 03 2021
%Y A098067 Cf. A097487, A097968, A098099, A228595.
%K A098067 nonn,nice,base
%O A098067 1,1
%A A098067 _Eric Angelini_, Sep 13 2004
%E A098067 Corrected and extended by _Jacques ALARDET_ and _Eric Angelini_, Aug 12 2008
%E A098067 Derangement wording introduced by _Danny Rorabaugh_, Nov 26 2015
%E A098067 Edited by _Danny Rorabaugh_, Nov 29 2015
