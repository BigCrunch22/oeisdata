%I A378121 #18 Nov 19 2024 01:03:57
%S A378121 19,41,49,59,67,107,109,161,177,179,197,201,205,211,223,227,229,239,
%T A378121 247,263,269,277,295,301,307,317,323,327,335,349,353,361,367,394,409,
%U A378121 413,421,447,449,454,467,475,499,502,509,526,529,533,538,541,557,566,577,601,603,607
%N A378121 Numbers missing from all Fibonacci/tribonacci sequences that start with 1, 1, 1.
%C A378121 Start with 1, 1, 1.  Form a sequence where further terms are the sum of the last 2 or 3 terms.  These numbers do not appear in any such sequence.
%e A378121 10 is not a term because of 1,1,1,2,3,5,10.
%e A378121 11 is not a term because of 1,1,1,2,4,7,11.
%e A378121 12 is not a term because of 1,1,1,2,4,6,12.
%e A378121 13 is not a term because of 1,1,1,3,5,8,13.
%e A378121 14 is not a term because of 1,1,1,3,5,9,14.
%e A378121 19 is a term because it is not a member of any such sequence.
%t A378121 s[3] = {{1, 1, 1}};
%t A378121 s[n_] := s[n] = Sort[ Map[Append[#, Total[Take[#, -2]]] &, s[n - 1]] ~Join~ Map[Append[#, Total[Take[#, -3]]] &, s[n - 1]]]
%t A378121 Complement[Range[1000], Flatten[s[17]]]
%o A378121 (Python)
%o A378121 from itertools import islice
%o A378121 def agen(): # generator of terms
%o A378121     t, seen, m, f, g = [(1, 1, 1)], {1}, 1, 1, 2
%o A378121     while True:
%o A378121         s, t, f, g = t, [], g, f+g
%o A378121         while s:
%o A378121             q = s.pop()
%o A378121             qq = q[-2:]
%o A378121             t2, t3 = sum(qq), sum(q)
%o A378121             seen.update([t2, t3])
%o A378121             t.extend([qq+(t2,), qq+(t3,)])
%o A378121         for i in range(m, f+1):
%o A378121             m = i + 1
%o A378121             if i in seen: seen.discard(i)
%o A378121             else: yield i
%o A378121 print(list(islice(agen(), 72))) # _Michael S. Branicky_, Nov 17 2024
%Y A378121 Cf. A000045, A000213.
%K A378121 nonn
%O A378121 1,1
%A A378121 _Erich Friedman_, Nov 17 2024
