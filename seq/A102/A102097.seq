%I A102097 #9 Feb 16 2025 08:32:55
%S A102097 1,1,1,1,1,1,1,2,1,1,1,2,1,1,1,2,1,2,1,2,1,1,1,2,1,1,3,2,1,2,1,2,1,1,
%T A102097 1,3,1,1,1,2,1,2,1,2,3,1,1,3,1,2,1,2,1,3,1,2,1,1,1,3,1,1,3,4,1,2,1,2,
%U A102097 1,2,1,3,1,1,3,2,1,2,1,4,3,1,1,3
%N A102097 Least edge length of a cuboid having integer edge lengths, volume n and minimal surface area under those restrictions.
%C A102097 Finding a(n) given n is a fundamental problem from integer nonlinear programming, equivalent to minimizing the sum a+b+c when a*b*c=n and a,b,c are integers. a(n) is not strictly prime. a(n) = 1 iff n is prime or n is semiprime (a(1)=1). a(n) <= n^(1/3) for all n.
%H A102097 Hans Havermann, <a href="/A102097/b102097.txt">Table of n, a(n) for n = 1..10000</a>
%H A102097 Eric Weisstein's World of Mathematics, <a href="https://mathworld.wolfram.com/Cuboid.html">Cuboid</a>
%H A102097 Eric Weisstein's World of Mathematics, <a href="https://mathworld.wolfram.com/SampleVariance.html">Sample Variance</a>
%H A102097 Wikipedia, <a href="http://en.wikipedia.org/wiki/Nonlinear_programming">Nonlinear programming</a>
%e A102097 a(10) = 1 because the cuboid of integer edge lengths, volume = 10 and minimal possible surface area under those restrictions has edge lengths {5,2,1}
%t A102097 Clear[fac, faclist, red, bool, n, a, b, c, i, ai, bi, ci]
%t A102097 red[n_] := Reduce[{a*b*c == n, a >= b >= c > 0}, {a, b, c}, Integers];
%t A102097 faclist[n_] := (
%t A102097 If[PrimeQ[n] || n == 1, Return[{n + 1 + 1, {n, 1, 1}}]; Abort[]];
%t A102097 bool = red[n];
%t A102097 Reap[For[i = 1, i <= Length[bool], i++,
%t A102097 ai = bool[[i]][[1]][[2]];
%t A102097 bi = bool[[i]][[2]][[2]];
%t A102097 ci = bool[[i]][[3]][[2]];
%t A102097 Sow[{ai + bi + ci, {ai, bi, ci}}]]][[2]][[1]])
%t A102097 fac[n_] := (
%t A102097 If[PrimeQ[n] || n == 1, Return[{n, 1, 1}]; Abort[]];
%t A102097 faclist[n][[1]][[2]])
%t A102097 Table[fac[k][[3]], {k, 1, 84}]
%Y A102097 Cf. A102095, A102096.
%K A102097 nonn,changed
%O A102097 1,8
%A A102097 Joseph Biberstine (jrbibers(AT)indiana.edu), Dec 29 2004
