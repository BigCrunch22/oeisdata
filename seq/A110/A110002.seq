%I A110002 #17 Apr 01 2024 10:05:46
%S A110002 1,2,3,4,5,6,7,8,9,22,44,222,292,414,646,717,848,979,27072,28882,
%T A110002 45954,74247,90109,96569,118811,2376732,5136315,5185815,5266625,
%U A110002 5635365,5684865,6344436,7424247,7481847,7484847,7929297,9858589,12333321,21922912,32255223
%N A110002 Palindromes whose perfect deficiency (A109883) is also palindromic.
%H A110002 Michael S. Branicky, <a href="/A110002/b110002.txt">Table of n, a(n) for n = 1..101</a> (all terms < 10^14)
%t A110002 subtract = If[ #1 < #2, Throw[ #1], #1 - #2]&;d[n_] := Catch @ Fold[subtract, n, Divisors @ n];Select[Range[10000000],PalindromeQ[#]&&PalindromeQ[d[#]]&] (* _James C. McMahon_, Mar 31 2024 *)
%o A110002 (Python) # uses imports, function in A109883
%o A110002 from itertools import count, islice, product
%o A110002 def ispal(n): return (s:=str(n)) == s[::-1]
%o A110002 def pals(): # generator of palindromes
%o A110002     digits = "0123456789"
%o A110002     yield from map(int, digits)
%o A110002     for d in count(2):
%o A110002         for f in "123456789":
%o A110002             for p in product(digits, repeat=d//2-1):
%o A110002                 left = f + "".join(p); right = left[::-1]
%o A110002                 for mid in [[""], digits][d%2]:
%o A110002                     yield int(left + mid + right)
%o A110002 def agen(): yield from (p for p in pals() if p>0 and ispal(A109883(p)))
%o A110002 print(list(islice(agen(), 40))) # _Michael S. Branicky_, Mar 31 2024
%Y A110002 Cf. A002113, A109883.
%K A110002 base,nonn
%O A110002 1,2
%A A110002 _Jason Earls_, Sep 02 2005
%E A110002 a(38) and beyond from _Michael S. Branicky_, Mar 31 2024
