%I A063171 #62 Nov 28 2023 18:35:34
%S A063171 0,10,1010,1100,101010,101100,110010,110100,111000,10101010,10101100,
%T A063171 10110010,10110100,10111000,11001010,11001100,11010010,11010100,
%U A063171 11011000,11100010,11100100,11101000,11110000,1010101010,1010101100,1010110010,1010110100,1010111000
%N A063171 Dyck language interpreted as binary numbers in ascending order.
%C A063171 a(n) is the binary expansion of A014486(n). - _Joerg Arndt_, Feb 27 2013
%C A063171 Replacing "1" by "(" and "0" by ")" yields well-formed bracket expressions (the first term being the empty string)
%C A063171   , (), ()(), (()), ()()(), ()(()), (())(), (()()), ((())), ()()()(), ()()(()), ()(())(), ()(()()), ()((())), (())()(), (())(()), (()())(), (()()()), (()(())), ((()))(), ((())()), ((()())), (((()))), ()()()()(), ()()()(()), ()()(())(), ()()(()()), ()()((())), ()(())()(), ()(())(()), ()(()())(), ()(()()()), ()(()(())), ()((()))(), ()((())()), ()((()())), ()(((()))), (())()()(), (())()(()), (())(())(), (())(()()), (())((())), (()())()(), (()())(()), (()()())(), (()()()()), (()()(())), (()(()))(), (()(())()), (()(()())), (()((()))), ((()))()(), ((()))(()), ((())())(), ((())()()), ((())(())), ((()()))(), ((()())()), ((()()())), ((()(()))), (((())))(), (((()))()), (((())())), (((()()))), ((((()))))
%C A063171 The term a(0)=0 stands for the empty string. - _Joerg Arndt_, Feb 27 2013
%C A063171 (Which is actually a leading 0, shown only for zero so that it has a visible representation.) - _Daniel Forgues_, Feb 27 2013
%H A063171 Reinhard Zumkeller, <a href="/A063171/b063171.txt">Table of n, a(n) for n = 0..2055</a>
%H A063171 Gennady Eremin, <a href="https://arxiv.org/abs/1909.07675">Dynamics of balanced parentheses, lexicographic series and Dyck polynomials</a>, arXiv:1909.07675 [math.CO], 2019.
%H A063171 FindStat - Combinatorial Statistic Finder, <a href="http://www.findstat.org/DyckPaths">Dyck paths</a>
%H A063171 A. Karttunen, <a href="https://web.archive.org/web/20070202072844/http://ndirty.cute.fi/~karttu/matikka/Nekomorphisms/a014486.ps.gz">Illustration of initial terms up to size n=7</a>
%H A063171 A. Karttunen, <a href="http://oeis.org/wiki/Catalan_Automorphisms">Catalan Automorphisms</a>
%H A063171 R. J. Mathar, <a href="http://arxiv.org/abs/1603.00077">Topologically Distinct Sets of Non-intersecting Circles in the Plane</a>, arXiv:1603.00077 [math.CO], 2016.
%H A063171 Indranil Ghosh, <a href="/A063171/a063171.txt">Python program for computing this sequence</a>
%F A063171 Chomsky-2 grammar with axiom s, terminal alphabet {0, 1} and three rules s -> ss, s -> 1s0, s ->10.
%F A063171 a(n) = A071152(n)/2.
%F A063171 a(n) = A007088(A014486(n)).
%e A063171 s -> ss -> 1s0s -> 11s00s -> 111000s -> 11100010
%t A063171 balancedQ[0] = True; balancedQ[n_] := (s = 0; Do[s += If[b == 1, 1, -1]; If[s < 0, Return[False]], {b, IntegerDigits[n, 2]}]; Return[s == 0]); FromDigits /@ IntegerDigits[ Select[Range[0, 684], balancedQ], 2] (* _Jean-FranÃ§ois Alcover_, Jul 24 2013 *)
%o A063171 (Haskell)
%o A063171 import Data.Set (singleton, deleteFindMin, union, fromList)
%o A063171 newtype Word = Word String deriving (Eq, Show, Read)
%o A063171 instance Ord Word where
%o A063171    Word us <= Word vs | length us == length vs = us <= vs
%o A063171                       | otherwise              = length us <= length vs
%o A063171 a063171 n = a063171_list !! (n-1)
%o A063171 a063171_list = dyck $ singleton (Word "S") where
%o A063171    dyck s | null ws   = (read w :: Integer) : dyck s'
%o A063171           | otherwise = dyck $ union s' (fromList $ concatMap gen ws)
%o A063171           where ws = filter ((== 'S') . head . snd) $
%o A063171                             map (`splitAt` w) [0..length w - 1]
%o A063171                 (Word w, s') = deleteFindMin s
%o A063171    gen (us,vs) = map (Word . (us ++) . (++ tail vs)) ["10", "1S0", "SS"]
%o A063171 -- _Reinhard Zumkeller_, Mar 09 2011
%o A063171 (Python)
%o A063171 def A063171_list(limit):
%o A063171     return [0] + [int(bin(k)[2::]) for k in range(1, limit) if is_A014486(k)]
%o A063171 print(A063171_list(700))  # _Peter Luschny_, Jul 30 2022
%o A063171 (Python)
%o A063171 from itertools import count, islice
%o A063171 from sympy.utilities.iterables import multiset_permutations
%o A063171 def A063171_gen(): # generator of terms
%o A063171     yield 0
%o A063171     for l in count(1):
%o A063171         for s in multiset_permutations('0'*l+'1'*(l-1)):
%o A063171             c, m = 0, (l<<1)-1
%o A063171             for i in range(m):
%o A063171                 if s[i] == '1':
%o A063171                     c += 2
%o A063171                 if c<i:
%o A063171                     break
%o A063171             else:
%o A063171                 yield 10**m+int(''.join(s))
%o A063171 A063171_list = list(islice(A063171_gen(),30)) # _Chai Wah Wu_, Nov 28 2023
%Y A063171 Cf. A007088, A071153.
%Y A063171 A014486 gives these terms as converted from decimal to binary system.
%K A063171 base,nonn,changed
%O A063171 0,2
%A A063171 _Reinhard Zumkeller_, Jul 09 2001
%E A063171 a(0)=0 prepended by _Joerg Arndt_, Feb 27 2013
