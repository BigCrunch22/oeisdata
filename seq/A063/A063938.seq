%I A063938 #45 Feb 16 2025 08:32:45
%S A063938 1,2,3,4,5,6,7,8,9,10,12,14,15,16,18,20,21,24,25,27,28,30,32,35,36,40,
%T A063938 42,45,48,49,50,54,56,60,63,64,70,72,75,80,81,84,88,90,91,92,96,98,
%U A063938 100,105,108,112,115,120,125,126,128,135,140,144,147,150,160,161,162,168
%N A063938 Numbers k that divide tau(k), where tau(k)=A000594(k) is Ramanujan's tau function.
%C A063938 Although most small numbers are in the sequence, it becomes sparser for larger values; e.g., only 504 numbers up to 10000 and only 184 numbers from 10001 to 20000 are in the sequence.
%H A063938 Seiichi Manyama, <a href="/A063938/b063938.txt">Table of n, a(n) for n = 1..10000</a>
%H A063938 Eric Weisstein's World of Mathematics, <a href="https://mathworld.wolfram.com/TauFunction.html">Tau Function.</a>
%t A063938 (* First do <<NumberTheory`Ramanujan` *) test[n_] := Mod[RamanujanTau[n], n]==0; Select[Range[200], test]
%t A063938 (* Second program: *)
%t A063938 Select[Range@ 168, Divisible[RamanujanTau@ #, #] &] (* _Michael De Vlieger_, Dec 23 2017 *)
%o A063938 (PARI) for (n=1,1000,if(Mod(ramanujantau(n),n)==0,print1(n", "))) \\ _Dana Jacobsen_, Sep 06 2015
%o A063938 (Perl) use ntheory ":all"; my @p = grep { !(ramanujan_tau($_) % $_) } 1..1000; say "@p"; # _Dana Jacobsen_, Sep 06 2015
%o A063938 (Python)
%o A063938 from itertools import count, islice
%o A063938 from sympy import divisor_sigma
%o A063938 def A063938_gen(startvalue=1): # generator of terms >= startvalue
%o A063938     return filter(lambda n: not -840*(pow(m:=n+1>>1,2,n)*(0 if n&1 else pow(m*divisor_sigma(m),2,n))+(sum(pow(i,4,n)*divisor_sigma(i)*divisor_sigma(n-i) for i in range(1,m))<<1)) % n, count(max(startvalue,1)))
%o A063938 A063938_list = list(islice(A063938_gen(),25)) # _Chai Wah Wu_, Nov 08 2022
%Y A063938 For the sequence when n is prime see A007659.
%Y A063938 Cf. A063940, A000594, A079334, A296991, A296993.
%K A063938 nonn,easy,changed
%O A063938 1,2
%A A063938 _Robert G. Wilson v_, Aug 31 2001
%E A063938 More terms from _Dean Hickerson_, Jan 03 2003
