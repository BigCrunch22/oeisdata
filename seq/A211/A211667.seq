%I A211667 #18 Dec 09 2018 03:29:56
%S A211667 0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
%T A211667 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
%U A211667 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
%N A211667 Number of iterations sqrt(sqrt(sqrt(...(n)...))) such that the result is < 2.
%C A211667 Different from A001069, but equal for n < 256.
%F A211667 a(2^(2^n)) = a(2^(2^(n-1))) + 1, for n >= 1.
%F A211667 G.f.: g(x) = 1/(1-x)*Sum_{k>=0} x^(2^(2^k))
%F A211667   = (x^2 + x^4 + x^16 + x^256 + x^65536 + ...)/(1 - x).
%e A211667 a(n) = 1, 2, 3, 4, 5, ... for n = 2^1, 2^2, 2^4, 2^8, 2^16, ..., i.e., n = 2, 4, 16, 256, 65536, ... = A001146.
%t A211667 a[n_] := Length[NestWhileList[Sqrt, n, # >= 2 &]] - 1; Array[a, 100] (* _Amiram Eldar_, Dec 08 2018 *)
%o A211667 (PARI) apply( A211667(n, c=0)={while(n>=2, n=sqrtint(n); c++); c}, [1..50]) \\ This defines the function A211667. The apply(...) provides a check and illustration. - _M. F. Hasler_, Dec 07 2018
%Y A211667 Cf. A001069, A001146, A010096, A211662, A211668, A211670.
%K A211667 nonn
%O A211667 1,4
%A A211667 _Hieronymus Fischer_, Apr 30 2012
